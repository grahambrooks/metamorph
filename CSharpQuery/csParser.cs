// $ANTLR 3.2 Sep 23, 2009 12:02:23 cs.g 2010-06-20 17:05:32

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 168, 219
// Unreachable code detected.
#pragma warning disable 162


using System;
using System.Collections.Generic;
using Antlr.Runtime;
using Stack = System.Collections.Generic.Stack<object>;
using List = System.Collections.IList;
using ArrayList = System.Collections.Generic.List<object>;
using Map = System.Collections.IDictionary;
using HashMap = System.Collections.Generic.Dictionary<object, object>;
public partial class csParser : Parser
{
    public static readonly string[] tokenNames = new string[] 
	{
        "<invalid>", 
		"<EOR>", 
		"<DOWN>", 
		"<UP>", 
		"IDENTIFIER", 
		"Real_literal", 
		"NUMBER", 
		"Hex_number", 
		"Character_literal", 
		"STRINGLITERAL", 
		"Verbatim_string_literal", 
		"TRUE", 
		"FALSE", 
		"NULL", 
		"DOT", 
		"PTR", 
		"MINUS", 
		"GT", 
		"USING", 
		"ENUM", 
		"IF", 
		"ELIF", 
		"ENDIF", 
		"DEFINE", 
		"UNDEF", 
		"SEMI", 
		"RPAREN", 
		"WS", 
		"TS", 
		"DOC_LINE_COMMENT", 
		"LINE_COMMENT", 
		"COMMENT", 
		"EscapeSequence", 
		"Verbatim_string_literal_character", 
		"Decimal_digits", 
		"INTEGER_TYPE_SUFFIX", 
		"Decimal_integer_literal", 
		"GooBallIdentifier", 
		"GooBall", 
		"IdentifierStart", 
		"IdentifierPart", 
		"Exponent_part", 
		"Real_type_suffix", 
		"Pragma", 
		"PP_CONDITIONAL", 
		"PREPROCESSOR_DIRECTIVE", 
		"IF_TOKEN", 
		"DEFINE_TOKEN", 
		"ELSE_TOKEN", 
		"ENDIF_TOKEN", 
		"UNDEF_TOKEN", 
		"PP_EXPRESSION", 
		"PP_OR_EXPRESSION", 
		"PP_AND_EXPRESSION", 
		"PP_EQUALITY_EXPRESSION", 
		"PP_UNARY_EXPRESSION", 
		"PP_PRIMARY_EXPRESSION", 
		"HEX_DIGIT", 
		"HEX_DIGITS", 
		"DECIMAL_DIGIT", 
		"Sign", 
		"'namespace'", 
		"'{'", 
		"'}'", 
		"'extern'", 
		"'alias'", 
		"'='", 
		"'partial'", 
		"'new'", 
		"'public'", 
		"'protected'", 
		"'private'", 
		"'internal'", 
		"'unsafe'", 
		"'abstract'", 
		"'sealed'", 
		"'static'", 
		"'readonly'", 
		"'volatile'", 
		"'virtual'", 
		"'override'", 
		"'const'", 
		"'void'", 
		"'this'", 
		"'::'", 
		"'base'", 
		"'['", 
		"']'", 
		"'('", 
		"','", 
		"':'", 
		"'out'", 
		"'ref'", 
		"'sizeof'", 
		"'checked'", 
		"'unchecked'", 
		"'default'", 
		"'delegate'", 
		"'typeof'", 
		"'<'", 
		"'*'", 
		"'?'", 
		"'++'", 
		"'--'", 
		"'+'", 
		"'!'", 
		"'~'", 
		"'+='", 
		"'-='", 
		"'*='", 
		"'/='", 
		"'%='", 
		"'&='", 
		"'|='", 
		"'^='", 
		"'<<='", 
		"'>='", 
		"'&'", 
		"'/'", 
		"'%'", 
		"'<<'", 
		"'<='", 
		"'is'", 
		"'as'", 
		"'=='", 
		"'!='", 
		"'^'", 
		"'|'", 
		"'&&'", 
		"'||'", 
		"'??'", 
		"'=>'", 
		"'into'", 
		"'from'", 
		"'in'", 
		"'join'", 
		"'on'", 
		"'equals'", 
		"'let'", 
		"'orderby'", 
		"'ascending'", 
		"'descending'", 
		"'select'", 
		"'group'", 
		"'by'", 
		"'where'", 
		"'assembly'", 
		"'module'", 
		"'field'", 
		"'event'", 
		"'method'", 
		"'param'", 
		"'property'", 
		"'return'", 
		"'type'", 
		"'class'", 
		"'get'", 
		"'set'", 
		"'add'", 
		"'remove'", 
		"'sbyte'", 
		"'byte'", 
		"'short'", 
		"'ushort'", 
		"'int'", 
		"'uint'", 
		"'long'", 
		"'ulong'", 
		"'char'", 
		"'struct'", 
		"'__arglist'", 
		"'params'", 
		"'interface'", 
		"'operator'", 
		"'implicit'", 
		"'explicit'", 
		"'fixed'", 
		"'var'", 
		"'dynamic'", 
		"'stackalloc'", 
		"'else'", 
		"'switch'", 
		"'case'", 
		"'while'", 
		"'do'", 
		"'for'", 
		"'foreach'", 
		"'break'", 
		"'continue'", 
		"'goto'", 
		"'throw'", 
		"'try'", 
		"'catch'", 
		"'finally'", 
		"'lock'", 
		"'yield'", 
		"'bool'", 
		"'decimal'", 
		"'double'", 
		"'float'", 
		"'object'", 
		"'string'", 
		"'pragma'"
    };

    public const int DECIMAL_DIGIT = 59;
    public const int T__159 = 159;
    public const int T__158 = 158;
    public const int Character_literal = 8;
    public const int T__160 = 160;
    public const int T__167 = 167;
    public const int EOF = -1;
    public const int T__168 = 168;
    public const int T__165 = 165;
    public const int T__166 = 166;
    public const int T__163 = 163;
    public const int T__164 = 164;
    public const int T__161 = 161;
    public const int T__162 = 162;
    public const int ELSE_TOKEN = 48;
    public const int T__93 = 93;
    public const int T__94 = 94;
    public const int T__91 = 91;
    public const int RPAREN = 26;
    public const int T__92 = 92;
    public const int T__148 = 148;
    public const int T__147 = 147;
    public const int T__90 = 90;
    public const int T__149 = 149;
    public const int USING = 18;
    public const int PP_AND_EXPRESSION = 53;
    public const int Sign = 60;
    public const int T__154 = 154;
    public const int T__155 = 155;
    public const int T__156 = 156;
    public const int T__99 = 99;
    public const int T__157 = 157;
    public const int T__98 = 98;
    public const int T__150 = 150;
    public const int T__97 = 97;
    public const int T__151 = 151;
    public const int T__96 = 96;
    public const int T__152 = 152;
    public const int T__95 = 95;
    public const int T__153 = 153;
    public const int T__139 = 139;
    public const int T__138 = 138;
    public const int T__137 = 137;
    public const int T__136 = 136;
    public const int T__80 = 80;
    public const int T__81 = 81;
    public const int T__82 = 82;
    public const int T__83 = 83;
    public const int NUMBER = 6;
    public const int Decimal_integer_literal = 36;
    public const int DEFINE_TOKEN = 47;
    public const int T__141 = 141;
    public const int T__85 = 85;
    public const int T__142 = 142;
    public const int T__84 = 84;
    public const int T__87 = 87;
    public const int T__140 = 140;
    public const int T__86 = 86;
    public const int T__145 = 145;
    public const int T__89 = 89;
    public const int T__146 = 146;
    public const int T__88 = 88;
    public const int UNDEF_TOKEN = 50;
    public const int T__143 = 143;
    public const int T__144 = 144;
    public const int T__126 = 126;
    public const int ENDIF_TOKEN = 49;
    public const int T__125 = 125;
    public const int T__128 = 128;
    public const int T__127 = 127;
    public const int T__71 = 71;
    public const int WS = 27;
    public const int T__129 = 129;
    public const int T__72 = 72;
    public const int PP_PRIMARY_EXPRESSION = 56;
    public const int T__70 = 70;
    public const int GT = 17;
    public const int PP_EQUALITY_EXPRESSION = 54;
    public const int T__76 = 76;
    public const int T__75 = 75;
    public const int T__130 = 130;
    public const int T__74 = 74;
    public const int T__131 = 131;
    public const int T__73 = 73;
    public const int T__132 = 132;
    public const int T__133 = 133;
    public const int T__79 = 79;
    public const int T__134 = 134;
    public const int T__78 = 78;
    public const int T__135 = 135;
    public const int T__77 = 77;
    public const int T__118 = 118;
    public const int T__119 = 119;
    public const int T__116 = 116;
    public const int T__117 = 117;
    public const int T__114 = 114;
    public const int T__115 = 115;
    public const int T__124 = 124;
    public const int T__123 = 123;
    public const int T__122 = 122;
    public const int T__121 = 121;
    public const int T__120 = 120;
    public const int T__202 = 202;
    public const int T__107 = 107;
    public const int T__108 = 108;
    public const int T__109 = 109;
    public const int PREPROCESSOR_DIRECTIVE = 45;
    public const int T__103 = 103;
    public const int T__104 = 104;
    public const int T__105 = 105;
    public const int T__106 = 106;
    public const int T__111 = 111;
    public const int T__110 = 110;
    public const int T__113 = 113;
    public const int T__112 = 112;
    public const int TS = 28;
    public const int HEX_DIGIT = 57;
    public const int T__102 = 102;
    public const int T__101 = 101;
    public const int T__100 = 100;
    public const int MINUS = 16;
    public const int SEMI = 25;
    public const int Hex_number = 7;
    public const int ENUM = 19;
    public const int STRINGLITERAL = 9;
    public const int PP_UNARY_EXPRESSION = 55;
    public const int PP_OR_EXPRESSION = 52;
    public const int ENDIF = 22;
    public const int COMMENT = 31;
    public const int LINE_COMMENT = 30;
    public const int NULL = 13;
    public const int IdentifierStart = 39;
    public const int Verbatim_string_literal = 10;
    public const int IF_TOKEN = 46;
    public const int ELIF = 21;
    public const int T__200 = 200;
    public const int T__201 = 201;
    public const int PP_CONDITIONAL = 44;
    public const int FALSE = 12;
    public const int EscapeSequence = 32;
    public const int INTEGER_TYPE_SUFFIX = 35;
    public const int T__68 = 68;
    public const int T__69 = 69;
    public const int T__66 = 66;
    public const int T__67 = 67;
    public const int T__64 = 64;
    public const int T__65 = 65;
    public const int T__62 = 62;
    public const int Real_literal = 5;
    public const int T__63 = 63;
    public const int PP_EXPRESSION = 51;
    public const int GooBall = 38;
    public const int T__61 = 61;
    public const int DEFINE = 23;
    public const int IF = 20;
    public const int Exponent_part = 41;
    public const int T__199 = 199;
    public const int T__198 = 198;
    public const int T__197 = 197;
    public const int T__196 = 196;
    public const int T__195 = 195;
    public const int T__194 = 194;
    public const int T__193 = 193;
    public const int T__192 = 192;
    public const int T__191 = 191;
    public const int T__190 = 190;
    public const int IDENTIFIER = 4;
    public const int UNDEF = 24;
    public const int DOT = 14;
    public const int IdentifierPart = 40;
    public const int T__184 = 184;
    public const int T__183 = 183;
    public const int T__186 = 186;
    public const int T__185 = 185;
    public const int T__188 = 188;
    public const int T__187 = 187;
    public const int DOC_LINE_COMMENT = 29;
    public const int T__189 = 189;
    public const int GooBallIdentifier = 37;
    public const int T__180 = 180;
    public const int T__182 = 182;
    public const int T__181 = 181;
    public const int Pragma = 43;
    public const int Verbatim_string_literal_character = 33;
    public const int TRUE = 11;
    public const int PTR = 15;
    public const int T__175 = 175;
    public const int T__174 = 174;
    public const int T__173 = 173;
    public const int T__172 = 172;
    public const int T__179 = 179;
    public const int T__178 = 178;
    public const int T__177 = 177;
    public const int Decimal_digits = 34;
    public const int T__176 = 176;
    public const int T__171 = 171;
    public const int T__170 = 170;
    public const int Real_type_suffix = 42;
    public const int HEX_DIGITS = 58;
    public const int T__169 = 169;

    // delegates
    // delegators



        public csParser(ITokenStream input)
    		: this(input, new RecognizerSharedState()) {
        }

        public csParser(ITokenStream input, RecognizerSharedState state)
    		: base(input, state) {
            InitializeCyclicDFAs();
            this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[356+1];
             
             
        }
        

    override public string[] TokenNames {
		get { return csParser.tokenNames; }
    }

    override public string GrammarFileName {
		get { return "cs.g"; }
    }


    	protected bool is_class_modifier() 
    	{
    		return false;
    	}



    // $ANTLR start "compilation_unit"
    // cs.g:31:1: compilation_unit : namespace_body[true] ;
    public void compilation_unit() // throws RecognitionException [1]
    {   
        int compilation_unit_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 1) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:31:17: ( namespace_body[true] )
            // cs.g:32:2: namespace_body[true]
            {
            	PushFollow(FOLLOW_namespace_body_in_compilation_unit64);
            	namespace_body(true);
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 1, compilation_unit_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "compilation_unit"


    // $ANTLR start "namespace_declaration"
    // cs.g:34:1: namespace_declaration : 'namespace' qualified_identifier namespace_block ( ';' )? ;
    public void namespace_declaration() // throws RecognitionException [1]
    {   
        int namespace_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 2) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:34:22: ( 'namespace' qualified_identifier namespace_block ( ';' )? )
            // cs.g:35:2: 'namespace' qualified_identifier namespace_block ( ';' )?
            {
            	Match(input,61,FOLLOW_61_in_namespace_declaration73); if (state.failed) return ;
            	PushFollow(FOLLOW_qualified_identifier_in_namespace_declaration77);
            	qualified_identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_namespace_block_in_namespace_declaration81);
            	namespace_block();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:35:57: ( ';' )?
            	int alt1 = 2;
            	int LA1_0 = input.LA(1);

            	if ( (LA1_0 == SEMI) )
            	{
            	    alt1 = 1;
            	}
            	switch (alt1) 
            	{
            	    case 1 :
            	        // cs.g:35:57: ';'
            	        {
            	        	Match(input,SEMI,FOLLOW_SEMI_in_namespace_declaration85); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 2, namespace_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "namespace_declaration"


    // $ANTLR start "namespace_block"
    // cs.g:36:1: namespace_block : '{' namespace_body[false] '}' ;
    public void namespace_block() // throws RecognitionException [1]
    {   
        int namespace_block_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 3) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:36:16: ( '{' namespace_body[false] '}' )
            // cs.g:37:2: '{' namespace_body[false] '}'
            {
            	Match(input,62,FOLLOW_62_in_namespace_block94); if (state.failed) return ;
            	PushFollow(FOLLOW_namespace_body_in_namespace_block98);
            	namespace_body(false);
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,63,FOLLOW_63_in_namespace_block103); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 3, namespace_block_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "namespace_block"


    // $ANTLR start "namespace_body"
    // cs.g:38:1: namespace_body[bool bGlobal] : ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? ;
    public void namespace_body(bool bGlobal) // throws RecognitionException [1]
    {   
        int namespace_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 4) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:38:29: ( ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? )
            // cs.g:39:2: ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )?
            {
            	// cs.g:39:2: ( extern_alias_directives )?
            	int alt2 = 2;
            	int LA2_0 = input.LA(1);

            	if ( (LA2_0 == 64) )
            	{
            	    int LA2_1 = input.LA(2);

            	    if ( (LA2_1 == 65) )
            	    {
            	        alt2 = 1;
            	    }
            	}
            	switch (alt2) 
            	{
            	    case 1 :
            	        // cs.g:39:2: extern_alias_directives
            	        {
            	        	PushFollow(FOLLOW_extern_alias_directives_in_namespace_body112);
            	        	extern_alias_directives();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:39:29: ( using_directives )?
            	int alt3 = 2;
            	int LA3_0 = input.LA(1);

            	if ( (LA3_0 == USING) )
            	{
            	    alt3 = 1;
            	}
            	switch (alt3) 
            	{
            	    case 1 :
            	        // cs.g:39:29: using_directives
            	        {
            	        	PushFollow(FOLLOW_using_directives_in_namespace_body117);
            	        	using_directives();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:39:49: ( global_attributes )?
            	int alt4 = 2;
            	int LA4_0 = input.LA(1);

            	if ( (LA4_0 == 86) )
            	{
            	    int LA4_1 = input.LA(2);

            	    if ( ((LA4_1 >= 146 && LA4_1 <= 147)) )
            	    {
            	        int LA4_3 = input.LA(3);

            	        if ( (LA4_3 == 90) )
            	        {
            	            alt4 = 1;
            	        }
            	    }
            	}
            	switch (alt4) 
            	{
            	    case 1 :
            	        // cs.g:39:49: global_attributes
            	        {
            	        	PushFollow(FOLLOW_global_attributes_in_namespace_body122);
            	        	global_attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:39:70: ( namespace_member_declarations )?
            	int alt5 = 2;
            	int LA5_0 = input.LA(1);

            	if ( (LA5_0 == ENUM || LA5_0 == 61 || LA5_0 == 64 || (LA5_0 >= 67 && LA5_0 <= 80) || LA5_0 == 86 || LA5_0 == 97 || LA5_0 == 155 || LA5_0 == 169 || LA5_0 == 172) )
            	{
            	    alt5 = 1;
            	}
            	switch (alt5) 
            	{
            	    case 1 :
            	        // cs.g:39:70: namespace_member_declarations
            	        {
            	        	PushFollow(FOLLOW_namespace_member_declarations_in_namespace_body127);
            	        	namespace_member_declarations();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 4, namespace_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "namespace_body"


    // $ANTLR start "extern_alias_directives"
    // cs.g:40:1: extern_alias_directives : ( extern_alias_directive )+ ;
    public void extern_alias_directives() // throws RecognitionException [1]
    {   
        int extern_alias_directives_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 5) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:40:24: ( ( extern_alias_directive )+ )
            // cs.g:41:2: ( extern_alias_directive )+
            {
            	// cs.g:41:2: ( extern_alias_directive )+
            	int cnt6 = 0;
            	do 
            	{
            	    int alt6 = 2;
            	    int LA6_0 = input.LA(1);

            	    if ( (LA6_0 == 64) )
            	    {
            	        int LA6_2 = input.LA(2);

            	        if ( (LA6_2 == 65) )
            	        {
            	            alt6 = 1;
            	        }


            	    }


            	    switch (alt6) 
            		{
            			case 1 :
            			    // cs.g:41:2: extern_alias_directive
            			    {
            			    	PushFollow(FOLLOW_extern_alias_directive_in_extern_alias_directives136);
            			    	extern_alias_directive();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt6 >= 1 ) goto loop6;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee6 =
            		                new EarlyExitException(6, input);
            		            throw eee6;
            	    }
            	    cnt6++;
            	} while (true);

            	loop6:
            		;	// Stops C# compiler whining that label 'loop6' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 5, extern_alias_directives_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "extern_alias_directives"


    // $ANTLR start "extern_alias_directive"
    // cs.g:42:1: extern_alias_directive : 'extern' 'alias' identifier ';' ;
    public void extern_alias_directive() // throws RecognitionException [1]
    {   
        int extern_alias_directive_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 6) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:42:23: ( 'extern' 'alias' identifier ';' )
            // cs.g:43:2: 'extern' 'alias' identifier ';'
            {
            	Match(input,64,FOLLOW_64_in_extern_alias_directive145); if (state.failed) return ;
            	Match(input,65,FOLLOW_65_in_extern_alias_directive149); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_extern_alias_directive153);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_extern_alias_directive156); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 6, extern_alias_directive_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "extern_alias_directive"


    // $ANTLR start "using_directives"
    // cs.g:44:1: using_directives : ( using_directive )+ ;
    public void using_directives() // throws RecognitionException [1]
    {   
        int using_directives_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 7) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:44:17: ( ( using_directive )+ )
            // cs.g:45:2: ( using_directive )+
            {
            	// cs.g:45:2: ( using_directive )+
            	int cnt7 = 0;
            	do 
            	{
            	    int alt7 = 2;
            	    int LA7_0 = input.LA(1);

            	    if ( (LA7_0 == USING) )
            	    {
            	        alt7 = 1;
            	    }


            	    switch (alt7) 
            		{
            			case 1 :
            			    // cs.g:45:2: using_directive
            			    {
            			    	PushFollow(FOLLOW_using_directive_in_using_directives164);
            			    	using_directive();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt7 >= 1 ) goto loop7;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee7 =
            		                new EarlyExitException(7, input);
            		            throw eee7;
            	    }
            	    cnt7++;
            	} while (true);

            	loop7:
            		;	// Stops C# compiler whining that label 'loop7' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 7, using_directives_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "using_directives"


    // $ANTLR start "using_directive"
    // cs.g:46:1: using_directive : ( using_alias_directive | using_namespace_directive ) ;
    public void using_directive() // throws RecognitionException [1]
    {   
        int using_directive_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 8) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:46:16: ( ( using_alias_directive | using_namespace_directive ) )
            // cs.g:47:2: ( using_alias_directive | using_namespace_directive )
            {
            	// cs.g:47:2: ( using_alias_directive | using_namespace_directive )
            	int alt8 = 2;
            	int LA8_0 = input.LA(1);

            	if ( (LA8_0 == USING) )
            	{
            	    int LA8_1 = input.LA(2);

            	    if ( (LA8_1 == IDENTIFIER || LA8_1 == 65 || (LA8_1 >= 132 && LA8_1 <= 133) || (LA8_1 >= 135 && LA8_1 <= 148) || (LA8_1 >= 150 && LA8_1 <= 152) || LA8_1 == 154 || (LA8_1 >= 157 && LA8_1 <= 159) || LA8_1 == 170 || (LA8_1 >= 177 && LA8_1 <= 178) || LA8_1 == 195 || LA8_1 == 202) )
            	    {
            	        int LA8_2 = input.LA(3);

            	        if ( (LA8_2 == DOT || LA8_2 == SEMI || LA8_2 == 84 || LA8_2 == 99) )
            	        {
            	            alt8 = 2;
            	        }
            	        else if ( (LA8_2 == 66) )
            	        {
            	            alt8 = 1;
            	        }
            	        else 
            	        {
            	            if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	            NoViableAltException nvae_d8s2 =
            	                new NoViableAltException("", 8, 2, input);

            	            throw nvae_d8s2;
            	        }
            	    }
            	    else 
            	    {
            	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        NoViableAltException nvae_d8s1 =
            	            new NoViableAltException("", 8, 1, input);

            	        throw nvae_d8s1;
            	    }
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d8s0 =
            	        new NoViableAltException("", 8, 0, input);

            	    throw nvae_d8s0;
            	}
            	switch (alt8) 
            	{
            	    case 1 :
            	        // cs.g:47:3: using_alias_directive
            	        {
            	        	PushFollow(FOLLOW_using_alias_directive_in_using_directive174);
            	        	using_alias_directive();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:48:4: using_namespace_directive
            	        {
            	        	PushFollow(FOLLOW_using_namespace_directive_in_using_directive179);
            	        	using_namespace_directive();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 8, using_directive_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "using_directive"


    // $ANTLR start "using_alias_directive"
    // cs.g:49:1: using_alias_directive : 'using' identifier '=' namespace_or_type_name ';' ;
    public void using_alias_directive() // throws RecognitionException [1]
    {   
        int using_alias_directive_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 9) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:49:22: ( 'using' identifier '=' namespace_or_type_name ';' )
            // cs.g:50:2: 'using' identifier '=' namespace_or_type_name ';'
            {
            	Match(input,USING,FOLLOW_USING_in_using_alias_directive188); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_using_alias_directive192);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,66,FOLLOW_66_in_using_alias_directive196); if (state.failed) return ;
            	PushFollow(FOLLOW_namespace_or_type_name_in_using_alias_directive200);
            	namespace_or_type_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_using_alias_directive204); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 9, using_alias_directive_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "using_alias_directive"


    // $ANTLR start "using_namespace_directive"
    // cs.g:51:1: using_namespace_directive : 'using' namespace_name ';' ;
    public void using_namespace_directive() // throws RecognitionException [1]
    {   
        int using_namespace_directive_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 10) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:51:26: ( 'using' namespace_name ';' )
            // cs.g:52:2: 'using' namespace_name ';'
            {
            	Match(input,USING,FOLLOW_USING_in_using_namespace_directive212); if (state.failed) return ;
            	PushFollow(FOLLOW_namespace_name_in_using_namespace_directive216);
            	namespace_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_using_namespace_directive220); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 10, using_namespace_directive_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "using_namespace_directive"


    // $ANTLR start "namespace_member_declarations"
    // cs.g:53:1: namespace_member_declarations : ( namespace_member_declaration )+ ;
    public void namespace_member_declarations() // throws RecognitionException [1]
    {   
        int namespace_member_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 11) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:53:30: ( ( namespace_member_declaration )+ )
            // cs.g:54:2: ( namespace_member_declaration )+
            {
            	// cs.g:54:2: ( namespace_member_declaration )+
            	int cnt9 = 0;
            	do 
            	{
            	    int alt9 = 2;
            	    int LA9_0 = input.LA(1);

            	    if ( (LA9_0 == ENUM || LA9_0 == 61 || LA9_0 == 64 || (LA9_0 >= 67 && LA9_0 <= 80) || LA9_0 == 86 || LA9_0 == 97 || LA9_0 == 155 || LA9_0 == 169 || LA9_0 == 172) )
            	    {
            	        alt9 = 1;
            	    }


            	    switch (alt9) 
            		{
            			case 1 :
            			    // cs.g:54:2: namespace_member_declaration
            			    {
            			    	PushFollow(FOLLOW_namespace_member_declaration_in_namespace_member_declarations228);
            			    	namespace_member_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt9 >= 1 ) goto loop9;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee9 =
            		                new EarlyExitException(9, input);
            		            throw eee9;
            	    }
            	    cnt9++;
            	} while (true);

            	loop9:
            		;	// Stops C# compiler whining that label 'loop9' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 11, namespace_member_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "namespace_member_declarations"


    // $ANTLR start "namespace_member_declaration"
    // cs.g:55:1: namespace_member_declaration : ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration );
    public void namespace_member_declaration() // throws RecognitionException [1]
    {   
        int namespace_member_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 12) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:55:29: ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration )
            int alt12 = 2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0 == 61) )
            {
                alt12 = 1;
            }
            else if ( (LA12_0 == ENUM || LA12_0 == 64 || (LA12_0 >= 67 && LA12_0 <= 80) || LA12_0 == 86 || LA12_0 == 97 || LA12_0 == 155 || LA12_0 == 169 || LA12_0 == 172) )
            {
                alt12 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d12s0 =
                    new NoViableAltException("", 12, 0, input);

                throw nvae_d12s0;
            }
            switch (alt12) 
            {
                case 1 :
                    // cs.g:56:2: namespace_declaration
                    {
                    	PushFollow(FOLLOW_namespace_declaration_in_namespace_member_declaration237);
                    	namespace_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:57:4: ( attributes )? ( modifiers )? type_declaration
                    {
                    	// cs.g:57:4: ( attributes )?
                    	int alt10 = 2;
                    	int LA10_0 = input.LA(1);

                    	if ( (LA10_0 == 86) )
                    	{
                    	    alt10 = 1;
                    	}
                    	switch (alt10) 
                    	{
                    	    case 1 :
                    	        // cs.g:57:4: attributes
                    	        {
                    	        	PushFollow(FOLLOW_attributes_in_namespace_member_declaration242);
                    	        	attributes();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	// cs.g:57:18: ( modifiers )?
                    	int alt11 = 2;
                    	int LA11_0 = input.LA(1);

                    	if ( (LA11_0 == 64 || (LA11_0 >= 68 && LA11_0 <= 80)) )
                    	{
                    	    alt11 = 1;
                    	}
                    	switch (alt11) 
                    	{
                    	    case 1 :
                    	        // cs.g:57:18: modifiers
                    	        {
                    	        	PushFollow(FOLLOW_modifiers_in_namespace_member_declaration247);
                    	        	modifiers();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	PushFollow(FOLLOW_type_declaration_in_namespace_member_declaration252);
                    	type_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 12, namespace_member_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "namespace_member_declaration"


    // $ANTLR start "type_declaration"
    // cs.g:58:1: type_declaration : ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration );
    public void type_declaration() // throws RecognitionException [1]
    {   
        int type_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 13) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:58:17: ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration )
            int alt14 = 6;
            int LA14_0 = input.LA(1);

            if ( (LA14_0 == 67) && (synpred1_cs()) )
            {
                alt14 = 1;
            }
            else if ( (LA14_0 == 155) )
            {
                alt14 = 2;
            }
            else if ( (LA14_0 == 169) )
            {
                alt14 = 3;
            }
            else if ( (LA14_0 == 172) )
            {
                alt14 = 4;
            }
            else if ( (LA14_0 == ENUM) )
            {
                alt14 = 5;
            }
            else if ( (LA14_0 == 97) )
            {
                alt14 = 6;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d14s0 =
                    new NoViableAltException("", 14, 0, input);

                throw nvae_d14s0;
            }
            switch (alt14) 
            {
                case 1 :
                    // cs.g:59:2: ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration )
                    {
                    	Match(input,67,FOLLOW_67_in_type_declaration266); if (state.failed) return ;
                    	// cs.g:59:29: ( class_declaration | struct_declaration | interface_declaration )
                    	int alt13 = 3;
                    	switch ( input.LA(1) ) 
                    	{
                    	case 155:
                    		{
                    	    alt13 = 1;
                    	    }
                    	    break;
                    	case 169:
                    		{
                    	    alt13 = 2;
                    	    }
                    	    break;
                    	case 172:
                    		{
                    	    alt13 = 3;
                    	    }
                    	    break;
                    		default:
                    		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    		    NoViableAltException nvae_d13s0 =
                    		        new NoViableAltException("", 13, 0, input);

                    		    throw nvae_d13s0;
                    	}

                    	switch (alt13) 
                    	{
                    	    case 1 :
                    	        // cs.g:59:30: class_declaration
                    	        {
                    	        	PushFollow(FOLLOW_class_declaration_in_type_declaration271);
                    	        	class_declaration();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:60:11: struct_declaration
                    	        {
                    	        	PushFollow(FOLLOW_struct_declaration_in_type_declaration283);
                    	        	struct_declaration();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 3 :
                    	        // cs.g:61:11: interface_declaration
                    	        {
                    	        	PushFollow(FOLLOW_interface_declaration_in_type_declaration295);
                    	        	interface_declaration();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 2 :
                    // cs.g:62:4: class_declaration
                    {
                    	PushFollow(FOLLOW_class_declaration_in_type_declaration301);
                    	class_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:63:4: struct_declaration
                    {
                    	PushFollow(FOLLOW_struct_declaration_in_type_declaration306);
                    	struct_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:64:4: interface_declaration
                    {
                    	PushFollow(FOLLOW_interface_declaration_in_type_declaration311);
                    	interface_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:65:4: enum_declaration
                    {
                    	PushFollow(FOLLOW_enum_declaration_in_type_declaration316);
                    	enum_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // cs.g:66:4: delegate_declaration
                    {
                    	PushFollow(FOLLOW_delegate_declaration_in_type_declaration321);
                    	delegate_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 13, type_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_declaration"


    // $ANTLR start "qualified_identifier"
    // cs.g:68:1: qualified_identifier : identifier ( '.' identifier )* ;
    public void qualified_identifier() // throws RecognitionException [1]
    {   
        int qualified_identifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 14) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:68:21: ( identifier ( '.' identifier )* )
            // cs.g:69:2: identifier ( '.' identifier )*
            {
            	PushFollow(FOLLOW_identifier_in_qualified_identifier330);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:69:13: ( '.' identifier )*
            	do 
            	{
            	    int alt15 = 2;
            	    int LA15_0 = input.LA(1);

            	    if ( (LA15_0 == DOT) )
            	    {
            	        alt15 = 1;
            	    }


            	    switch (alt15) 
            		{
            			case 1 :
            			    // cs.g:69:14: '.' identifier
            			    {
            			    	Match(input,DOT,FOLLOW_DOT_in_qualified_identifier333); if (state.failed) return ;
            			    	PushFollow(FOLLOW_identifier_in_qualified_identifier335);
            			    	identifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop15;
            	    }
            	} while (true);

            	loop15:
            		;	// Stops C# compiler whining that label 'loop15' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 14, qualified_identifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "qualified_identifier"


    // $ANTLR start "namespace_name"
    // cs.g:70:1: namespace_name : namespace_or_type_name ;
    public void namespace_name() // throws RecognitionException [1]
    {   
        int namespace_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 15) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:71:2: ( namespace_or_type_name )
            // cs.g:71:4: namespace_or_type_name
            {
            	PushFollow(FOLLOW_namespace_or_type_name_in_namespace_name346);
            	namespace_or_type_name();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 15, namespace_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "namespace_name"


    // $ANTLR start "modifiers"
    // cs.g:73:1: modifiers : ( modifier )+ ;
    public void modifiers() // throws RecognitionException [1]
    {   
        int modifiers_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 16) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:73:10: ( ( modifier )+ )
            // cs.g:74:2: ( modifier )+
            {
            	// cs.g:74:2: ( modifier )+
            	int cnt16 = 0;
            	do 
            	{
            	    int alt16 = 2;
            	    int LA16_0 = input.LA(1);

            	    if ( (LA16_0 == 64 || (LA16_0 >= 68 && LA16_0 <= 80)) )
            	    {
            	        alt16 = 1;
            	    }


            	    switch (alt16) 
            		{
            			case 1 :
            			    // cs.g:74:2: modifier
            			    {
            			    	PushFollow(FOLLOW_modifier_in_modifiers355);
            			    	modifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt16 >= 1 ) goto loop16;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee16 =
            		                new EarlyExitException(16, input);
            		            throw eee16;
            	    }
            	    cnt16++;
            	} while (true);

            	loop16:
            		;	// Stops C# compiler whining that label 'loop16' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 16, modifiers_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "modifiers"


    // $ANTLR start "modifier"
    // cs.g:75:1: modifier : ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' );
    public void modifier() // throws RecognitionException [1]
    {   
        int modifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 17) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:75:9: ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' )
            // cs.g:
            {
            	if ( input.LA(1) == 64 || (input.LA(1) >= 68 && input.LA(1) <= 80) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 17, modifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "modifier"


    // $ANTLR start "class_member_declaration"
    // cs.g:79:1: class_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) ;
    public void class_member_declaration() // throws RecognitionException [1]
    {   
        int class_member_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 18) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:79:25: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) )
            // cs.g:80:2: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
            {
            	// cs.g:80:2: ( attributes )?
            	int alt17 = 2;
            	int LA17_0 = input.LA(1);

            	if ( (LA17_0 == 86) )
            	{
            	    alt17 = 1;
            	}
            	switch (alt17) 
            	{
            	    case 1 :
            	        // cs.g:80:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_class_member_declaration427);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:81:3: (m= modifiers )?
            	int alt18 = 2;
            	int LA18_0 = input.LA(1);

            	if ( (LA18_0 == 64 || (LA18_0 >= 68 && LA18_0 <= 80)) )
            	{
            	    alt18 = 1;
            	}
            	switch (alt18) 
            	{
            	    case 1 :
            	        // cs.g:81:3: m= modifiers
            	        {
            	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration433);
            	        	modifiers();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:82:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
            	int alt21 = 13;
            	alt21 = dfa21.Predict(input);
            	switch (alt21) 
            	{
            	    case 1 :
            	        // cs.g:82:4: 'const' type constant_declarators ';'
            	        {
            	        	Match(input,81,FOLLOW_81_in_class_member_declaration439); if (state.failed) return ;
            	        	PushFollow(FOLLOW_type_in_class_member_declaration443);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	PushFollow(FOLLOW_constant_declarators_in_class_member_declaration447);
            	        	constant_declarators();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,SEMI,FOLLOW_SEMI_in_class_member_declaration451); if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:83:4: event_declaration
            	        {
            	        	PushFollow(FOLLOW_event_declaration_in_class_member_declaration456);
            	        	event_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 3 :
            	        // cs.g:84:4: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
            	        {
            	        	Match(input,67,FOLLOW_67_in_class_member_declaration463); if (state.failed) return ;
            	        	// cs.g:84:14: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
            	        	int alt19 = 4;
            	        	switch ( input.LA(1) ) 
            	        	{
            	        	case IDENTIFIER:
            	        	case Real_literal:
            	        	case NUMBER:
            	        	case Hex_number:
            	        	case Character_literal:
            	        	case STRINGLITERAL:
            	        	case Verbatim_string_literal:
            	        	case TRUE:
            	        	case FALSE:
            	        	case NULL:
            	        	case 65:
            	        	case 132:
            	        	case 133:
            	        	case 135:
            	        	case 136:
            	        	case 137:
            	        	case 138:
            	        	case 139:
            	        	case 140:
            	        	case 141:
            	        	case 142:
            	        	case 143:
            	        	case 144:
            	        	case 145:
            	        	case 146:
            	        	case 147:
            	        	case 148:
            	        	case 150:
            	        	case 151:
            	        	case 152:
            	        	case 154:
            	        	case 157:
            	        	case 158:
            	        	case 159:
            	        	case 160:
            	        	case 161:
            	        	case 162:
            	        	case 163:
            	        	case 164:
            	        	case 165:
            	        	case 166:
            	        	case 167:
            	        	case 168:
            	        	case 170:
            	        	case 177:
            	        	case 178:
            	        	case 195:
            	        	case 196:
            	        	case 197:
            	        	case 198:
            	        	case 199:
            	        	case 200:
            	        	case 201:
            	        	case 202:
            	        		{
            	        	    alt19 = 1;
            	        	    }
            	        	    break;
            	        	case 172:
            	        		{
            	        	    alt19 = 2;
            	        	    }
            	        	    break;
            	        	case 155:
            	        		{
            	        	    alt19 = 3;
            	        	    }
            	        	    break;
            	        	case 169:
            	        		{
            	        	    alt19 = 4;
            	        	    }
            	        	    break;
            	        		default:
            	        		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        		    NoViableAltException nvae_d19s0 =
            	        		        new NoViableAltException("", 19, 0, input);

            	        		    throw nvae_d19s0;
            	        	}

            	        	switch (alt19) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:84:15: method_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_method_declaration_in_class_member_declaration466);
            	        	        	method_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:85:9: interface_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_interface_declaration_in_class_member_declaration477);
            	        	        	interface_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 3 :
            	        	        // cs.g:86:9: class_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_class_declaration_in_class_member_declaration488);
            	        	        	class_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 4 :
            	        	        // cs.g:87:9: struct_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_struct_declaration_in_class_member_declaration499);
            	        	        	struct_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 4 :
            	        // cs.g:88:4: interface_declaration
            	        {
            	        	PushFollow(FOLLOW_interface_declaration_in_class_member_declaration505);
            	        	interface_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 5 :
            	        // cs.g:89:4: 'void' method_declaration
            	        {
            	        	Match(input,82,FOLLOW_82_in_class_member_declaration511); if (state.failed) return ;
            	        	PushFollow(FOLLOW_method_declaration_in_class_member_declaration515);
            	        	method_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 6 :
            	        // cs.g:90:4: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
            	        {
            	        	PushFollow(FOLLOW_type_in_class_member_declaration520);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:90:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
            	        	int alt20 = 6;
            	        	alt20 = dfa20.Predict(input);
            	        	switch (alt20) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:90:11: ( member_name '(' )=> method_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_method_declaration_in_class_member_declaration534);
            	        	        	method_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:91:8: ( member_name '{' )=> property_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_property_declaration_in_class_member_declaration553);
            	        	        	property_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 3 :
            	        	        // cs.g:92:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_type_name_in_class_member_declaration576);
            	        	        	type_name();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;
            	        	        	Match(input,DOT,FOLLOW_DOT_in_class_member_declaration578); if (state.failed) return ;
            	        	        	PushFollow(FOLLOW_indexer_declaration_in_class_member_declaration580);
            	        	        	indexer_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 4 :
            	        	        // cs.g:93:8: indexer_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_indexer_declaration_in_class_member_declaration589);
            	        	        	indexer_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 5 :
            	        	        // cs.g:94:11: field_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_field_declaration_in_class_member_declaration602);
            	        	        	field_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 6 :
            	        	        // cs.g:95:11: operator_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_operator_declaration_in_class_member_declaration620);
            	        	        	operator_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 7 :
            	        // cs.g:99:4: class_declaration
            	        {
            	        	PushFollow(FOLLOW_class_declaration_in_class_member_declaration638);
            	        	class_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 8 :
            	        // cs.g:100:4: struct_declaration
            	        {
            	        	PushFollow(FOLLOW_struct_declaration_in_class_member_declaration645);
            	        	struct_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 9 :
            	        // cs.g:101:4: enum_declaration
            	        {
            	        	PushFollow(FOLLOW_enum_declaration_in_class_member_declaration651);
            	        	enum_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 10 :
            	        // cs.g:102:4: delegate_declaration
            	        {
            	        	PushFollow(FOLLOW_delegate_declaration_in_class_member_declaration658);
            	        	delegate_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 11 :
            	        // cs.g:103:4: conversion_operator_declaration
            	        {
            	        	PushFollow(FOLLOW_conversion_operator_declaration_in_class_member_declaration664);
            	        	conversion_operator_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 12 :
            	        // cs.g:104:4: constructor_declaration
            	        {
            	        	PushFollow(FOLLOW_constructor_declaration_in_class_member_declaration669);
            	        	constructor_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 13 :
            	        // cs.g:105:4: destructor_declaration
            	        {
            	        	PushFollow(FOLLOW_destructor_declaration_in_class_member_declaration675);
            	        	destructor_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 18, class_member_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "class_member_declaration"


    // $ANTLR start "primary_expression"
    // cs.g:109:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );
    public void primary_expression() // throws RecognitionException [1]
    {   
        int primary_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 19) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:109:19: ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression )
            int alt27 = 9;
            alt27 = dfa27.Predict(input);
            switch (alt27) 
            {
                case 1 :
                    // cs.g:110:2: ( 'this' brackets )=> 'this' brackets ( primary_expression_part )*
                    {
                    	Match(input,83,FOLLOW_83_in_primary_expression701); if (state.failed) return ;
                    	PushFollow(FOLLOW_brackets_in_primary_expression705);
                    	brackets();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:110:46: ( primary_expression_part )*
                    	do 
                    	{
                    	    int alt22 = 2;
                    	    int LA22_0 = input.LA(1);

                    	    if ( ((LA22_0 >= DOT && LA22_0 <= PTR) || LA22_0 == 86 || LA22_0 == 88) )
                    	    {
                    	        alt22 = 1;
                    	    }


                    	    switch (alt22) 
                    		{
                    			case 1 :
                    			    // cs.g:110:46: primary_expression_part
                    			    {
                    			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression709);
                    			    	primary_expression_part();
                    			    	state._fsp--;
                    			    	if (state.failed) return ;

                    			    }
                    			    break;

                    			default:
                    			    goto loop22;
                    	    }
                    	} while (true);

                    	loop22:
                    		;	// Stops C# compiler whining that label 'loop22' has no statements


                    }
                    break;
                case 2 :
                    // cs.g:111:4: ( 'base' brackets )=> 'this' brackets ( primary_expression_part )*
                    {
                    	Match(input,83,FOLLOW_83_in_primary_expression725); if (state.failed) return ;
                    	PushFollow(FOLLOW_brackets_in_primary_expression729);
                    	brackets();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:111:47: ( primary_expression_part )*
                    	do 
                    	{
                    	    int alt23 = 2;
                    	    int LA23_0 = input.LA(1);

                    	    if ( ((LA23_0 >= DOT && LA23_0 <= PTR) || LA23_0 == 86 || LA23_0 == 88) )
                    	    {
                    	        alt23 = 1;
                    	    }


                    	    switch (alt23) 
                    		{
                    			case 1 :
                    			    // cs.g:111:47: primary_expression_part
                    			    {
                    			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression733);
                    			    	primary_expression_part();
                    			    	state._fsp--;
                    			    	if (state.failed) return ;

                    			    }
                    			    break;

                    			default:
                    			    goto loop23;
                    	    }
                    	} while (true);

                    	loop23:
                    		;	// Stops C# compiler whining that label 'loop23' has no statements


                    }
                    break;
                case 3 :
                    // cs.g:112:4: primary_expression_start ( primary_expression_part )*
                    {
                    	PushFollow(FOLLOW_primary_expression_start_in_primary_expression739);
                    	primary_expression_start();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:112:31: ( primary_expression_part )*
                    	do 
                    	{
                    	    int alt24 = 2;
                    	    int LA24_0 = input.LA(1);

                    	    if ( ((LA24_0 >= DOT && LA24_0 <= PTR) || LA24_0 == 86 || LA24_0 == 88) )
                    	    {
                    	        alt24 = 1;
                    	    }


                    	    switch (alt24) 
                    		{
                    			case 1 :
                    			    // cs.g:112:31: primary_expression_part
                    			    {
                    			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression743);
                    			    	primary_expression_part();
                    			    	state._fsp--;
                    			    	if (state.failed) return ;

                    			    }
                    			    break;

                    			default:
                    			    goto loop24;
                    	    }
                    	} while (true);

                    	loop24:
                    		;	// Stops C# compiler whining that label 'loop24' has no statements


                    }
                    break;
                case 4 :
                    // cs.g:113:4: 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
                    {
                    	Match(input,68,FOLLOW_68_in_primary_expression749); if (state.failed) return ;
                    	// cs.g:113:10: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
                    	int alt26 = 4;
                    	switch ( input.LA(1) ) 
                    	{
                    	case 160:
                    	case 161:
                    	case 162:
                    	case 163:
                    	case 164:
                    	case 165:
                    	case 166:
                    	case 167:
                    	case 168:
                    	case 196:
                    	case 197:
                    	case 198:
                    	case 199:
                    	case 200:
                    	case 201:
                    		{
                    	    int LA26_1 = input.LA(2);

                    	    if ( (synpred7_cs()) )
                    	    {
                    	        alt26 = 1;
                    	    }
                    	    else if ( (true) )
                    	    {
                    	        alt26 = 3;
                    	    }
                    	    else 
                    	    {
                    	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	        NoViableAltException nvae_d26s1 =
                    	            new NoViableAltException("", 26, 1, input);

                    	        throw nvae_d26s1;
                    	    }
                    	    }
                    	    break;
                    	case IDENTIFIER:
                    	case 65:
                    	case 132:
                    	case 133:
                    	case 135:
                    	case 136:
                    	case 137:
                    	case 138:
                    	case 139:
                    	case 140:
                    	case 141:
                    	case 142:
                    	case 143:
                    	case 144:
                    	case 145:
                    	case 146:
                    	case 147:
                    	case 148:
                    	case 150:
                    	case 151:
                    	case 152:
                    	case 154:
                    	case 157:
                    	case 158:
                    	case 159:
                    	case 170:
                    	case 177:
                    	case 178:
                    	case 195:
                    	case 202:
                    		{
                    	    int LA26_2 = input.LA(2);

                    	    if ( (synpred7_cs()) )
                    	    {
                    	        alt26 = 1;
                    	    }
                    	    else if ( (synpred8_cs()) )
                    	    {
                    	        alt26 = 2;
                    	    }
                    	    else if ( (true) )
                    	    {
                    	        alt26 = 3;
                    	    }
                    	    else 
                    	    {
                    	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	        NoViableAltException nvae_d26s2 =
                    	            new NoViableAltException("", 26, 2, input);

                    	        throw nvae_d26s2;
                    	    }
                    	    }
                    	    break;
                    	case 82:
                    		{
                    	    int LA26_3 = input.LA(2);

                    	    if ( (synpred7_cs()) )
                    	    {
                    	        alt26 = 1;
                    	    }
                    	    else if ( (true) )
                    	    {
                    	        alt26 = 3;
                    	    }
                    	    else 
                    	    {
                    	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	        NoViableAltException nvae_d26s3 =
                    	            new NoViableAltException("", 26, 3, input);

                    	        throw nvae_d26s3;
                    	    }
                    	    }
                    	    break;
                    	case 62:
                    		{
                    	    alt26 = 4;
                    	    }
                    	    break;
                    		default:
                    		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    		    NoViableAltException nvae_d26s0 =
                    		        new NoViableAltException("", 26, 0, input);

                    		    throw nvae_d26s0;
                    	}

                    	switch (alt26) 
                    	{
                    	    case 1 :
                    	        // cs.g:113:14: ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+
                    	        {
                    	        	PushFollow(FOLLOW_object_creation_expression_in_primary_expression777);
                    	        	object_creation_expression();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;
                    	        	// cs.g:114:35: ( primary_expression_part )+
                    	        	int cnt25 = 0;
                    	        	do 
                    	        	{
                    	        	    int alt25 = 2;
                    	        	    int LA25_0 = input.LA(1);

                    	        	    if ( ((LA25_0 >= DOT && LA25_0 <= PTR) || LA25_0 == 86 || LA25_0 == 88) )
                    	        	    {
                    	        	        alt25 = 1;
                    	        	    }


                    	        	    switch (alt25) 
                    	        		{
                    	        			case 1 :
                    	        			    // cs.g:114:35: primary_expression_part
                    	        			    {
                    	        			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression781);
                    	        			    	primary_expression_part();
                    	        			    	state._fsp--;
                    	        			    	if (state.failed) return ;

                    	        			    }
                    	        			    break;

                    	        			default:
                    	        			    if ( cnt25 >= 1 ) goto loop25;
                    	        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	        		            EarlyExitException eee25 =
                    	        		                new EarlyExitException(25, input);
                    	        		            throw eee25;
                    	        	    }
                    	        	    cnt25++;
                    	        	} while (true);

                    	        	loop25:
                    	        		;	// Stops C# compiler whining that label 'loop25' has no statements


                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:117:7: ( delegate_creation_expression )=> delegate_creation_expression
                    	        {
                    	        	PushFollow(FOLLOW_delegate_creation_expression_in_primary_expression809);
                    	        	delegate_creation_expression();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 3 :
                    	        // cs.g:118:7: object_creation_expression
                    	        {
                    	        	PushFollow(FOLLOW_object_creation_expression_in_primary_expression817);
                    	        	object_creation_expression();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 4 :
                    	        // cs.g:119:7: anonymous_object_creation_expression
                    	        {
                    	        	PushFollow(FOLLOW_anonymous_object_creation_expression_in_primary_expression825);
                    	        	anonymous_object_creation_expression();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 5 :
                    // cs.g:120:4: sizeof_expression
                    {
                    	PushFollow(FOLLOW_sizeof_expression_in_primary_expression838);
                    	sizeof_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // cs.g:121:4: checked_expression
                    {
                    	PushFollow(FOLLOW_checked_expression_in_primary_expression849);
                    	checked_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // cs.g:122:4: unchecked_expression
                    {
                    	PushFollow(FOLLOW_unchecked_expression_in_primary_expression868);
                    	unchecked_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 8 :
                    // cs.g:123:4: default_value_expression
                    {
                    	PushFollow(FOLLOW_default_value_expression_in_primary_expression885);
                    	default_value_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // cs.g:124:4: anonymous_method_expression
                    {
                    	PushFollow(FOLLOW_anonymous_method_expression_in_primary_expression898);
                    	anonymous_method_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 19, primary_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "primary_expression"


    // $ANTLR start "primary_expression_start"
    // cs.g:127:1: primary_expression_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );
    public void primary_expression_start() // throws RecognitionException [1]
    {   
        int primary_expression_start_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 20) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:127:25: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal )
            int alt29 = 8;
            alt29 = dfa29.Predict(input);
            switch (alt29) 
            {
                case 1 :
                    // cs.g:128:2: predefined_type
                    {
                    	PushFollow(FOLLOW_predefined_type_in_primary_expression_start911);
                    	predefined_type();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:129:4: ( identifier '<' )=> identifier generic_argument_list
                    {
                    	PushFollow(FOLLOW_identifier_in_primary_expression_start939);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	PushFollow(FOLLOW_generic_argument_list_in_primary_expression_start943);
                    	generic_argument_list();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:130:4: identifier ( '::' identifier )?
                    {
                    	PushFollow(FOLLOW_identifier_in_primary_expression_start948);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:130:15: ( '::' identifier )?
                    	int alt28 = 2;
                    	int LA28_0 = input.LA(1);

                    	if ( (LA28_0 == 84) )
                    	{
                    	    alt28 = 1;
                    	}
                    	switch (alt28) 
                    	{
                    	    case 1 :
                    	        // cs.g:130:16: '::' identifier
                    	        {
                    	        	Match(input,84,FOLLOW_84_in_primary_expression_start951); if (state.failed) return ;
                    	        	PushFollow(FOLLOW_identifier_in_primary_expression_start955);
                    	        	identifier();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 4 :
                    // cs.g:131:4: 'this'
                    {
                    	Match(input,83,FOLLOW_83_in_primary_expression_start962); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:132:4: 'base'
                    {
                    	Match(input,85,FOLLOW_85_in_primary_expression_start968); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // cs.g:133:4: paren_expression
                    {
                    	PushFollow(FOLLOW_paren_expression_in_primary_expression_start973);
                    	paren_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // cs.g:134:4: typeof_expression
                    {
                    	PushFollow(FOLLOW_typeof_expression_in_primary_expression_start978);
                    	typeof_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 8 :
                    // cs.g:135:4: literal
                    {
                    	PushFollow(FOLLOW_literal_in_primary_expression_start996);
                    	literal();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 20, primary_expression_start_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "primary_expression_start"


    // $ANTLR start "primary_expression_part"
    // cs.g:138:1: primary_expression_part : ( access_identifier | brackets_or_arguments );
    public void primary_expression_part() // throws RecognitionException [1]
    {   
        int primary_expression_part_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 21) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:138:24: ( access_identifier | brackets_or_arguments )
            int alt30 = 2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0 >= DOT && LA30_0 <= PTR)) )
            {
                alt30 = 1;
            }
            else if ( (LA30_0 == 86 || LA30_0 == 88) )
            {
                alt30 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d30s0 =
                    new NoViableAltException("", 30, 0, input);

                throw nvae_d30s0;
            }
            switch (alt30) 
            {
                case 1 :
                    // cs.g:139:3: access_identifier
                    {
                    	PushFollow(FOLLOW_access_identifier_in_primary_expression_part1007);
                    	access_identifier();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:140:4: brackets_or_arguments
                    {
                    	PushFollow(FOLLOW_brackets_or_arguments_in_primary_expression_part1012);
                    	brackets_or_arguments();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 21, primary_expression_part_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "primary_expression_part"


    // $ANTLR start "access_identifier"
    // cs.g:141:1: access_identifier : access_operator type_or_generic ;
    public void access_identifier() // throws RecognitionException [1]
    {   
        int access_identifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 22) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:141:18: ( access_operator type_or_generic )
            // cs.g:142:2: access_operator type_or_generic
            {
            	PushFollow(FOLLOW_access_operator_in_access_identifier1020);
            	access_operator();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_type_or_generic_in_access_identifier1024);
            	type_or_generic();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 22, access_identifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "access_identifier"


    // $ANTLR start "access_operator"
    // cs.g:143:1: access_operator : ( '.' | '->' );
    public void access_operator() // throws RecognitionException [1]
    {   
        int access_operator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 23) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:143:16: ( '.' | '->' )
            // cs.g:
            {
            	if ( (input.LA(1) >= DOT && input.LA(1) <= PTR) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 23, access_operator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "access_operator"


    // $ANTLR start "brackets_or_arguments"
    // cs.g:145:1: brackets_or_arguments : ( brackets | arguments );
    public void brackets_or_arguments() // throws RecognitionException [1]
    {   
        int brackets_or_arguments_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 24) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:145:22: ( brackets | arguments )
            int alt31 = 2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0 == 86) )
            {
                alt31 = 1;
            }
            else if ( (LA31_0 == 88) )
            {
                alt31 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d31s0 =
                    new NoViableAltException("", 31, 0, input);

                throw nvae_d31s0;
            }
            switch (alt31) 
            {
                case 1 :
                    // cs.g:146:2: brackets
                    {
                    	PushFollow(FOLLOW_brackets_in_brackets_or_arguments1046);
                    	brackets();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:146:13: arguments
                    {
                    	PushFollow(FOLLOW_arguments_in_brackets_or_arguments1050);
                    	arguments();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 24, brackets_or_arguments_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "brackets_or_arguments"


    // $ANTLR start "brackets"
    // cs.g:147:1: brackets : '[' ( expression_list )? ']' ;
    public void brackets() // throws RecognitionException [1]
    {   
        int brackets_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 25) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:147:9: ( '[' ( expression_list )? ']' )
            // cs.g:148:2: '[' ( expression_list )? ']'
            {
            	Match(input,86,FOLLOW_86_in_brackets1058); if (state.failed) return ;
            	// cs.g:148:8: ( expression_list )?
            	int alt32 = 2;
            	int LA32_0 = input.LA(1);

            	if ( ((LA32_0 >= IDENTIFIER && LA32_0 <= NULL) || LA32_0 == MINUS || LA32_0 == 65 || LA32_0 == 68 || LA32_0 == 83 || LA32_0 == 85 || LA32_0 == 88 || (LA32_0 >= 93 && LA32_0 <= 98) || LA32_0 == 100 || (LA32_0 >= 102 && LA32_0 <= 106) || LA32_0 == 117 || (LA32_0 >= 132 && LA32_0 <= 133) || (LA32_0 >= 135 && LA32_0 <= 148) || (LA32_0 >= 150 && LA32_0 <= 152) || LA32_0 == 154 || (LA32_0 >= 157 && LA32_0 <= 168) || LA32_0 == 170 || (LA32_0 >= 177 && LA32_0 <= 178) || (LA32_0 >= 195 && LA32_0 <= 202)) )
            	{
            	    alt32 = 1;
            	}
            	switch (alt32) 
            	{
            	    case 1 :
            	        // cs.g:148:8: expression_list
            	        {
            	        	PushFollow(FOLLOW_expression_list_in_brackets1062);
            	        	expression_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,87,FOLLOW_87_in_brackets1067); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 25, brackets_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "brackets"


    // $ANTLR start "paren_expression"
    // cs.g:149:1: paren_expression : '(' expression ')' ;
    public void paren_expression() // throws RecognitionException [1]
    {   
        int paren_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 26) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:149:17: ( '(' expression ')' )
            // cs.g:150:2: '(' expression ')'
            {
            	Match(input,88,FOLLOW_88_in_paren_expression1077); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_paren_expression1081);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_paren_expression1085); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 26, paren_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "paren_expression"


    // $ANTLR start "arguments"
    // cs.g:151:1: arguments : '(' ( argument_list )? ')' ;
    public void arguments() // throws RecognitionException [1]
    {   
        int arguments_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 27) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:151:10: ( '(' ( argument_list )? ')' )
            // cs.g:152:2: '(' ( argument_list )? ')'
            {
            	Match(input,88,FOLLOW_88_in_arguments1094); if (state.failed) return ;
            	// cs.g:152:8: ( argument_list )?
            	int alt33 = 2;
            	int LA33_0 = input.LA(1);

            	if ( ((LA33_0 >= IDENTIFIER && LA33_0 <= NULL) || LA33_0 == MINUS || LA33_0 == 65 || LA33_0 == 68 || LA33_0 == 83 || LA33_0 == 85 || LA33_0 == 88 || (LA33_0 >= 91 && LA33_0 <= 98) || LA33_0 == 100 || (LA33_0 >= 102 && LA33_0 <= 106) || LA33_0 == 117 || (LA33_0 >= 132 && LA33_0 <= 133) || (LA33_0 >= 135 && LA33_0 <= 148) || (LA33_0 >= 150 && LA33_0 <= 152) || LA33_0 == 154 || (LA33_0 >= 157 && LA33_0 <= 168) || LA33_0 == 170 || (LA33_0 >= 177 && LA33_0 <= 178) || (LA33_0 >= 195 && LA33_0 <= 202)) )
            	{
            	    alt33 = 1;
            	}
            	switch (alt33) 
            	{
            	    case 1 :
            	        // cs.g:152:8: argument_list
            	        {
            	        	PushFollow(FOLLOW_argument_list_in_arguments1098);
            	        	argument_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_arguments1103); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 27, arguments_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "arguments"


    // $ANTLR start "argument_list"
    // cs.g:153:1: argument_list : argument ( ',' argument )* ;
    public void argument_list() // throws RecognitionException [1]
    {   
        int argument_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 28) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:153:14: ( argument ( ',' argument )* )
            // cs.g:154:2: argument ( ',' argument )*
            {
            	PushFollow(FOLLOW_argument_in_argument_list1112);
            	argument();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:154:11: ( ',' argument )*
            	do 
            	{
            	    int alt34 = 2;
            	    int LA34_0 = input.LA(1);

            	    if ( (LA34_0 == 89) )
            	    {
            	        alt34 = 1;
            	    }


            	    switch (alt34) 
            		{
            			case 1 :
            			    // cs.g:154:12: ',' argument
            			    {
            			    	Match(input,89,FOLLOW_89_in_argument_list1115); if (state.failed) return ;
            			    	PushFollow(FOLLOW_argument_in_argument_list1117);
            			    	argument();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop34;
            	    }
            	} while (true);

            	loop34:
            		;	// Stops C# compiler whining that label 'loop34' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 28, argument_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "argument_list"


    // $ANTLR start "argument"
    // cs.g:156:1: argument : ( argument_name argument_value | argument_value );
    public void argument() // throws RecognitionException [1]
    {   
        int argument_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 29) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:156:9: ( argument_name argument_value | argument_value )
            int alt35 = 2;
            switch ( input.LA(1) ) 
            {
            case 133:
            	{
                int LA35_1 = input.LA(2);

                if ( (LA35_1 == IDENTIFIER || (LA35_1 >= DOT && LA35_1 <= GT) || LA35_1 == RPAREN || (LA35_1 >= 65 && LA35_1 <= 66) || LA35_1 == 82 || LA35_1 == 84 || LA35_1 == 86 || (LA35_1 >= 88 && LA35_1 <= 89) || (LA35_1 >= 99 && LA35_1 <= 104) || (LA35_1 >= 107 && LA35_1 <= 133) || (LA35_1 >= 135 && LA35_1 <= 148) || (LA35_1 >= 150 && LA35_1 <= 152) || LA35_1 == 154 || (LA35_1 >= 157 && LA35_1 <= 168) || LA35_1 == 170 || (LA35_1 >= 177 && LA35_1 <= 178) || (LA35_1 >= 195 && LA35_1 <= 202)) )
                {
                    alt35 = 2;
                }
                else if ( (LA35_1 == 90) )
                {
                    alt35 = 1;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d35s1 =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae_d35s1;
                }
                }
                break;
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            case MINUS:
            case 68:
            case 83:
            case 85:
            case 88:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 117:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            	{
                alt35 = 2;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
            	{
                int LA35_3 = input.LA(2);

                if ( ((LA35_3 >= DOT && LA35_3 <= GT) || LA35_3 == RPAREN || LA35_3 == 66 || LA35_3 == 84 || LA35_3 == 86 || (LA35_3 >= 88 && LA35_3 <= 89) || (LA35_3 >= 99 && LA35_3 <= 104) || (LA35_3 >= 107 && LA35_3 <= 131)) )
                {
                    alt35 = 2;
                }
                else if ( (LA35_3 == 90) )
                {
                    alt35 = 1;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d35s3 =
                        new NoViableAltException("", 35, 3, input);

                    throw nvae_d35s3;
                }
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d35s0 =
            	        new NoViableAltException("", 35, 0, input);

            	    throw nvae_d35s0;
            }

            switch (alt35) 
            {
                case 1 :
                    // cs.g:157:2: argument_name argument_value
                    {
                    	PushFollow(FOLLOW_argument_name_in_argument1127);
                    	argument_name();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	PushFollow(FOLLOW_argument_value_in_argument1131);
                    	argument_value();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:158:4: argument_value
                    {
                    	PushFollow(FOLLOW_argument_value_in_argument1136);
                    	argument_value();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 29, argument_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "argument"


    // $ANTLR start "argument_name"
    // cs.g:159:1: argument_name : identifier ':' ;
    public void argument_name() // throws RecognitionException [1]
    {   
        int argument_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 30) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:159:14: ( identifier ':' )
            // cs.g:160:2: identifier ':'
            {
            	PushFollow(FOLLOW_identifier_in_argument_name1143);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,90,FOLLOW_90_in_argument_name1147); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 30, argument_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "argument_name"


    // $ANTLR start "argument_value"
    // cs.g:161:1: argument_value : ( expression | ref_variable_reference | 'out' variable_reference );
    public void argument_value() // throws RecognitionException [1]
    {   
        int argument_value_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 31) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:161:15: ( expression | ref_variable_reference | 'out' variable_reference )
            int alt36 = 3;
            switch ( input.LA(1) ) 
            {
            case IDENTIFIER:
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            case MINUS:
            case 65:
            case 68:
            case 83:
            case 85:
            case 88:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 117:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 170:
            case 177:
            case 178:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            	{
                alt36 = 1;
                }
                break;
            case 92:
            	{
                alt36 = 2;
                }
                break;
            case 91:
            	{
                alt36 = 3;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d36s0 =
            	        new NoViableAltException("", 36, 0, input);

            	    throw nvae_d36s0;
            }

            switch (alt36) 
            {
                case 1 :
                    // cs.g:162:2: expression
                    {
                    	PushFollow(FOLLOW_expression_in_argument_value1155);
                    	expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:163:4: ref_variable_reference
                    {
                    	PushFollow(FOLLOW_ref_variable_reference_in_argument_value1161);
                    	ref_variable_reference();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:164:4: 'out' variable_reference
                    {
                    	Match(input,91,FOLLOW_91_in_argument_value1167); if (state.failed) return ;
                    	PushFollow(FOLLOW_variable_reference_in_argument_value1171);
                    	variable_reference();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 31, argument_value_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "argument_value"


    // $ANTLR start "ref_variable_reference"
    // cs.g:165:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
    public void ref_variable_reference() // throws RecognitionException [1]
    {   
        int ref_variable_reference_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 32) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:165:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
            // cs.g:166:2: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
            {
            	Match(input,92,FOLLOW_92_in_ref_variable_reference1179); if (state.failed) return ;
            	// cs.g:167:3: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
            	int alt38 = 2;
            	alt38 = dfa38.Predict(input);
            	switch (alt38) 
            	{
            	    case 1 :
            	        // cs.g:167:4: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
            	        {
            	        	Match(input,88,FOLLOW_88_in_ref_variable_reference1201); if (state.failed) return ;
            	        	PushFollow(FOLLOW_type_in_ref_variable_reference1205);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,RPAREN,FOLLOW_RPAREN_in_ref_variable_reference1209); if (state.failed) return ;
            	        	// cs.g:167:47: ( ref_variable_reference | variable_reference )
            	        	int alt37 = 2;
            	        	int LA37_0 = input.LA(1);

            	        	if ( (LA37_0 == 92) )
            	        	{
            	        	    alt37 = 1;
            	        	}
            	        	else if ( ((LA37_0 >= IDENTIFIER && LA37_0 <= NULL) || LA37_0 == MINUS || LA37_0 == 65 || LA37_0 == 68 || LA37_0 == 83 || LA37_0 == 85 || LA37_0 == 88 || (LA37_0 >= 93 && LA37_0 <= 98) || LA37_0 == 100 || (LA37_0 >= 102 && LA37_0 <= 106) || LA37_0 == 117 || (LA37_0 >= 132 && LA37_0 <= 133) || (LA37_0 >= 135 && LA37_0 <= 148) || (LA37_0 >= 150 && LA37_0 <= 152) || LA37_0 == 154 || (LA37_0 >= 157 && LA37_0 <= 168) || LA37_0 == 170 || (LA37_0 >= 177 && LA37_0 <= 178) || (LA37_0 >= 195 && LA37_0 <= 202)) )
            	        	{
            	        	    alt37 = 2;
            	        	}
            	        	else 
            	        	{
            	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        	    NoViableAltException nvae_d37s0 =
            	        	        new NoViableAltException("", 37, 0, input);

            	        	    throw nvae_d37s0;
            	        	}
            	        	switch (alt37) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:167:48: ref_variable_reference
            	        	        {
            	        	        	PushFollow(FOLLOW_ref_variable_reference_in_ref_variable_reference1214);
            	        	        	ref_variable_reference();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:167:73: variable_reference
            	        	        {
            	        	        	PushFollow(FOLLOW_variable_reference_in_ref_variable_reference1218);
            	        	        	variable_reference();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:169:5: variable_reference
            	        {
            	        	PushFollow(FOLLOW_variable_reference_in_ref_variable_reference1254);
            	        	variable_reference();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 32, ref_variable_reference_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "ref_variable_reference"


    // $ANTLR start "variable_reference"
    // cs.g:171:1: variable_reference : expression ;
    public void variable_reference() // throws RecognitionException [1]
    {   
        int variable_reference_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 33) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:171:19: ( expression )
            // cs.g:172:2: expression
            {
            	PushFollow(FOLLOW_expression_in_variable_reference1264);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 33, variable_reference_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variable_reference"


    // $ANTLR start "rank_specifiers"
    // cs.g:173:1: rank_specifiers : ( rank_specifier )+ ;
    public void rank_specifiers() // throws RecognitionException [1]
    {   
        int rank_specifiers_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 34) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:173:16: ( ( rank_specifier )+ )
            // cs.g:174:2: ( rank_specifier )+
            {
            	// cs.g:174:2: ( rank_specifier )+
            	int cnt39 = 0;
            	do 
            	{
            	    int alt39 = 2;
            	    int LA39_0 = input.LA(1);

            	    if ( (LA39_0 == 86) )
            	    {
            	        int LA39_2 = input.LA(2);

            	        if ( (LA39_2 == 87 || LA39_2 == 89) )
            	        {
            	            alt39 = 1;
            	        }


            	    }


            	    switch (alt39) 
            		{
            			case 1 :
            			    // cs.g:174:2: rank_specifier
            			    {
            			    	PushFollow(FOLLOW_rank_specifier_in_rank_specifiers1272);
            			    	rank_specifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt39 >= 1 ) goto loop39;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee39 =
            		                new EarlyExitException(39, input);
            		            throw eee39;
            	    }
            	    cnt39++;
            	} while (true);

            	loop39:
            		;	// Stops C# compiler whining that label 'loop39' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 34, rank_specifiers_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "rank_specifiers"


    // $ANTLR start "rank_specifier"
    // cs.g:175:1: rank_specifier : '[' ( dim_separators )? ']' ;
    public void rank_specifier() // throws RecognitionException [1]
    {   
        int rank_specifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 35) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:175:15: ( '[' ( dim_separators )? ']' )
            // cs.g:176:2: '[' ( dim_separators )? ']'
            {
            	Match(input,86,FOLLOW_86_in_rank_specifier1290); if (state.failed) return ;
            	// cs.g:176:8: ( dim_separators )?
            	int alt40 = 2;
            	int LA40_0 = input.LA(1);

            	if ( (LA40_0 == 89) )
            	{
            	    alt40 = 1;
            	}
            	switch (alt40) 
            	{
            	    case 1 :
            	        // cs.g:176:8: dim_separators
            	        {
            	        	PushFollow(FOLLOW_dim_separators_in_rank_specifier1294);
            	        	dim_separators();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,87,FOLLOW_87_in_rank_specifier1299); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 35, rank_specifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "rank_specifier"


    // $ANTLR start "dim_separators"
    // cs.g:177:1: dim_separators : ( ',' )+ ;
    public void dim_separators() // throws RecognitionException [1]
    {   
        int dim_separators_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 36) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:177:15: ( ( ',' )+ )
            // cs.g:178:2: ( ',' )+
            {
            	// cs.g:178:2: ( ',' )+
            	int cnt41 = 0;
            	do 
            	{
            	    int alt41 = 2;
            	    int LA41_0 = input.LA(1);

            	    if ( (LA41_0 == 89) )
            	    {
            	        alt41 = 1;
            	    }


            	    switch (alt41) 
            		{
            			case 1 :
            			    // cs.g:178:2: ','
            			    {
            			    	Match(input,89,FOLLOW_89_in_dim_separators1308); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt41 >= 1 ) goto loop41;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee41 =
            		                new EarlyExitException(41, input);
            		            throw eee41;
            	    }
            	    cnt41++;
            	} while (true);

            	loop41:
            		;	// Stops C# compiler whining that label 'loop41' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 36, dim_separators_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "dim_separators"


    // $ANTLR start "delegate_creation_expression"
    // cs.g:180:1: delegate_creation_expression : type_name '(' type_name ')' ;
    public void delegate_creation_expression() // throws RecognitionException [1]
    {   
        int delegate_creation_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 37) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:180:29: ( type_name '(' type_name ')' )
            // cs.g:182:2: type_name '(' type_name ')'
            {
            	PushFollow(FOLLOW_type_name_in_delegate_creation_expression1321);
            	type_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_delegate_creation_expression1325); if (state.failed) return ;
            	PushFollow(FOLLOW_type_name_in_delegate_creation_expression1329);
            	type_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_delegate_creation_expression1333); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 37, delegate_creation_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "delegate_creation_expression"


    // $ANTLR start "anonymous_object_creation_expression"
    // cs.g:183:1: anonymous_object_creation_expression : anonymous_object_initializer ;
    public void anonymous_object_creation_expression() // throws RecognitionException [1]
    {   
        int anonymous_object_creation_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 38) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:183:37: ( anonymous_object_initializer )
            // cs.g:185:2: anonymous_object_initializer
            {
            	PushFollow(FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1344);
            	anonymous_object_initializer();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 38, anonymous_object_creation_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "anonymous_object_creation_expression"


    // $ANTLR start "anonymous_object_initializer"
    // cs.g:186:1: anonymous_object_initializer : '{' ( member_declarator_list )? ( ',' )? '}' ;
    public void anonymous_object_initializer() // throws RecognitionException [1]
    {   
        int anonymous_object_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 39) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:186:29: ( '{' ( member_declarator_list )? ( ',' )? '}' )
            // cs.g:187:2: '{' ( member_declarator_list )? ( ',' )? '}'
            {
            	Match(input,62,FOLLOW_62_in_anonymous_object_initializer1353); if (state.failed) return ;
            	// cs.g:187:8: ( member_declarator_list )?
            	int alt42 = 2;
            	int LA42_0 = input.LA(1);

            	if ( (LA42_0 == IDENTIFIER || LA42_0 == 65 || (LA42_0 >= 132 && LA42_0 <= 133) || (LA42_0 >= 135 && LA42_0 <= 148) || (LA42_0 >= 150 && LA42_0 <= 152) || LA42_0 == 154 || (LA42_0 >= 157 && LA42_0 <= 159) || LA42_0 == 170 || (LA42_0 >= 177 && LA42_0 <= 178) || LA42_0 == 195 || LA42_0 == 202) )
            	{
            	    alt42 = 1;
            	}
            	switch (alt42) 
            	{
            	    case 1 :
            	        // cs.g:187:8: member_declarator_list
            	        {
            	        	PushFollow(FOLLOW_member_declarator_list_in_anonymous_object_initializer1357);
            	        	member_declarator_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:187:34: ( ',' )?
            	int alt43 = 2;
            	int LA43_0 = input.LA(1);

            	if ( (LA43_0 == 89) )
            	{
            	    alt43 = 1;
            	}
            	switch (alt43) 
            	{
            	    case 1 :
            	        // cs.g:187:34: ','
            	        {
            	        	Match(input,89,FOLLOW_89_in_anonymous_object_initializer1362); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_anonymous_object_initializer1367); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 39, anonymous_object_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "anonymous_object_initializer"


    // $ANTLR start "member_declarator_list"
    // cs.g:188:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
    public void member_declarator_list() // throws RecognitionException [1]
    {   
        int member_declarator_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 40) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:188:23: ( member_declarator ( ',' member_declarator )* )
            // cs.g:189:2: member_declarator ( ',' member_declarator )*
            {
            	PushFollow(FOLLOW_member_declarator_in_member_declarator_list1375);
            	member_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:189:21: ( ',' member_declarator )*
            	do 
            	{
            	    int alt44 = 2;
            	    int LA44_0 = input.LA(1);

            	    if ( (LA44_0 == 89) )
            	    {
            	        int LA44_1 = input.LA(2);

            	        if ( (LA44_1 == IDENTIFIER || LA44_1 == 65 || (LA44_1 >= 132 && LA44_1 <= 133) || (LA44_1 >= 135 && LA44_1 <= 148) || (LA44_1 >= 150 && LA44_1 <= 152) || LA44_1 == 154 || (LA44_1 >= 157 && LA44_1 <= 159) || LA44_1 == 170 || (LA44_1 >= 177 && LA44_1 <= 178) || LA44_1 == 195 || LA44_1 == 202) )
            	        {
            	            alt44 = 1;
            	        }


            	    }


            	    switch (alt44) 
            		{
            			case 1 :
            			    // cs.g:189:22: ',' member_declarator
            			    {
            			    	Match(input,89,FOLLOW_89_in_member_declarator_list1379); if (state.failed) return ;
            			    	PushFollow(FOLLOW_member_declarator_in_member_declarator_list1381);
            			    	member_declarator();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop44;
            	    }
            	} while (true);

            	loop44:
            		;	// Stops C# compiler whining that label 'loop44' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 40, member_declarator_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "member_declarator_list"


    // $ANTLR start "member_declarator"
    // cs.g:190:1: member_declarator : identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) ;
    public void member_declarator() // throws RecognitionException [1]
    {   
        int member_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 41) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:190:18: ( identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) )
            // cs.g:191:2: identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
            {
            	PushFollow(FOLLOW_identifier_in_member_declarator1393);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:191:15: ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
            	int alt45 = 3;
            	switch ( input.LA(1) ) 
            	{
            	case 99:
            		{
            	    alt45 = 1;
            	    }
            	    break;
            	case DOT:
            		{
            	    alt45 = 2;
            	    }
            	    break;
            	case 66:
            		{
            	    alt45 = 3;
            	    }
            	    break;
            		default:
            		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		    NoViableAltException nvae_d45s0 =
            		        new NoViableAltException("", 45, 0, input);

            		    throw nvae_d45s0;
            	}

            	switch (alt45) 
            	{
            	    case 1 :
            	        // cs.g:191:16: generic_argument_list
            	        {
            	        	PushFollow(FOLLOW_generic_argument_list_in_member_declarator1398);
            	        	generic_argument_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:192:8: ( '.' primary_or_array_creation_expression )
            	        {
            	        	// cs.g:192:8: ( '.' primary_or_array_creation_expression )
            	        	// cs.g:192:9: '.' primary_or_array_creation_expression
            	        	{
            	        		Match(input,DOT,FOLLOW_DOT_in_member_declarator1408); if (state.failed) return ;
            	        		PushFollow(FOLLOW_primary_or_array_creation_expression_in_member_declarator1412);
            	        		primary_or_array_creation_expression();
            	        		state._fsp--;
            	        		if (state.failed) return ;

            	        	}


            	        }
            	        break;
            	    case 3 :
            	        // cs.g:193:8: '=' expression
            	        {
            	        	Match(input,66,FOLLOW_66_in_member_declarator1422); if (state.failed) return ;
            	        	PushFollow(FOLLOW_expression_in_member_declarator1426);
            	        	expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 41, member_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "member_declarator"


    // $ANTLR start "primary_or_array_creation_expression"
    // cs.g:194:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );
    public void primary_or_array_creation_expression() // throws RecognitionException [1]
    {   
        int primary_or_array_creation_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 42) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:194:37: ( ( array_creation_expression )=> array_creation_expression | primary_expression )
            int alt46 = 2;
            alt46 = dfa46.Predict(input);
            switch (alt46) 
            {
                case 1 :
                    // cs.g:195:2: ( array_creation_expression )=> array_creation_expression
                    {
                    	PushFollow(FOLLOW_array_creation_expression_in_primary_or_array_creation_expression1441);
                    	array_creation_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:196:4: primary_expression
                    {
                    	PushFollow(FOLLOW_primary_expression_in_primary_or_array_creation_expression1446);
                    	primary_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 42, primary_or_array_creation_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "primary_or_array_creation_expression"


    // $ANTLR start "array_creation_expression"
    // cs.g:199:1: array_creation_expression : 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) ;
    public void array_creation_expression() // throws RecognitionException [1]
    {   
        int array_creation_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 43) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:199:26: ( 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) )
            // cs.g:200:2: 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
            {
            	Match(input,68,FOLLOW_68_in_array_creation_expression1457); if (state.failed) return ;
            	// cs.g:201:3: ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
            	int alt52 = 2;
            	int LA52_0 = input.LA(1);

            	if ( (LA52_0 == IDENTIFIER || LA52_0 == 65 || LA52_0 == 82 || (LA52_0 >= 132 && LA52_0 <= 133) || (LA52_0 >= 135 && LA52_0 <= 148) || (LA52_0 >= 150 && LA52_0 <= 152) || LA52_0 == 154 || (LA52_0 >= 157 && LA52_0 <= 168) || LA52_0 == 170 || (LA52_0 >= 177 && LA52_0 <= 178) || (LA52_0 >= 195 && LA52_0 <= 202)) )
            	{
            	    alt52 = 1;
            	}
            	else if ( (LA52_0 == 86) )
            	{
            	    alt52 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d52s0 =
            	        new NoViableAltException("", 52, 0, input);

            	    throw nvae_d52s0;
            	}
            	switch (alt52) 
            	{
            	    case 1 :
            	        // cs.g:201:4: type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
            	        {
            	        	PushFollow(FOLLOW_type_in_array_creation_expression1465);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:201:11: ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
            	        	int alt51 = 2;
            	        	int LA51_0 = input.LA(1);

            	        	if ( (LA51_0 == 86) )
            	        	{
            	        	    alt51 = 1;
            	        	}
            	        	else if ( (LA51_0 == 62) )
            	        	{
            	        	    alt51 = 2;
            	        	}
            	        	else 
            	        	{
            	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        	    NoViableAltException nvae_d51s0 =
            	        	        new NoViableAltException("", 51, 0, input);

            	        	    throw nvae_d51s0;
            	        	}
            	        	switch (alt51) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:201:12: '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
            	        	        {
            	        	        	Match(input,86,FOLLOW_86_in_array_creation_expression1470); if (state.failed) return ;
            	        	        	PushFollow(FOLLOW_expression_list_in_array_creation_expression1474);
            	        	        	expression_list();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;
            	        	        	Match(input,87,FOLLOW_87_in_array_creation_expression1478); if (state.failed) return ;
            	        	        	// cs.g:202:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
            	        	        	int alt50 = 2;
            	        	        	alt50 = dfa50.Predict(input);
            	        	        	switch (alt50) 
            	        	        	{
            	        	        	    case 1 :
            	        	        	        // cs.g:202:8: ( rank_specifiers )? ( array_initializer )?
            	        	        	        {
            	        	        	        	// cs.g:202:8: ( rank_specifiers )?
            	        	        	        	int alt47 = 2;
            	        	        	        	int LA47_0 = input.LA(1);

            	        	        	        	if ( (LA47_0 == 86) )
            	        	        	        	{
            	        	        	        	    alt47 = 1;
            	        	        	        	}
            	        	        	        	switch (alt47) 
            	        	        	        	{
            	        	        	        	    case 1 :
            	        	        	        	        // cs.g:202:8: rank_specifiers
            	        	        	        	        {
            	        	        	        	        	PushFollow(FOLLOW_rank_specifiers_in_array_creation_expression1490);
            	        	        	        	        	rank_specifiers();
            	        	        	        	        	state._fsp--;
            	        	        	        	        	if (state.failed) return ;

            	        	        	        	        }
            	        	        	        	        break;

            	        	        	        	}

            	        	        	        	// cs.g:202:27: ( array_initializer )?
            	        	        	        	int alt48 = 2;
            	        	        	        	int LA48_0 = input.LA(1);

            	        	        	        	if ( (LA48_0 == 62) )
            	        	        	        	{
            	        	        	        	    alt48 = 1;
            	        	        	        	}
            	        	        	        	switch (alt48) 
            	        	        	        	{
            	        	        	        	    case 1 :
            	        	        	        	        // cs.g:202:27: array_initializer
            	        	        	        	        {
            	        	        	        	        	PushFollow(FOLLOW_array_initializer_in_array_creation_expression1495);
            	        	        	        	        	array_initializer();
            	        	        	        	        	state._fsp--;
            	        	        	        	        	if (state.failed) return ;

            	        	        	        	        }
            	        	        	        	        break;

            	        	        	        	}


            	        	        	        }
            	        	        	        break;
            	        	        	    case 2 :
            	        	        	        // cs.g:204:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
            	        	        	        {
            	        	        	        	// cs.g:204:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
            	        	        	        	do 
            	        	        	        	{
            	        	        	        	    int alt49 = 3;
            	        	        	        	    int LA49_0 = input.LA(1);

            	        	        	        	    if ( (LA49_0 == 88) )
            	        	        	        	    {
            	        	        	        	        int LA49_1 = input.LA(2);

            	        	        	        	        if ( (synpred12_cs()) )
            	        	        	        	        {
            	        	        	        	            alt49 = 1;
            	        	        	        	        }


            	        	        	        	    }
            	        	        	        	    else if ( ((LA49_0 >= DOT && LA49_0 <= PTR) || LA49_0 == 86) )
            	        	        	        	    {
            	        	        	        	        alt49 = 2;
            	        	        	        	    }


            	        	        	        	    switch (alt49) 
            	        	        	        		{
            	        	        	        			case 1 :
            	        	        	        			    // cs.g:204:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
            	        	        	        			    {
            	        	        	        			    	// cs.g:204:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
            	        	        	        			    	// cs.g:204:11: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
            	        	        	        			    	{
            	        	        	        			    		PushFollow(FOLLOW_arguments_in_array_creation_expression1531);
            	        	        	        			    		arguments();
            	        	        	        			    		state._fsp--;
            	        	        	        			    		if (state.failed) return ;
            	        	        	        			    		PushFollow(FOLLOW_invocation_part_in_array_creation_expression1535);
            	        	        	        			    		invocation_part();
            	        	        	        			    		state._fsp--;
            	        	        	        			    		if (state.failed) return ;

            	        	        	        			    	}


            	        	        	        			    }
            	        	        	        			    break;
            	        	        	        			case 2 :
            	        	        	        			    // cs.g:205:10: invocation_part
            	        	        	        			    {
            	        	        	        			    	PushFollow(FOLLOW_invocation_part_in_array_creation_expression1547);
            	        	        	        			    	invocation_part();
            	        	        	        			    	state._fsp--;
            	        	        	        			    	if (state.failed) return ;

            	        	        	        			    }
            	        	        	        			    break;

            	        	        	        			default:
            	        	        	        			    goto loop49;
            	        	        	        	    }
            	        	        	        	} while (true);

            	        	        	        	loop49:
            	        	        	        		;	// Stops C# compiler whining that label 'loop49' has no statements

            	        	        	        	PushFollow(FOLLOW_arguments_in_array_creation_expression1553);
            	        	        	        	arguments();
            	        	        	        	state._fsp--;
            	        	        	        	if (state.failed) return ;

            	        	        	        }
            	        	        	        break;

            	        	        	}


            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:207:7: array_initializer
            	        	        {
            	        	        	PushFollow(FOLLOW_array_initializer_in_array_creation_expression1575);
            	        	        	array_initializer();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:209:5: rank_specifier ( array_initializer )
            	        {
            	        	PushFollow(FOLLOW_rank_specifier_in_array_creation_expression1589);
            	        	rank_specifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:210:4: ( array_initializer )
            	        	// cs.g:210:5: array_initializer
            	        	{
            	        		PushFollow(FOLLOW_array_initializer_in_array_creation_expression1598);
            	        		array_initializer();
            	        		state._fsp--;
            	        		if (state.failed) return ;

            	        	}


            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 43, array_creation_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "array_creation_expression"


    // $ANTLR start "array_initializer"
    // cs.g:213:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' ;
    public void array_initializer() // throws RecognitionException [1]
    {   
        int array_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 44) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:213:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' )
            // cs.g:214:2: '{' ( variable_initializer_list )? ( ',' )? '}'
            {
            	Match(input,62,FOLLOW_62_in_array_initializer1619); if (state.failed) return ;
            	// cs.g:214:8: ( variable_initializer_list )?
            	int alt53 = 2;
            	int LA53_0 = input.LA(1);

            	if ( ((LA53_0 >= IDENTIFIER && LA53_0 <= NULL) || LA53_0 == MINUS || LA53_0 == 62 || LA53_0 == 65 || LA53_0 == 68 || LA53_0 == 83 || LA53_0 == 85 || LA53_0 == 88 || (LA53_0 >= 93 && LA53_0 <= 98) || LA53_0 == 100 || (LA53_0 >= 102 && LA53_0 <= 106) || LA53_0 == 117 || (LA53_0 >= 132 && LA53_0 <= 133) || (LA53_0 >= 135 && LA53_0 <= 148) || (LA53_0 >= 150 && LA53_0 <= 152) || LA53_0 == 154 || (LA53_0 >= 157 && LA53_0 <= 168) || LA53_0 == 170 || (LA53_0 >= 177 && LA53_0 <= 178) || (LA53_0 >= 195 && LA53_0 <= 202)) )
            	{
            	    alt53 = 1;
            	}
            	switch (alt53) 
            	{
            	    case 1 :
            	        // cs.g:214:8: variable_initializer_list
            	        {
            	        	PushFollow(FOLLOW_variable_initializer_list_in_array_initializer1623);
            	        	variable_initializer_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:214:37: ( ',' )?
            	int alt54 = 2;
            	int LA54_0 = input.LA(1);

            	if ( (LA54_0 == 89) )
            	{
            	    alt54 = 1;
            	}
            	switch (alt54) 
            	{
            	    case 1 :
            	        // cs.g:214:37: ','
            	        {
            	        	Match(input,89,FOLLOW_89_in_array_initializer1628); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_array_initializer1633); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 44, array_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "array_initializer"


    // $ANTLR start "variable_initializer_list"
    // cs.g:215:1: variable_initializer_list : variable_initializer ( ',' variable_initializer )* ;
    public void variable_initializer_list() // throws RecognitionException [1]
    {   
        int variable_initializer_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 45) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:215:26: ( variable_initializer ( ',' variable_initializer )* )
            // cs.g:216:2: variable_initializer ( ',' variable_initializer )*
            {
            	PushFollow(FOLLOW_variable_initializer_in_variable_initializer_list1641);
            	variable_initializer();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:216:23: ( ',' variable_initializer )*
            	do 
            	{
            	    int alt55 = 2;
            	    int LA55_0 = input.LA(1);

            	    if ( (LA55_0 == 89) )
            	    {
            	        int LA55_1 = input.LA(2);

            	        if ( ((LA55_1 >= IDENTIFIER && LA55_1 <= NULL) || LA55_1 == MINUS || LA55_1 == 62 || LA55_1 == 65 || LA55_1 == 68 || LA55_1 == 83 || LA55_1 == 85 || LA55_1 == 88 || (LA55_1 >= 93 && LA55_1 <= 98) || LA55_1 == 100 || (LA55_1 >= 102 && LA55_1 <= 106) || LA55_1 == 117 || (LA55_1 >= 132 && LA55_1 <= 133) || (LA55_1 >= 135 && LA55_1 <= 148) || (LA55_1 >= 150 && LA55_1 <= 152) || LA55_1 == 154 || (LA55_1 >= 157 && LA55_1 <= 168) || LA55_1 == 170 || (LA55_1 >= 177 && LA55_1 <= 178) || (LA55_1 >= 195 && LA55_1 <= 202)) )
            	        {
            	            alt55 = 1;
            	        }


            	    }


            	    switch (alt55) 
            		{
            			case 1 :
            			    // cs.g:216:24: ',' variable_initializer
            			    {
            			    	Match(input,89,FOLLOW_89_in_variable_initializer_list1644); if (state.failed) return ;
            			    	PushFollow(FOLLOW_variable_initializer_in_variable_initializer_list1646);
            			    	variable_initializer();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop55;
            	    }
            	} while (true);

            	loop55:
            		;	// Stops C# compiler whining that label 'loop55' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 45, variable_initializer_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variable_initializer_list"


    // $ANTLR start "variable_initializer"
    // cs.g:217:1: variable_initializer : ( expression | array_initializer );
    public void variable_initializer() // throws RecognitionException [1]
    {   
        int variable_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 46) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:217:21: ( expression | array_initializer )
            int alt56 = 2;
            int LA56_0 = input.LA(1);

            if ( ((LA56_0 >= IDENTIFIER && LA56_0 <= NULL) || LA56_0 == MINUS || LA56_0 == 65 || LA56_0 == 68 || LA56_0 == 83 || LA56_0 == 85 || LA56_0 == 88 || (LA56_0 >= 93 && LA56_0 <= 98) || LA56_0 == 100 || (LA56_0 >= 102 && LA56_0 <= 106) || LA56_0 == 117 || (LA56_0 >= 132 && LA56_0 <= 133) || (LA56_0 >= 135 && LA56_0 <= 148) || (LA56_0 >= 150 && LA56_0 <= 152) || LA56_0 == 154 || (LA56_0 >= 157 && LA56_0 <= 168) || LA56_0 == 170 || (LA56_0 >= 177 && LA56_0 <= 178) || (LA56_0 >= 195 && LA56_0 <= 202)) )
            {
                alt56 = 1;
            }
            else if ( (LA56_0 == 62) )
            {
                alt56 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d56s0 =
                    new NoViableAltException("", 56, 0, input);

                throw nvae_d56s0;
            }
            switch (alt56) 
            {
                case 1 :
                    // cs.g:218:2: expression
                    {
                    	PushFollow(FOLLOW_expression_in_variable_initializer1656);
                    	expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:218:15: array_initializer
                    {
                    	PushFollow(FOLLOW_array_initializer_in_variable_initializer1660);
                    	array_initializer();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 46, variable_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variable_initializer"


    // $ANTLR start "sizeof_expression"
    // cs.g:219:1: sizeof_expression : 'sizeof' '(' unmanaged_type ')' ;
    public void sizeof_expression() // throws RecognitionException [1]
    {   
        int sizeof_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 47) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:219:18: ( 'sizeof' '(' unmanaged_type ')' )
            // cs.g:220:2: 'sizeof' '(' unmanaged_type ')'
            {
            	Match(input,93,FOLLOW_93_in_sizeof_expression1668); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_sizeof_expression1672); if (state.failed) return ;
            	PushFollow(FOLLOW_unmanaged_type_in_sizeof_expression1676);
            	unmanaged_type();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_sizeof_expression1680); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 47, sizeof_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "sizeof_expression"


    // $ANTLR start "checked_expression"
    // cs.g:221:1: checked_expression : 'checked' '(' expression ')' ;
    public void checked_expression() // throws RecognitionException [1]
    {   
        int checked_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 48) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:221:19: ( 'checked' '(' expression ')' )
            // cs.g:222:2: 'checked' '(' expression ')'
            {
            	Match(input,94,FOLLOW_94_in_checked_expression1688); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_checked_expression1692); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_checked_expression1696);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_checked_expression1700); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 48, checked_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "checked_expression"


    // $ANTLR start "unchecked_expression"
    // cs.g:223:1: unchecked_expression : 'unchecked' '(' expression ')' ;
    public void unchecked_expression() // throws RecognitionException [1]
    {   
        int unchecked_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 49) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:223:21: ( 'unchecked' '(' expression ')' )
            // cs.g:224:2: 'unchecked' '(' expression ')'
            {
            	Match(input,95,FOLLOW_95_in_unchecked_expression1709); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_unchecked_expression1713); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_unchecked_expression1717);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_unchecked_expression1721); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 49, unchecked_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unchecked_expression"


    // $ANTLR start "default_value_expression"
    // cs.g:225:1: default_value_expression : 'default' '(' type ')' ;
    public void default_value_expression() // throws RecognitionException [1]
    {   
        int default_value_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 50) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:225:25: ( 'default' '(' type ')' )
            // cs.g:226:2: 'default' '(' type ')'
            {
            	Match(input,96,FOLLOW_96_in_default_value_expression1730); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_default_value_expression1734); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_default_value_expression1738);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_default_value_expression1742); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 50, default_value_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "default_value_expression"


    // $ANTLR start "anonymous_method_expression"
    // cs.g:227:1: anonymous_method_expression : 'delegate' ( explicit_anonymous_function_signature )? block ;
    public void anonymous_method_expression() // throws RecognitionException [1]
    {   
        int anonymous_method_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 51) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:227:28: ( 'delegate' ( explicit_anonymous_function_signature )? block )
            // cs.g:228:2: 'delegate' ( explicit_anonymous_function_signature )? block
            {
            	Match(input,97,FOLLOW_97_in_anonymous_method_expression1750); if (state.failed) return ;
            	// cs.g:228:15: ( explicit_anonymous_function_signature )?
            	int alt57 = 2;
            	int LA57_0 = input.LA(1);

            	if ( (LA57_0 == 88) )
            	{
            	    alt57 = 1;
            	}
            	switch (alt57) 
            	{
            	    case 1 :
            	        // cs.g:228:15: explicit_anonymous_function_signature
            	        {
            	        	PushFollow(FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression1754);
            	        	explicit_anonymous_function_signature();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_block_in_anonymous_method_expression1759);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 51, anonymous_method_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "anonymous_method_expression"


    // $ANTLR start "explicit_anonymous_function_signature"
    // cs.g:229:1: explicit_anonymous_function_signature : '(' ( explicit_anonymous_function_parameter_list )? ')' ;
    public void explicit_anonymous_function_signature() // throws RecognitionException [1]
    {   
        int explicit_anonymous_function_signature_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 52) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:229:38: ( '(' ( explicit_anonymous_function_parameter_list )? ')' )
            // cs.g:230:2: '(' ( explicit_anonymous_function_parameter_list )? ')'
            {
            	Match(input,88,FOLLOW_88_in_explicit_anonymous_function_signature1766); if (state.failed) return ;
            	// cs.g:230:8: ( explicit_anonymous_function_parameter_list )?
            	int alt58 = 2;
            	int LA58_0 = input.LA(1);

            	if ( (LA58_0 == IDENTIFIER || LA58_0 == 65 || LA58_0 == 82 || (LA58_0 >= 91 && LA58_0 <= 92) || (LA58_0 >= 132 && LA58_0 <= 133) || (LA58_0 >= 135 && LA58_0 <= 148) || (LA58_0 >= 150 && LA58_0 <= 152) || LA58_0 == 154 || (LA58_0 >= 157 && LA58_0 <= 168) || LA58_0 == 170 || (LA58_0 >= 177 && LA58_0 <= 178) || (LA58_0 >= 195 && LA58_0 <= 202)) )
            	{
            	    alt58 = 1;
            	}
            	switch (alt58) 
            	{
            	    case 1 :
            	        // cs.g:230:8: explicit_anonymous_function_parameter_list
            	        {
            	        	PushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature1770);
            	        	explicit_anonymous_function_parameter_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_explicit_anonymous_function_signature1775); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 52, explicit_anonymous_function_signature_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "explicit_anonymous_function_signature"


    // $ANTLR start "explicit_anonymous_function_parameter_list"
    // cs.g:231:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* ;
    public void explicit_anonymous_function_parameter_list() // throws RecognitionException [1]
    {   
        int explicit_anonymous_function_parameter_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 53) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:231:43: ( explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* )
            // cs.g:232:2: explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )*
            {
            	PushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1783);
            	explicit_anonymous_function_parameter();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:232:42: ( ',' explicit_anonymous_function_parameter )*
            	do 
            	{
            	    int alt59 = 2;
            	    int LA59_0 = input.LA(1);

            	    if ( (LA59_0 == 89) )
            	    {
            	        alt59 = 1;
            	    }


            	    switch (alt59) 
            		{
            			case 1 :
            			    // cs.g:232:43: ',' explicit_anonymous_function_parameter
            			    {
            			    	Match(input,89,FOLLOW_89_in_explicit_anonymous_function_parameter_list1788); if (state.failed) return ;
            			    	PushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1792);
            			    	explicit_anonymous_function_parameter();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop59;
            	    }
            	} while (true);

            	loop59:
            		;	// Stops C# compiler whining that label 'loop59' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 53, explicit_anonymous_function_parameter_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "explicit_anonymous_function_parameter_list"


    // $ANTLR start "explicit_anonymous_function_parameter"
    // cs.g:233:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type identifier ;
    public void explicit_anonymous_function_parameter() // throws RecognitionException [1]
    {   
        int explicit_anonymous_function_parameter_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 54) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:233:38: ( ( anonymous_function_parameter_modifier )? type identifier )
            // cs.g:234:2: ( anonymous_function_parameter_modifier )? type identifier
            {
            	// cs.g:234:2: ( anonymous_function_parameter_modifier )?
            	int alt60 = 2;
            	int LA60_0 = input.LA(1);

            	if ( ((LA60_0 >= 91 && LA60_0 <= 92)) )
            	{
            	    alt60 = 1;
            	}
            	switch (alt60) 
            	{
            	    case 1 :
            	        // cs.g:234:2: anonymous_function_parameter_modifier
            	        {
            	        	PushFollow(FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter1803);
            	        	anonymous_function_parameter_modifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_type_in_explicit_anonymous_function_parameter1808);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_explicit_anonymous_function_parameter1812);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 54, explicit_anonymous_function_parameter_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "explicit_anonymous_function_parameter"


    // $ANTLR start "anonymous_function_parameter_modifier"
    // cs.g:235:1: anonymous_function_parameter_modifier : ( 'ref' | 'out' );
    public void anonymous_function_parameter_modifier() // throws RecognitionException [1]
    {   
        int anonymous_function_parameter_modifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 55) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:235:38: ( 'ref' | 'out' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 91 && input.LA(1) <= 92) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 55, anonymous_function_parameter_modifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "anonymous_function_parameter_modifier"


    // $ANTLR start "object_creation_expression"
    // cs.g:240:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
    public void object_creation_expression() // throws RecognitionException [1]
    {   
        int object_creation_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 56) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:240:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
            // cs.g:242:2: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
            {
            	PushFollow(FOLLOW_type_in_object_creation_expression1836);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:243:3: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
            	int alt63 = 2;
            	int LA63_0 = input.LA(1);

            	if ( (LA63_0 == 88) )
            	{
            	    alt63 = 1;
            	}
            	else if ( (LA63_0 == 62) )
            	{
            	    alt63 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d63s0 =
            	        new NoViableAltException("", 63, 0, input);

            	    throw nvae_d63s0;
            	}
            	switch (alt63) 
            	{
            	    case 1 :
            	        // cs.g:243:5: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
            	        {
            	        	Match(input,88,FOLLOW_88_in_object_creation_expression1845); if (state.failed) return ;
            	        	// cs.g:243:11: ( argument_list )?
            	        	int alt61 = 2;
            	        	int LA61_0 = input.LA(1);

            	        	if ( ((LA61_0 >= IDENTIFIER && LA61_0 <= NULL) || LA61_0 == MINUS || LA61_0 == 65 || LA61_0 == 68 || LA61_0 == 83 || LA61_0 == 85 || LA61_0 == 88 || (LA61_0 >= 91 && LA61_0 <= 98) || LA61_0 == 100 || (LA61_0 >= 102 && LA61_0 <= 106) || LA61_0 == 117 || (LA61_0 >= 132 && LA61_0 <= 133) || (LA61_0 >= 135 && LA61_0 <= 148) || (LA61_0 >= 150 && LA61_0 <= 152) || LA61_0 == 154 || (LA61_0 >= 157 && LA61_0 <= 168) || LA61_0 == 170 || (LA61_0 >= 177 && LA61_0 <= 178) || (LA61_0 >= 195 && LA61_0 <= 202)) )
            	        	{
            	        	    alt61 = 1;
            	        	}
            	        	switch (alt61) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:243:11: argument_list
            	        	        {
            	        	        	PushFollow(FOLLOW_argument_list_in_object_creation_expression1849);
            	        	        	argument_list();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}

            	        	Match(input,RPAREN,FOLLOW_RPAREN_in_object_creation_expression1854); if (state.failed) return ;
            	        	// cs.g:243:34: ( object_or_collection_initializer )?
            	        	int alt62 = 2;
            	        	int LA62_0 = input.LA(1);

            	        	if ( (LA62_0 == 62) )
            	        	{
            	        	    alt62 = 1;
            	        	}
            	        	switch (alt62) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:243:34: object_or_collection_initializer
            	        	        {
            	        	        	PushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression1858);
            	        	        	object_or_collection_initializer();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:244:7: object_or_collection_initializer
            	        {
            	        	PushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression1869);
            	        	object_or_collection_initializer();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 56, object_creation_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "object_creation_expression"


    // $ANTLR start "object_or_collection_initializer"
    // cs.g:246:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer ) ;
    public void object_or_collection_initializer() // throws RecognitionException [1]
    {   
        int object_or_collection_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 57) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:246:33: ( '{' ( object_initializer | collection_initializer ) )
            // cs.g:247:2: '{' ( object_initializer | collection_initializer )
            {
            	Match(input,62,FOLLOW_62_in_object_or_collection_initializer1881); if (state.failed) return ;
            	// cs.g:247:7: ( object_initializer | collection_initializer )
            	int alt64 = 2;
            	switch ( input.LA(1) ) 
            	{
            	case 133:
            		{
            	    int LA64_1 = input.LA(2);

            	    if ( (LA64_1 == 66) )
            	    {
            	        alt64 = 1;
            	    }
            	    else if ( (LA64_1 == IDENTIFIER || (LA64_1 >= DOT && LA64_1 <= GT) || LA64_1 == 63 || LA64_1 == 65 || LA64_1 == 82 || LA64_1 == 84 || LA64_1 == 86 || (LA64_1 >= 88 && LA64_1 <= 89) || (LA64_1 >= 99 && LA64_1 <= 104) || (LA64_1 >= 116 && LA64_1 <= 133) || (LA64_1 >= 135 && LA64_1 <= 148) || (LA64_1 >= 150 && LA64_1 <= 152) || LA64_1 == 154 || (LA64_1 >= 157 && LA64_1 <= 168) || LA64_1 == 170 || (LA64_1 >= 177 && LA64_1 <= 178) || (LA64_1 >= 195 && LA64_1 <= 202)) )
            	    {
            	        alt64 = 2;
            	    }
            	    else 
            	    {
            	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        NoViableAltException nvae_d64s1 =
            	            new NoViableAltException("", 64, 1, input);

            	        throw nvae_d64s1;
            	    }
            	    }
            	    break;
            	case 63:
            	case 89:
            		{
            	    alt64 = 1;
            	    }
            	    break;
            	case Real_literal:
            	case NUMBER:
            	case Hex_number:
            	case Character_literal:
            	case STRINGLITERAL:
            	case Verbatim_string_literal:
            	case TRUE:
            	case FALSE:
            	case NULL:
            	case MINUS:
            	case 62:
            	case 68:
            	case 83:
            	case 85:
            	case 88:
            	case 93:
            	case 94:
            	case 95:
            	case 96:
            	case 97:
            	case 98:
            	case 100:
            	case 102:
            	case 103:
            	case 104:
            	case 105:
            	case 106:
            	case 117:
            	case 160:
            	case 161:
            	case 162:
            	case 163:
            	case 164:
            	case 165:
            	case 166:
            	case 167:
            	case 168:
            	case 196:
            	case 197:
            	case 198:
            	case 199:
            	case 200:
            	case 201:
            		{
            	    alt64 = 2;
            	    }
            	    break;
            	case IDENTIFIER:
            	case 65:
            	case 132:
            	case 135:
            	case 136:
            	case 137:
            	case 138:
            	case 139:
            	case 140:
            	case 141:
            	case 142:
            	case 143:
            	case 144:
            	case 145:
            	case 146:
            	case 147:
            	case 148:
            	case 150:
            	case 151:
            	case 152:
            	case 154:
            	case 157:
            	case 158:
            	case 159:
            	case 170:
            	case 177:
            	case 178:
            	case 195:
            	case 202:
            		{
            	    int LA64_4 = input.LA(2);

            	    if ( (LA64_4 == 66) )
            	    {
            	        alt64 = 1;
            	    }
            	    else if ( ((LA64_4 >= DOT && LA64_4 <= GT) || LA64_4 == 63 || LA64_4 == 84 || LA64_4 == 86 || (LA64_4 >= 88 && LA64_4 <= 89) || (LA64_4 >= 99 && LA64_4 <= 104) || (LA64_4 >= 116 && LA64_4 <= 131)) )
            	    {
            	        alt64 = 2;
            	    }
            	    else 
            	    {
            	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        NoViableAltException nvae_d64s4 =
            	            new NoViableAltException("", 64, 4, input);

            	        throw nvae_d64s4;
            	    }
            	    }
            	    break;
            		default:
            		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		    NoViableAltException nvae_d64s0 =
            		        new NoViableAltException("", 64, 0, input);

            		    throw nvae_d64s0;
            	}

            	switch (alt64) 
            	{
            	    case 1 :
            	        // cs.g:247:8: object_initializer
            	        {
            	        	PushFollow(FOLLOW_object_initializer_in_object_or_collection_initializer1885);
            	        	object_initializer();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:248:5: collection_initializer
            	        {
            	        	PushFollow(FOLLOW_collection_initializer_in_object_or_collection_initializer1892);
            	        	collection_initializer();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 57, object_or_collection_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "object_or_collection_initializer"


    // $ANTLR start "collection_initializer"
    // cs.g:249:1: collection_initializer : element_initializer_list ( ',' )? '}' ;
    public void collection_initializer() // throws RecognitionException [1]
    {   
        int collection_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 58) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:249:23: ( element_initializer_list ( ',' )? '}' )
            // cs.g:250:2: element_initializer_list ( ',' )? '}'
            {
            	PushFollow(FOLLOW_element_initializer_list_in_collection_initializer1902);
            	element_initializer_list();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:250:29: ( ',' )?
            	int alt65 = 2;
            	int LA65_0 = input.LA(1);

            	if ( (LA65_0 == 89) )
            	{
            	    alt65 = 1;
            	}
            	switch (alt65) 
            	{
            	    case 1 :
            	        // cs.g:250:29: ','
            	        {
            	        	Match(input,89,FOLLOW_89_in_collection_initializer1906); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_collection_initializer1911); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 58, collection_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "collection_initializer"


    // $ANTLR start "element_initializer_list"
    // cs.g:251:1: element_initializer_list : element_initializer ( ',' element_initializer )* ;
    public void element_initializer_list() // throws RecognitionException [1]
    {   
        int element_initializer_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 59) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:251:25: ( element_initializer ( ',' element_initializer )* )
            // cs.g:252:2: element_initializer ( ',' element_initializer )*
            {
            	PushFollow(FOLLOW_element_initializer_in_element_initializer_list1920);
            	element_initializer();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:252:23: ( ',' element_initializer )*
            	do 
            	{
            	    int alt66 = 2;
            	    int LA66_0 = input.LA(1);

            	    if ( (LA66_0 == 89) )
            	    {
            	        int LA66_1 = input.LA(2);

            	        if ( ((LA66_1 >= IDENTIFIER && LA66_1 <= NULL) || LA66_1 == MINUS || LA66_1 == 62 || LA66_1 == 65 || LA66_1 == 68 || LA66_1 == 83 || LA66_1 == 85 || LA66_1 == 88 || (LA66_1 >= 93 && LA66_1 <= 98) || LA66_1 == 100 || (LA66_1 >= 102 && LA66_1 <= 106) || LA66_1 == 117 || (LA66_1 >= 132 && LA66_1 <= 133) || (LA66_1 >= 135 && LA66_1 <= 148) || (LA66_1 >= 150 && LA66_1 <= 152) || LA66_1 == 154 || (LA66_1 >= 157 && LA66_1 <= 168) || LA66_1 == 170 || (LA66_1 >= 177 && LA66_1 <= 178) || (LA66_1 >= 195 && LA66_1 <= 202)) )
            	        {
            	            alt66 = 1;
            	        }


            	    }


            	    switch (alt66) 
            		{
            			case 1 :
            			    // cs.g:252:24: ',' element_initializer
            			    {
            			    	Match(input,89,FOLLOW_89_in_element_initializer_list1924); if (state.failed) return ;
            			    	PushFollow(FOLLOW_element_initializer_in_element_initializer_list1926);
            			    	element_initializer();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop66;
            	    }
            	} while (true);

            	loop66:
            		;	// Stops C# compiler whining that label 'loop66' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 59, element_initializer_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "element_initializer_list"


    // $ANTLR start "element_initializer"
    // cs.g:253:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
    public void element_initializer() // throws RecognitionException [1]
    {   
        int element_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 60) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:253:20: ( non_assignment_expression | '{' expression_list '}' )
            int alt67 = 2;
            int LA67_0 = input.LA(1);

            if ( ((LA67_0 >= IDENTIFIER && LA67_0 <= NULL) || LA67_0 == MINUS || LA67_0 == 65 || LA67_0 == 68 || LA67_0 == 83 || LA67_0 == 85 || LA67_0 == 88 || (LA67_0 >= 93 && LA67_0 <= 98) || LA67_0 == 100 || (LA67_0 >= 102 && LA67_0 <= 106) || LA67_0 == 117 || (LA67_0 >= 132 && LA67_0 <= 133) || (LA67_0 >= 135 && LA67_0 <= 148) || (LA67_0 >= 150 && LA67_0 <= 152) || LA67_0 == 154 || (LA67_0 >= 157 && LA67_0 <= 168) || LA67_0 == 170 || (LA67_0 >= 177 && LA67_0 <= 178) || (LA67_0 >= 195 && LA67_0 <= 202)) )
            {
                alt67 = 1;
            }
            else if ( (LA67_0 == 62) )
            {
                alt67 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d67s0 =
                    new NoViableAltException("", 67, 0, input);

                throw nvae_d67s0;
            }
            switch (alt67) 
            {
                case 1 :
                    // cs.g:254:2: non_assignment_expression
                    {
                    	PushFollow(FOLLOW_non_assignment_expression_in_element_initializer1937);
                    	non_assignment_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:255:4: '{' expression_list '}'
                    {
                    	Match(input,62,FOLLOW_62_in_element_initializer1943); if (state.failed) return ;
                    	PushFollow(FOLLOW_expression_list_in_element_initializer1947);
                    	expression_list();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	Match(input,63,FOLLOW_63_in_element_initializer1951); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 60, element_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "element_initializer"


    // $ANTLR start "object_initializer"
    // cs.g:262:1: object_initializer : ( member_initializer_list )? ( ',' )? '}' ;
    public void object_initializer() // throws RecognitionException [1]
    {   
        int object_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 61) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:262:19: ( ( member_initializer_list )? ( ',' )? '}' )
            // cs.g:263:2: ( member_initializer_list )? ( ',' )? '}'
            {
            	// cs.g:263:2: ( member_initializer_list )?
            	int alt68 = 2;
            	int LA68_0 = input.LA(1);

            	if ( (LA68_0 == IDENTIFIER || LA68_0 == 65 || (LA68_0 >= 132 && LA68_0 <= 133) || (LA68_0 >= 135 && LA68_0 <= 148) || (LA68_0 >= 150 && LA68_0 <= 152) || LA68_0 == 154 || (LA68_0 >= 157 && LA68_0 <= 159) || LA68_0 == 170 || (LA68_0 >= 177 && LA68_0 <= 178) || LA68_0 == 195 || LA68_0 == 202) )
            	{
            	    alt68 = 1;
            	}
            	switch (alt68) 
            	{
            	    case 1 :
            	        // cs.g:263:2: member_initializer_list
            	        {
            	        	PushFollow(FOLLOW_member_initializer_list_in_object_initializer1966);
            	        	member_initializer_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:263:29: ( ',' )?
            	int alt69 = 2;
            	int LA69_0 = input.LA(1);

            	if ( (LA69_0 == 89) )
            	{
            	    alt69 = 1;
            	}
            	switch (alt69) 
            	{
            	    case 1 :
            	        // cs.g:263:29: ','
            	        {
            	        	Match(input,89,FOLLOW_89_in_object_initializer1971); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_object_initializer1976); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 61, object_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "object_initializer"


    // $ANTLR start "member_initializer_list"
    // cs.g:264:1: member_initializer_list : member_initializer ( ',' member_initializer ) ;
    public void member_initializer_list() // throws RecognitionException [1]
    {   
        int member_initializer_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 62) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:264:24: ( member_initializer ( ',' member_initializer ) )
            // cs.g:265:2: member_initializer ( ',' member_initializer )
            {
            	PushFollow(FOLLOW_member_initializer_in_member_initializer_list1985);
            	member_initializer();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:265:22: ( ',' member_initializer )
            	// cs.g:265:23: ',' member_initializer
            	{
            		Match(input,89,FOLLOW_89_in_member_initializer_list1989); if (state.failed) return ;
            		PushFollow(FOLLOW_member_initializer_in_member_initializer_list1991);
            		member_initializer();
            		state._fsp--;
            		if (state.failed) return ;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 62, member_initializer_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "member_initializer_list"


    // $ANTLR start "member_initializer"
    // cs.g:266:1: member_initializer : identifier '=' initializer_value ;
    public void member_initializer() // throws RecognitionException [1]
    {   
        int member_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 63) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:266:19: ( identifier '=' initializer_value )
            // cs.g:267:2: identifier '=' initializer_value
            {
            	PushFollow(FOLLOW_identifier_in_member_initializer2001);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,66,FOLLOW_66_in_member_initializer2005); if (state.failed) return ;
            	PushFollow(FOLLOW_initializer_value_in_member_initializer2009);
            	initializer_value();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 63, member_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "member_initializer"


    // $ANTLR start "initializer_value"
    // cs.g:268:1: initializer_value : ( expression | object_or_collection_initializer );
    public void initializer_value() // throws RecognitionException [1]
    {   
        int initializer_value_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 64) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:268:18: ( expression | object_or_collection_initializer )
            int alt70 = 2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0 >= IDENTIFIER && LA70_0 <= NULL) || LA70_0 == MINUS || LA70_0 == 65 || LA70_0 == 68 || LA70_0 == 83 || LA70_0 == 85 || LA70_0 == 88 || (LA70_0 >= 93 && LA70_0 <= 98) || LA70_0 == 100 || (LA70_0 >= 102 && LA70_0 <= 106) || LA70_0 == 117 || (LA70_0 >= 132 && LA70_0 <= 133) || (LA70_0 >= 135 && LA70_0 <= 148) || (LA70_0 >= 150 && LA70_0 <= 152) || LA70_0 == 154 || (LA70_0 >= 157 && LA70_0 <= 168) || LA70_0 == 170 || (LA70_0 >= 177 && LA70_0 <= 178) || (LA70_0 >= 195 && LA70_0 <= 202)) )
            {
                alt70 = 1;
            }
            else if ( (LA70_0 == 62) )
            {
                alt70 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d70s0 =
                    new NoViableAltException("", 70, 0, input);

                throw nvae_d70s0;
            }
            switch (alt70) 
            {
                case 1 :
                    // cs.g:269:2: expression
                    {
                    	PushFollow(FOLLOW_expression_in_initializer_value2018);
                    	expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:270:4: object_or_collection_initializer
                    {
                    	PushFollow(FOLLOW_object_or_collection_initializer_in_initializer_value2024);
                    	object_or_collection_initializer();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 64, initializer_value_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "initializer_value"


    // $ANTLR start "typeof_expression"
    // cs.g:274:1: typeof_expression : 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' ;
    public void typeof_expression() // throws RecognitionException [1]
    {   
        int typeof_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 65) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:274:18: ( 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' )
            // cs.g:275:2: 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')'
            {
            	Match(input,98,FOLLOW_98_in_typeof_expression2036); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_typeof_expression2040); if (state.failed) return ;
            	// cs.g:275:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )
            	int alt71 = 3;
            	alt71 = dfa71.Predict(input);
            	switch (alt71) 
            	{
            	    case 1 :
            	        // cs.g:275:20: ( unbound_type_name )=> unbound_type_name
            	        {
            	        	PushFollow(FOLLOW_unbound_type_name_in_typeof_expression2051);
            	        	unbound_type_name();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:276:10: type
            	        {
            	        	PushFollow(FOLLOW_type_in_typeof_expression2062);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 3 :
            	        // cs.g:277:10: 'void'
            	        {
            	        	Match(input,82,FOLLOW_82_in_typeof_expression2074); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_typeof_expression2079); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 65, typeof_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "typeof_expression"


    // $ANTLR start "unbound_type_name"
    // cs.g:282:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
    public void unbound_type_name() // throws RecognitionException [1]
    {   
        int unbound_type_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 66) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:282:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
            // cs.g:284:2: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
            {
            	PushFollow(FOLLOW_unbound_type_name_start_in_unbound_type_name2094);
            	unbound_type_name_start();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:285:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
            	do 
            	{
            	    int alt72 = 3;
            	    alt72 = dfa72.Predict(input);
            	    switch (alt72) 
            		{
            			case 1 :
            			    // cs.g:285:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
            			    {
            			    	// cs.g:285:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
            			    	// cs.g:285:5: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
            			    	{
            			    		PushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name2113);
            			    		generic_dimension_specifier();
            			    		state._fsp--;
            			    		if (state.failed) return ;
            			    		PushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name2117);
            			    		unbound_type_name_part();
            			    		state._fsp--;
            			    		if (state.failed) return ;

            			    	}


            			    }
            			    break;
            			case 2 :
            			    // cs.g:286:5: unbound_type_name_part
            			    {
            			    	PushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name2124);
            			    	unbound_type_name_part();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop72;
            	    }
            	} while (true);

            	loop72:
            		;	// Stops C# compiler whining that label 'loop72' has no statements

            	PushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name2134);
            	generic_dimension_specifier();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 66, unbound_type_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unbound_type_name"


    // $ANTLR start "unbound_type_name_start"
    // cs.g:290:1: unbound_type_name_start : identifier ( '::' identifier )? ;
    public void unbound_type_name_start() // throws RecognitionException [1]
    {   
        int unbound_type_name_start_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 67) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:290:24: ( identifier ( '::' identifier )? )
            // cs.g:291:2: identifier ( '::' identifier )?
            {
            	PushFollow(FOLLOW_identifier_in_unbound_type_name_start2144);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:291:13: ( '::' identifier )?
            	int alt73 = 2;
            	int LA73_0 = input.LA(1);

            	if ( (LA73_0 == 84) )
            	{
            	    alt73 = 1;
            	}
            	switch (alt73) 
            	{
            	    case 1 :
            	        // cs.g:291:14: '::' identifier
            	        {
            	        	Match(input,84,FOLLOW_84_in_unbound_type_name_start2147); if (state.failed) return ;
            	        	PushFollow(FOLLOW_identifier_in_unbound_type_name_start2149);
            	        	identifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 67, unbound_type_name_start_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unbound_type_name_start"


    // $ANTLR start "unbound_type_name_part"
    // cs.g:292:1: unbound_type_name_part : '.' identifier ;
    public void unbound_type_name_part() // throws RecognitionException [1]
    {   
        int unbound_type_name_part_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 68) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:292:23: ( '.' identifier )
            // cs.g:293:2: '.' identifier
            {
            	Match(input,DOT,FOLLOW_DOT_in_unbound_type_name_part2158); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_unbound_type_name_part2162);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 68, unbound_type_name_part_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unbound_type_name_part"


    // $ANTLR start "generic_dimension_specifier"
    // cs.g:294:1: generic_dimension_specifier : '<' ( commas )? '>' ;
    public void generic_dimension_specifier() // throws RecognitionException [1]
    {   
        int generic_dimension_specifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 69) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:294:28: ( '<' ( commas )? '>' )
            // cs.g:295:2: '<' ( commas )? '>'
            {
            	Match(input,99,FOLLOW_99_in_generic_dimension_specifier2170); if (state.failed) return ;
            	// cs.g:295:8: ( commas )?
            	int alt74 = 2;
            	int LA74_0 = input.LA(1);

            	if ( (LA74_0 == 89) )
            	{
            	    alt74 = 1;
            	}
            	switch (alt74) 
            	{
            	    case 1 :
            	        // cs.g:295:8: commas
            	        {
            	        	PushFollow(FOLLOW_commas_in_generic_dimension_specifier2174);
            	        	commas();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,GT,FOLLOW_GT_in_generic_dimension_specifier2179); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 69, generic_dimension_specifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "generic_dimension_specifier"


    // $ANTLR start "commas"
    // cs.g:296:1: commas : ( ',' )+ ;
    public void commas() // throws RecognitionException [1]
    {   
        int commas_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 70) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:296:7: ( ( ',' )+ )
            // cs.g:297:2: ( ',' )+
            {
            	// cs.g:297:2: ( ',' )+
            	int cnt75 = 0;
            	do 
            	{
            	    int alt75 = 2;
            	    int LA75_0 = input.LA(1);

            	    if ( (LA75_0 == 89) )
            	    {
            	        alt75 = 1;
            	    }


            	    switch (alt75) 
            		{
            			case 1 :
            			    // cs.g:297:2: ','
            			    {
            			    	Match(input,89,FOLLOW_89_in_commas2188); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt75 >= 1 ) goto loop75;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee75 =
            		                new EarlyExitException(75, input);
            		            throw eee75;
            	    }
            	    cnt75++;
            	} while (true);

            	loop75:
            		;	// Stops C# compiler whining that label 'loop75' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 70, commas_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "commas"


    // $ANTLR start "type_name"
    // cs.g:303:1: type_name : namespace_or_type_name ;
    public void type_name() // throws RecognitionException [1]
    {   
        int type_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 71) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:303:10: ( namespace_or_type_name )
            // cs.g:304:2: namespace_or_type_name
            {
            	PushFollow(FOLLOW_namespace_or_type_name_in_type_name2204);
            	namespace_or_type_name();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 71, type_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_name"


    // $ANTLR start "namespace_or_type_name"
    // cs.g:305:1: namespace_or_type_name : type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* ;
    public void namespace_or_type_name() // throws RecognitionException [1]
    {   
        int namespace_or_type_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 72) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:305:23: ( type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* )
            // cs.g:306:3: type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )*
            {
            	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2213);
            	type_or_generic();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:306:21: ( '::' type_or_generic )?
            	int alt76 = 2;
            	int LA76_0 = input.LA(1);

            	if ( (LA76_0 == 84) )
            	{
            	    alt76 = 1;
            	}
            	switch (alt76) 
            	{
            	    case 1 :
            	        // cs.g:306:22: '::' type_or_generic
            	        {
            	        	Match(input,84,FOLLOW_84_in_namespace_or_type_name2218); if (state.failed) return ;
            	        	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2220);
            	        	type_or_generic();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:306:45: ( '.' type_or_generic )*
            	do 
            	{
            	    int alt77 = 2;
            	    int LA77_0 = input.LA(1);

            	    if ( (LA77_0 == DOT) )
            	    {
            	        int LA77_2 = input.LA(2);

            	        if ( (LA77_2 == IDENTIFIER || LA77_2 == 65 || (LA77_2 >= 132 && LA77_2 <= 133) || (LA77_2 >= 135 && LA77_2 <= 148) || (LA77_2 >= 150 && LA77_2 <= 152) || LA77_2 == 154 || (LA77_2 >= 157 && LA77_2 <= 159) || LA77_2 == 170 || (LA77_2 >= 177 && LA77_2 <= 178) || LA77_2 == 195 || LA77_2 == 202) )
            	        {
            	            alt77 = 1;
            	        }


            	    }


            	    switch (alt77) 
            		{
            			case 1 :
            			    // cs.g:306:46: '.' type_or_generic
            			    {
            			    	Match(input,DOT,FOLLOW_DOT_in_namespace_or_type_name2225); if (state.failed) return ;
            			    	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2229);
            			    	type_or_generic();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop77;
            	    }
            	} while (true);

            	loop77:
            		;	// Stops C# compiler whining that label 'loop77' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 72, namespace_or_type_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "namespace_or_type_name"


    // $ANTLR start "type_or_generic"
    // cs.g:307:1: type_or_generic : ( ( identifier '<' )=> identifier generic_argument_list | identifier );
    public void type_or_generic() // throws RecognitionException [1]
    {   
        int type_or_generic_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 73) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:307:16: ( ( identifier '<' )=> identifier generic_argument_list | identifier )
            int alt78 = 2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0 == IDENTIFIER || LA78_0 == 65 || (LA78_0 >= 132 && LA78_0 <= 133) || (LA78_0 >= 135 && LA78_0 <= 148) || (LA78_0 >= 150 && LA78_0 <= 152) || LA78_0 == 154 || (LA78_0 >= 157 && LA78_0 <= 159) || LA78_0 == 170 || (LA78_0 >= 177 && LA78_0 <= 178) || LA78_0 == 195 || LA78_0 == 202) )
            {
                int LA78_1 = input.LA(2);

                if ( (synpred15_cs()) )
                {
                    alt78 = 1;
                }
                else if ( (true) )
                {
                    alt78 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d78s1 =
                        new NoViableAltException("", 78, 1, input);

                    throw nvae_d78s1;
                }
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d78s0 =
                    new NoViableAltException("", 78, 0, input);

                throw nvae_d78s0;
            }
            switch (alt78) 
            {
                case 1 :
                    // cs.g:308:2: ( identifier '<' )=> identifier generic_argument_list
                    {
                    	PushFollow(FOLLOW_identifier_in_type_or_generic2249);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	PushFollow(FOLLOW_generic_argument_list_in_type_or_generic2253);
                    	generic_argument_list();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:309:4: identifier
                    {
                    	PushFollow(FOLLOW_identifier_in_type_or_generic2258);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 73, type_or_generic_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_or_generic"


    // $ANTLR start "qid"
    // cs.g:311:1: qid : qid_start ( qid_part )* ;
    public void qid() // throws RecognitionException [1]
    {   
        int qid_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 74) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:311:4: ( qid_start ( qid_part )* )
            // cs.g:312:2: qid_start ( qid_part )*
            {
            	PushFollow(FOLLOW_qid_start_in_qid2269);
            	qid_start();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:312:14: ( qid_part )*
            	do 
            	{
            	    int alt79 = 2;
            	    int LA79_0 = input.LA(1);

            	    if ( (LA79_0 == DOT) )
            	    {
            	        int LA79_2 = input.LA(2);

            	        if ( (LA79_2 == IDENTIFIER || LA79_2 == 65 || (LA79_2 >= 132 && LA79_2 <= 133) || (LA79_2 >= 135 && LA79_2 <= 148) || (LA79_2 >= 150 && LA79_2 <= 152) || LA79_2 == 154 || (LA79_2 >= 157 && LA79_2 <= 159) || LA79_2 == 170 || (LA79_2 >= 177 && LA79_2 <= 178) || LA79_2 == 195 || LA79_2 == 202) )
            	        {
            	            alt79 = 1;
            	        }


            	    }
            	    else if ( (LA79_0 == PTR) )
            	    {
            	        alt79 = 1;
            	    }


            	    switch (alt79) 
            		{
            			case 1 :
            			    // cs.g:312:14: qid_part
            			    {
            			    	PushFollow(FOLLOW_qid_part_in_qid2273);
            			    	qid_part();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop79;
            	    }
            	} while (true);

            	loop79:
            		;	// Stops C# compiler whining that label 'loop79' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 74, qid_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "qid"


    // $ANTLR start "qid_start"
    // cs.g:314:1: qid_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal );
    public void qid_start() // throws RecognitionException [1]
    {   
        int qid_start_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 75) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:314:10: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal )
            int alt81 = 4;
            switch ( input.LA(1) ) 
            {
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            	{
                alt81 = 1;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
            	{
                int LA81_2 = input.LA(2);

                if ( (LA81_2 == 99) && (synpred16_cs()) )
                {
                    alt81 = 2;
                }
                else if ( ((LA81_2 >= DOT && LA81_2 <= PTR) || LA81_2 == 62 || LA81_2 == 84 || LA81_2 == 88) )
                {
                    alt81 = 3;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d81s2 =
                        new NoViableAltException("", 81, 2, input);

                    throw nvae_d81s2;
                }
                }
                break;
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            	{
                alt81 = 4;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d81s0 =
            	        new NoViableAltException("", 81, 0, input);

            	    throw nvae_d81s0;
            }

            switch (alt81) 
            {
                case 1 :
                    // cs.g:315:2: predefined_type
                    {
                    	PushFollow(FOLLOW_predefined_type_in_qid_start2283);
                    	predefined_type();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:316:4: ( identifier '<' )=> identifier generic_argument_list
                    {
                    	PushFollow(FOLLOW_identifier_in_qid_start2299);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	PushFollow(FOLLOW_generic_argument_list_in_qid_start2303);
                    	generic_argument_list();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:319:4: identifier ( '::' identifier )?
                    {
                    	PushFollow(FOLLOW_identifier_in_qid_start2310);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:319:17: ( '::' identifier )?
                    	int alt80 = 2;
                    	int LA80_0 = input.LA(1);

                    	if ( (LA80_0 == 84) )
                    	{
                    	    alt80 = 1;
                    	}
                    	switch (alt80) 
                    	{
                    	    case 1 :
                    	        // cs.g:319:18: '::' identifier
                    	        {
                    	        	Match(input,84,FOLLOW_84_in_qid_start2315); if (state.failed) return ;
                    	        	PushFollow(FOLLOW_identifier_in_qid_start2319);
                    	        	identifier();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 4 :
                    // cs.g:320:4: literal
                    {
                    	PushFollow(FOLLOW_literal_in_qid_start2326);
                    	literal();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 75, qid_start_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "qid_start"


    // $ANTLR start "qid_part"
    // cs.g:324:1: qid_part : access_identifier ;
    public void qid_part() // throws RecognitionException [1]
    {   
        int qid_part_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 76) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:324:9: ( access_identifier )
            // cs.g:325:2: access_identifier
            {
            	PushFollow(FOLLOW_access_identifier_in_qid_part2340);
            	access_identifier();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 76, qid_part_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "qid_part"


    // $ANTLR start "generic_argument_list"
    // cs.g:327:1: generic_argument_list : '<' type_arguments '>' ;
    public void generic_argument_list() // throws RecognitionException [1]
    {   
        int generic_argument_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 77) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:327:22: ( '<' type_arguments '>' )
            // cs.g:328:2: '<' type_arguments '>'
            {
            	Match(input,99,FOLLOW_99_in_generic_argument_list2350); if (state.failed) return ;
            	PushFollow(FOLLOW_type_arguments_in_generic_argument_list2354);
            	type_arguments();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,GT,FOLLOW_GT_in_generic_argument_list2358); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 77, generic_argument_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "generic_argument_list"


    // $ANTLR start "type_arguments"
    // cs.g:329:1: type_arguments : type ( ',' type )* ;
    public void type_arguments() // throws RecognitionException [1]
    {   
        int type_arguments_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 78) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:329:15: ( type ( ',' type )* )
            // cs.g:330:2: type ( ',' type )*
            {
            	PushFollow(FOLLOW_type_in_type_arguments2367);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:330:7: ( ',' type )*
            	do 
            	{
            	    int alt82 = 2;
            	    int LA82_0 = input.LA(1);

            	    if ( (LA82_0 == 89) )
            	    {
            	        alt82 = 1;
            	    }


            	    switch (alt82) 
            		{
            			case 1 :
            			    // cs.g:330:8: ',' type
            			    {
            			    	Match(input,89,FOLLOW_89_in_type_arguments2370); if (state.failed) return ;
            			    	PushFollow(FOLLOW_type_in_type_arguments2372);
            			    	type();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop82;
            	    }
            	} while (true);

            	loop82:
            		;	// Stops C# compiler whining that label 'loop82' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 78, type_arguments_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_arguments"


    // $ANTLR start "type"
    // cs.g:332:1: type : ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ );
    public void type() // throws RecognitionException [1]
    {   
        int type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 79) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:332:5: ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ )
            int alt90 = 4;
            switch ( input.LA(1) ) 
            {
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            	{
                int LA90_1 = input.LA(2);

                if ( (synpred17_cs()) )
                {
                    alt90 = 1;
                }
                else if ( (synpred18_cs()) )
                {
                    alt90 = 2;
                }
                else if ( (true) )
                {
                    alt90 = 3;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d90s1 =
                        new NoViableAltException("", 90, 1, input);

                    throw nvae_d90s1;
                }
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
            	{
                int LA90_2 = input.LA(2);

                if ( (synpred17_cs()) )
                {
                    alt90 = 1;
                }
                else if ( (synpred18_cs()) )
                {
                    alt90 = 2;
                }
                else if ( (true) )
                {
                    alt90 = 3;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d90s2 =
                        new NoViableAltException("", 90, 2, input);

                    throw nvae_d90s2;
                }
                }
                break;
            case 82:
            	{
                alt90 = 4;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d90s0 =
            	        new NoViableAltException("", 90, 0, input);

            	    throw nvae_d90s0;
            }

            switch (alt90) 
            {
                case 1 :
                    // cs.g:333:4: ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )*
                    {
                    	// cs.g:333:56: ( predefined_type | type_name )
                    	int alt83 = 2;
                    	int LA83_0 = input.LA(1);

                    	if ( ((LA83_0 >= 160 && LA83_0 <= 168) || (LA83_0 >= 196 && LA83_0 <= 201)) )
                    	{
                    	    alt83 = 1;
                    	}
                    	else if ( (LA83_0 == IDENTIFIER || LA83_0 == 65 || (LA83_0 >= 132 && LA83_0 <= 133) || (LA83_0 >= 135 && LA83_0 <= 148) || (LA83_0 >= 150 && LA83_0 <= 152) || LA83_0 == 154 || (LA83_0 >= 157 && LA83_0 <= 159) || LA83_0 == 170 || (LA83_0 >= 177 && LA83_0 <= 178) || LA83_0 == 195 || LA83_0 == 202) )
                    	{
                    	    alt83 = 2;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    NoViableAltException nvae_d83s0 =
                    	        new NoViableAltException("", 83, 0, input);

                    	    throw nvae_d83s0;
                    	}
                    	switch (alt83) 
                    	{
                    	    case 1 :
                    	        // cs.g:333:57: predefined_type
                    	        {
                    	        	PushFollow(FOLLOW_predefined_type_in_type2401);
                    	        	predefined_type();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:333:75: type_name
                    	        {
                    	        	PushFollow(FOLLOW_type_name_in_type2405);
                    	        	type_name();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	PushFollow(FOLLOW_rank_specifiers_in_type2410);
                    	rank_specifiers();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:333:106: ( '*' )*
                    	do 
                    	{
                    	    int alt84 = 2;
                    	    int LA84_0 = input.LA(1);

                    	    if ( (LA84_0 == 100) )
                    	    {
                    	        alt84 = 1;
                    	    }


                    	    switch (alt84) 
                    		{
                    			case 1 :
                    			    // cs.g:333:106: '*'
                    			    {
                    			    	Match(input,100,FOLLOW_100_in_type2414); if (state.failed) return ;

                    			    }
                    			    break;

                    			default:
                    			    goto loop84;
                    	    }
                    	} while (true);

                    	loop84:
                    		;	// Stops C# compiler whining that label 'loop84' has no statements


                    }
                    break;
                case 2 :
                    // cs.g:334:4: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' )
                    {
                    	// cs.g:334:53: ( predefined_type | type_name )
                    	int alt85 = 2;
                    	int LA85_0 = input.LA(1);

                    	if ( ((LA85_0 >= 160 && LA85_0 <= 168) || (LA85_0 >= 196 && LA85_0 <= 201)) )
                    	{
                    	    alt85 = 1;
                    	}
                    	else if ( (LA85_0 == IDENTIFIER || LA85_0 == 65 || (LA85_0 >= 132 && LA85_0 <= 133) || (LA85_0 >= 135 && LA85_0 <= 148) || (LA85_0 >= 150 && LA85_0 <= 152) || LA85_0 == 154 || (LA85_0 >= 157 && LA85_0 <= 159) || LA85_0 == 170 || (LA85_0 >= 177 && LA85_0 <= 178) || LA85_0 == 195 || LA85_0 == 202) )
                    	{
                    	    alt85 = 2;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    NoViableAltException nvae_d85s0 =
                    	        new NoViableAltException("", 85, 0, input);

                    	    throw nvae_d85s0;
                    	}
                    	switch (alt85) 
                    	{
                    	    case 1 :
                    	        // cs.g:334:54: predefined_type
                    	        {
                    	        	PushFollow(FOLLOW_predefined_type_in_type2443);
                    	        	predefined_type();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:334:72: type_name
                    	        {
                    	        	PushFollow(FOLLOW_type_name_in_type2447);
                    	        	type_name();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	// cs.g:334:85: ( ( '*' )+ | '?' )
                    	int alt87 = 2;
                    	int LA87_0 = input.LA(1);

                    	if ( (LA87_0 == 100) )
                    	{
                    	    alt87 = 1;
                    	}
                    	else if ( (LA87_0 == 101) )
                    	{
                    	    alt87 = 2;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    NoViableAltException nvae_d87s0 =
                    	        new NoViableAltException("", 87, 0, input);

                    	    throw nvae_d87s0;
                    	}
                    	switch (alt87) 
                    	{
                    	    case 1 :
                    	        // cs.g:334:86: ( '*' )+
                    	        {
                    	        	// cs.g:334:86: ( '*' )+
                    	        	int cnt86 = 0;
                    	        	do 
                    	        	{
                    	        	    int alt86 = 2;
                    	        	    int LA86_0 = input.LA(1);

                    	        	    if ( (LA86_0 == 100) )
                    	        	    {
                    	        	        alt86 = 1;
                    	        	    }


                    	        	    switch (alt86) 
                    	        		{
                    	        			case 1 :
                    	        			    // cs.g:334:86: '*'
                    	        			    {
                    	        			    	Match(input,100,FOLLOW_100_in_type2453); if (state.failed) return ;

                    	        			    }
                    	        			    break;

                    	        			default:
                    	        			    if ( cnt86 >= 1 ) goto loop86;
                    	        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	        		            EarlyExitException eee86 =
                    	        		                new EarlyExitException(86, input);
                    	        		            throw eee86;
                    	        	    }
                    	        	    cnt86++;
                    	        	} while (true);

                    	        	loop86:
                    	        		;	// Stops C# compiler whining that label 'loop86' has no statements


                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:334:93: '?'
                    	        {
                    	        	Match(input,101,FOLLOW_101_in_type2458); if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 3 :
                    // cs.g:335:4: ( predefined_type | type_name )
                    {
                    	// cs.g:335:4: ( predefined_type | type_name )
                    	int alt88 = 2;
                    	int LA88_0 = input.LA(1);

                    	if ( ((LA88_0 >= 160 && LA88_0 <= 168) || (LA88_0 >= 196 && LA88_0 <= 201)) )
                    	{
                    	    alt88 = 1;
                    	}
                    	else if ( (LA88_0 == IDENTIFIER || LA88_0 == 65 || (LA88_0 >= 132 && LA88_0 <= 133) || (LA88_0 >= 135 && LA88_0 <= 148) || (LA88_0 >= 150 && LA88_0 <= 152) || LA88_0 == 154 || (LA88_0 >= 157 && LA88_0 <= 159) || LA88_0 == 170 || (LA88_0 >= 177 && LA88_0 <= 178) || LA88_0 == 195 || LA88_0 == 202) )
                    	{
                    	    alt88 = 2;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    NoViableAltException nvae_d88s0 =
                    	        new NoViableAltException("", 88, 0, input);

                    	    throw nvae_d88s0;
                    	}
                    	switch (alt88) 
                    	{
                    	    case 1 :
                    	        // cs.g:335:5: predefined_type
                    	        {
                    	        	PushFollow(FOLLOW_predefined_type_in_type2465);
                    	        	predefined_type();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:335:23: type_name
                    	        {
                    	        	PushFollow(FOLLOW_type_name_in_type2469);
                    	        	type_name();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 4 :
                    // cs.g:336:4: 'void' ( '*' )+
                    {
                    	Match(input,82,FOLLOW_82_in_type2475); if (state.failed) return ;
                    	// cs.g:336:11: ( '*' )+
                    	int cnt89 = 0;
                    	do 
                    	{
                    	    int alt89 = 2;
                    	    int LA89_0 = input.LA(1);

                    	    if ( (LA89_0 == 100) )
                    	    {
                    	        alt89 = 1;
                    	    }


                    	    switch (alt89) 
                    		{
                    			case 1 :
                    			    // cs.g:336:11: '*'
                    			    {
                    			    	Match(input,100,FOLLOW_100_in_type2477); if (state.failed) return ;

                    			    }
                    			    break;

                    			default:
                    			    if ( cnt89 >= 1 ) goto loop89;
                    			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    		            EarlyExitException eee89 =
                    		                new EarlyExitException(89, input);
                    		            throw eee89;
                    	    }
                    	    cnt89++;
                    	} while (true);

                    	loop89:
                    		;	// Stops C# compiler whining that label 'loop89' has no statements


                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 79, type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type"


    // $ANTLR start "non_nullable_type"
    // cs.g:338:1: non_nullable_type : ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ );
    public void non_nullable_type() // throws RecognitionException [1]
    {   
        int non_nullable_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 80) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:338:18: ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ )
            int alt97 = 2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0 == IDENTIFIER || LA97_0 == 65 || (LA97_0 >= 132 && LA97_0 <= 133) || (LA97_0 >= 135 && LA97_0 <= 148) || (LA97_0 >= 150 && LA97_0 <= 152) || LA97_0 == 154 || (LA97_0 >= 157 && LA97_0 <= 168) || LA97_0 == 170 || (LA97_0 >= 177 && LA97_0 <= 178) || (LA97_0 >= 195 && LA97_0 <= 202)) )
            {
                alt97 = 1;
            }
            else if ( (LA97_0 == 82) )
            {
                alt97 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d97s0 =
                    new NoViableAltException("", 97, 0, input);

                throw nvae_d97s0;
            }
            switch (alt97) 
            {
                case 1 :
                    // cs.g:339:2: ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
                    {
                    	// cs.g:339:2: ( predefined_type | type_name )
                    	int alt91 = 2;
                    	int LA91_0 = input.LA(1);

                    	if ( ((LA91_0 >= 160 && LA91_0 <= 168) || (LA91_0 >= 196 && LA91_0 <= 201)) )
                    	{
                    	    alt91 = 1;
                    	}
                    	else if ( (LA91_0 == IDENTIFIER || LA91_0 == 65 || (LA91_0 >= 132 && LA91_0 <= 133) || (LA91_0 >= 135 && LA91_0 <= 148) || (LA91_0 >= 150 && LA91_0 <= 152) || LA91_0 == 154 || (LA91_0 >= 157 && LA91_0 <= 159) || LA91_0 == 170 || (LA91_0 >= 177 && LA91_0 <= 178) || LA91_0 == 195 || LA91_0 == 202) )
                    	{
                    	    alt91 = 2;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    NoViableAltException nvae_d91s0 =
                    	        new NoViableAltException("", 91, 0, input);

                    	    throw nvae_d91s0;
                    	}
                    	switch (alt91) 
                    	{
                    	    case 1 :
                    	        // cs.g:339:3: predefined_type
                    	        {
                    	        	PushFollow(FOLLOW_predefined_type_in_non_nullable_type2488);
                    	        	predefined_type();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:339:21: type_name
                    	        {
                    	        	PushFollow(FOLLOW_type_name_in_non_nullable_type2492);
                    	        	type_name();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	// cs.g:340:3: ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
                    	int alt95 = 2;
                    	int LA95_0 = input.LA(1);

                    	if ( (LA95_0 == 86) )
                    	{
                    	    alt95 = 1;
                    	}
                    	else if ( (LA95_0 == EOF || LA95_0 == IDENTIFIER || LA95_0 == GT || (LA95_0 >= SEMI && LA95_0 <= RPAREN) || LA95_0 == 63 || LA95_0 == 65 || LA95_0 == 87 || (LA95_0 >= 89 && LA95_0 <= 90) || (LA95_0 >= 99 && LA95_0 <= 101) || (LA95_0 >= 116 && LA95_0 <= 117) || (LA95_0 >= 121 && LA95_0 <= 130) || (LA95_0 >= 132 && LA95_0 <= 133) || (LA95_0 >= 135 && LA95_0 <= 148) || (LA95_0 >= 150 && LA95_0 <= 152) || LA95_0 == 154 || (LA95_0 >= 157 && LA95_0 <= 159) || LA95_0 == 170 || (LA95_0 >= 177 && LA95_0 <= 178) || LA95_0 == 195 || LA95_0 == 202) )
                    	{
                    	    alt95 = 2;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    NoViableAltException nvae_d95s0 =
                    	        new NoViableAltException("", 95, 0, input);

                    	    throw nvae_d95s0;
                    	}
                    	switch (alt95) 
                    	{
                    	    case 1 :
                    	        // cs.g:340:7: rank_specifiers ( '*' )*
                    	        {
                    	        	PushFollow(FOLLOW_rank_specifiers_in_non_nullable_type2501);
                    	        	rank_specifiers();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;
                    	        	// cs.g:340:25: ( '*' )*
                    	        	do 
                    	        	{
                    	        	    int alt92 = 2;
                    	        	    int LA92_0 = input.LA(1);

                    	        	    if ( (LA92_0 == 100) )
                    	        	    {
                    	        	        alt92 = 1;
                    	        	    }


                    	        	    switch (alt92) 
                    	        		{
                    	        			case 1 :
                    	        			    // cs.g:340:25: '*'
                    	        			    {
                    	        			    	Match(input,100,FOLLOW_100_in_non_nullable_type2505); if (state.failed) return ;

                    	        			    }
                    	        			    break;

                    	        			default:
                    	        			    goto loop92;
                    	        	    }
                    	        	} while (true);

                    	        	loop92:
                    	        		;	// Stops C# compiler whining that label 'loop92' has no statements


                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:341:6: ( ( '*' )+ )?
                    	        {
                    	        	// cs.g:341:6: ( ( '*' )+ )?
                    	        	int alt94 = 2;
                    	        	int LA94_0 = input.LA(1);

                    	        	if ( (LA94_0 == 100) )
                    	        	{
                    	        	    alt94 = 1;
                    	        	}
                    	        	switch (alt94) 
                    	        	{
                    	        	    case 1 :
                    	        	        // cs.g:341:7: ( '*' )+
                    	        	        {
                    	        	        	// cs.g:341:7: ( '*' )+
                    	        	        	int cnt93 = 0;
                    	        	        	do 
                    	        	        	{
                    	        	        	    int alt93 = 2;
                    	        	        	    int LA93_0 = input.LA(1);

                    	        	        	    if ( (LA93_0 == 100) )
                    	        	        	    {
                    	        	        	        alt93 = 1;
                    	        	        	    }


                    	        	        	    switch (alt93) 
                    	        	        		{
                    	        	        			case 1 :
                    	        	        			    // cs.g:341:7: '*'
                    	        	        			    {
                    	        	        			    	Match(input,100,FOLLOW_100_in_non_nullable_type2514); if (state.failed) return ;

                    	        	        			    }
                    	        	        			    break;

                    	        	        			default:
                    	        	        			    if ( cnt93 >= 1 ) goto loop93;
                    	        	        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	        	        		            EarlyExitException eee93 =
                    	        	        		                new EarlyExitException(93, input);
                    	        	        		            throw eee93;
                    	        	        	    }
                    	        	        	    cnt93++;
                    	        	        	} while (true);

                    	        	        	loop93:
                    	        	        		;	// Stops C# compiler whining that label 'loop93' has no statements


                    	        	        }
                    	        	        break;

                    	        	}


                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 2 :
                    // cs.g:343:4: 'void' ( '*' )+
                    {
                    	Match(input,82,FOLLOW_82_in_non_nullable_type2526); if (state.failed) return ;
                    	// cs.g:343:13: ( '*' )+
                    	int cnt96 = 0;
                    	do 
                    	{
                    	    int alt96 = 2;
                    	    int LA96_0 = input.LA(1);

                    	    if ( (LA96_0 == 100) )
                    	    {
                    	        alt96 = 1;
                    	    }


                    	    switch (alt96) 
                    		{
                    			case 1 :
                    			    // cs.g:343:13: '*'
                    			    {
                    			    	Match(input,100,FOLLOW_100_in_non_nullable_type2530); if (state.failed) return ;

                    			    }
                    			    break;

                    			default:
                    			    if ( cnt96 >= 1 ) goto loop96;
                    			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    		            EarlyExitException eee96 =
                    		                new EarlyExitException(96, input);
                    		            throw eee96;
                    	    }
                    	    cnt96++;
                    	} while (true);

                    	loop96:
                    		;	// Stops C# compiler whining that label 'loop96' has no statements


                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 80, non_nullable_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "non_nullable_type"


    // $ANTLR start "non_array_type"
    // cs.g:345:1: non_array_type : type ;
    public void non_array_type() // throws RecognitionException [1]
    {   
        int non_array_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 81) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:345:15: ( type )
            // cs.g:346:2: type
            {
            	PushFollow(FOLLOW_type_in_non_array_type2541);
            	type();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 81, non_array_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "non_array_type"


    // $ANTLR start "array_type"
    // cs.g:347:1: array_type : type ;
    public void array_type() // throws RecognitionException [1]
    {   
        int array_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 82) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:347:11: ( type )
            // cs.g:348:2: type
            {
            	PushFollow(FOLLOW_type_in_array_type2548);
            	type();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 82, array_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "array_type"


    // $ANTLR start "unmanaged_type"
    // cs.g:349:1: unmanaged_type : type ;
    public void unmanaged_type() // throws RecognitionException [1]
    {   
        int unmanaged_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 83) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:349:15: ( type )
            // cs.g:350:2: type
            {
            	PushFollow(FOLLOW_type_in_unmanaged_type2555);
            	type();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 83, unmanaged_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unmanaged_type"


    // $ANTLR start "class_type"
    // cs.g:351:1: class_type : type ;
    public void class_type() // throws RecognitionException [1]
    {   
        int class_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 84) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:351:11: ( type )
            // cs.g:352:2: type
            {
            	PushFollow(FOLLOW_type_in_class_type2562);
            	type();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 84, class_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "class_type"


    // $ANTLR start "pointer_type"
    // cs.g:353:1: pointer_type : type ;
    public void pointer_type() // throws RecognitionException [1]
    {   
        int pointer_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 85) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:353:13: ( type )
            // cs.g:354:2: type
            {
            	PushFollow(FOLLOW_type_in_pointer_type2569);
            	type();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 85, pointer_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "pointer_type"


    // $ANTLR start "block"
    // cs.g:360:1: block : ( ';' | '{' ( statement_list )? '}' );
    public void block() // throws RecognitionException [1]
    {   
        int block_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 86) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:360:6: ( ';' | '{' ( statement_list )? '}' )
            int alt99 = 2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0 == SEMI) )
            {
                alt99 = 1;
            }
            else if ( (LA99_0 == 62) )
            {
                alt99 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d99s0 =
                    new NoViableAltException("", 99, 0, input);

                throw nvae_d99s0;
            }
            switch (alt99) 
            {
                case 1 :
                    // cs.g:361:2: ';'
                    {
                    	Match(input,SEMI,FOLLOW_SEMI_in_block2581); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:362:4: '{' ( statement_list )? '}'
                    {
                    	Match(input,62,FOLLOW_62_in_block2586); if (state.failed) return ;
                    	// cs.g:362:10: ( statement_list )?
                    	int alt98 = 2;
                    	int LA98_0 = input.LA(1);

                    	if ( ((LA98_0 >= IDENTIFIER && LA98_0 <= NULL) || LA98_0 == MINUS || LA98_0 == USING || LA98_0 == IF || LA98_0 == SEMI || LA98_0 == 62 || LA98_0 == 65 || LA98_0 == 68 || LA98_0 == 73 || (LA98_0 >= 81 && LA98_0 <= 83) || LA98_0 == 85 || LA98_0 == 88 || (LA98_0 >= 93 && LA98_0 <= 98) || LA98_0 == 100 || (LA98_0 >= 102 && LA98_0 <= 106) || LA98_0 == 117 || (LA98_0 >= 132 && LA98_0 <= 133) || (LA98_0 >= 135 && LA98_0 <= 148) || (LA98_0 >= 150 && LA98_0 <= 154) || (LA98_0 >= 157 && LA98_0 <= 168) || LA98_0 == 170 || (LA98_0 >= 176 && LA98_0 <= 178) || LA98_0 == 181 || (LA98_0 >= 183 && LA98_0 <= 191) || (LA98_0 >= 194 && LA98_0 <= 202)) )
                    	{
                    	    alt98 = 1;
                    	}
                    	switch (alt98) 
                    	{
                    	    case 1 :
                    	        // cs.g:362:10: statement_list
                    	        {
                    	        	PushFollow(FOLLOW_statement_list_in_block2590);
                    	        	statement_list();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	Match(input,63,FOLLOW_63_in_block2595); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 86, block_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "block"


    // $ANTLR start "statement_list"
    // cs.g:363:1: statement_list : ( statement )+ ;
    public void statement_list() // throws RecognitionException [1]
    {   
        int statement_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 87) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:363:15: ( ( statement )+ )
            // cs.g:364:2: ( statement )+
            {
            	// cs.g:364:2: ( statement )+
            	int cnt100 = 0;
            	do 
            	{
            	    int alt100 = 2;
            	    int LA100_0 = input.LA(1);

            	    if ( (LA100_0 == 96) )
            	    {
            	        int LA100_2 = input.LA(2);

            	        if ( (LA100_2 == 88) )
            	        {
            	            alt100 = 1;
            	        }


            	    }
            	    else if ( ((LA100_0 >= IDENTIFIER && LA100_0 <= NULL) || LA100_0 == MINUS || LA100_0 == USING || LA100_0 == IF || LA100_0 == SEMI || LA100_0 == 62 || LA100_0 == 65 || LA100_0 == 68 || LA100_0 == 73 || (LA100_0 >= 81 && LA100_0 <= 83) || LA100_0 == 85 || LA100_0 == 88 || (LA100_0 >= 93 && LA100_0 <= 95) || (LA100_0 >= 97 && LA100_0 <= 98) || LA100_0 == 100 || (LA100_0 >= 102 && LA100_0 <= 106) || LA100_0 == 117 || (LA100_0 >= 132 && LA100_0 <= 133) || (LA100_0 >= 135 && LA100_0 <= 148) || (LA100_0 >= 150 && LA100_0 <= 154) || (LA100_0 >= 157 && LA100_0 <= 168) || LA100_0 == 170 || (LA100_0 >= 176 && LA100_0 <= 178) || LA100_0 == 181 || (LA100_0 >= 183 && LA100_0 <= 191) || (LA100_0 >= 194 && LA100_0 <= 202)) )
            	    {
            	        alt100 = 1;
            	    }


            	    switch (alt100) 
            		{
            			case 1 :
            			    // cs.g:364:2: statement
            			    {
            			    	PushFollow(FOLLOW_statement_in_statement_list2602);
            			    	statement();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt100 >= 1 ) goto loop100;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee100 =
            		                new EarlyExitException(100, input);
            		            throw eee100;
            	    }
            	    cnt100++;
            	} while (true);

            	loop100:
            		;	// Stops C# compiler whining that label 'loop100' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 87, statement_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "statement_list"


    // $ANTLR start "expression"
    // cs.g:369:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );
    public void expression() // throws RecognitionException [1]
    {   
        int expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 88) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:369:11: ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression )
            int alt101 = 2;
            alt101 = dfa101.Predict(input);
            switch (alt101) 
            {
                case 1 :
                    // cs.g:370:2: ( unary_expression assignment_operator )=> assignment
                    {
                    	PushFollow(FOLLOW_assignment_in_expression2627);
                    	assignment();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:371:4: non_assignment_expression
                    {
                    	PushFollow(FOLLOW_non_assignment_expression_in_expression2633);
                    	non_assignment_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 88, expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "expression"


    // $ANTLR start "expression_list"
    // cs.g:373:1: expression_list : expression ( ',' expression )* ;
    public void expression_list() // throws RecognitionException [1]
    {   
        int expression_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 89) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:373:16: ( expression ( ',' expression )* )
            // cs.g:374:2: expression ( ',' expression )*
            {
            	PushFollow(FOLLOW_expression_in_expression_list2642);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:374:14: ( ',' expression )*
            	do 
            	{
            	    int alt102 = 2;
            	    int LA102_0 = input.LA(1);

            	    if ( (LA102_0 == 89) )
            	    {
            	        alt102 = 1;
            	    }


            	    switch (alt102) 
            		{
            			case 1 :
            			    // cs.g:374:15: ',' expression
            			    {
            			    	Match(input,89,FOLLOW_89_in_expression_list2646); if (state.failed) return ;
            			    	PushFollow(FOLLOW_expression_in_expression_list2650);
            			    	expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop102;
            	    }
            	} while (true);

            	loop102:
            		;	// Stops C# compiler whining that label 'loop102' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 89, expression_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "expression_list"


    // $ANTLR start "assignment"
    // cs.g:375:1: assignment : unary_expression assignment_operator expression ;
    public void assignment() // throws RecognitionException [1]
    {   
        int assignment_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 90) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:375:11: ( unary_expression assignment_operator expression )
            // cs.g:376:2: unary_expression assignment_operator expression
            {
            	PushFollow(FOLLOW_unary_expression_in_assignment2660);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_assignment_operator_in_assignment2664);
            	assignment_operator();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_assignment2668);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 90, assignment_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "assignment"


    // $ANTLR start "unary_expression"
    // cs.g:377:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );
    public void unary_expression() // throws RecognitionException [1]
    {   
        int unary_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 91) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:377:17: ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression )
            int alt105 = 10;
            alt105 = dfa105.Predict(input);
            switch (alt105) 
            {
                case 1 :
                    // cs.g:379:2: ( cast_expression )=> cast_expression
                    {
                    	PushFollow(FOLLOW_cast_expression_in_unary_expression2685);
                    	cast_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:380:4: primary_or_array_creation_expression ( '++' )? ( '--' )?
                    {
                    	PushFollow(FOLLOW_primary_or_array_creation_expression_in_unary_expression2690);
                    	primary_or_array_creation_expression();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:380:43: ( '++' )?
                    	int alt103 = 2;
                    	int LA103_0 = input.LA(1);

                    	if ( (LA103_0 == 102) )
                    	{
                    	    alt103 = 1;
                    	}
                    	switch (alt103) 
                    	{
                    	    case 1 :
                    	        // cs.g:380:43: '++'
                    	        {
                    	        	Match(input,102,FOLLOW_102_in_unary_expression2694); if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	// cs.g:380:51: ( '--' )?
                    	int alt104 = 2;
                    	int LA104_0 = input.LA(1);

                    	if ( (LA104_0 == 103) )
                    	{
                    	    alt104 = 1;
                    	}
                    	switch (alt104) 
                    	{
                    	    case 1 :
                    	        // cs.g:380:51: '--'
                    	        {
                    	        	Match(input,103,FOLLOW_103_in_unary_expression2699); if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 3 :
                    // cs.g:381:4: '+' unary_expression
                    {
                    	Match(input,104,FOLLOW_104_in_unary_expression2705); if (state.failed) return ;
                    	PushFollow(FOLLOW_unary_expression_in_unary_expression2709);
                    	unary_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:382:4: '-' unary_expression
                    {
                    	Match(input,MINUS,FOLLOW_MINUS_in_unary_expression2715); if (state.failed) return ;
                    	PushFollow(FOLLOW_unary_expression_in_unary_expression2719);
                    	unary_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:383:4: '!' unary_expression
                    {
                    	Match(input,105,FOLLOW_105_in_unary_expression2725); if (state.failed) return ;
                    	PushFollow(FOLLOW_unary_expression_in_unary_expression2729);
                    	unary_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // cs.g:384:4: '~' unary_expression
                    {
                    	Match(input,106,FOLLOW_106_in_unary_expression2735); if (state.failed) return ;
                    	PushFollow(FOLLOW_unary_expression_in_unary_expression2739);
                    	unary_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // cs.g:385:4: pre_increment_expression
                    {
                    	PushFollow(FOLLOW_pre_increment_expression_in_unary_expression2745);
                    	pre_increment_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 8 :
                    // cs.g:386:4: pre_decrement_expression
                    {
                    	PushFollow(FOLLOW_pre_decrement_expression_in_unary_expression2751);
                    	pre_decrement_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // cs.g:387:4: pointer_indirection_expression
                    {
                    	PushFollow(FOLLOW_pointer_indirection_expression_in_unary_expression2757);
                    	pointer_indirection_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // cs.g:388:4: addressof_expression
                    {
                    	PushFollow(FOLLOW_addressof_expression_in_unary_expression2762);
                    	addressof_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 91, unary_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unary_expression"


    // $ANTLR start "cast_expression"
    // cs.g:390:1: cast_expression : '(' type ')' unary_expression ;
    public void cast_expression() // throws RecognitionException [1]
    {   
        int cast_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 92) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:390:16: ( '(' type ')' unary_expression )
            // cs.g:391:2: '(' type ')' unary_expression
            {
            	Match(input,88,FOLLOW_88_in_cast_expression2772); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_cast_expression2776);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_cast_expression2780); if (state.failed) return ;
            	PushFollow(FOLLOW_unary_expression_in_cast_expression2784);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 92, cast_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "cast_expression"


    // $ANTLR start "assignment_operator"
    // cs.g:392:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );
    public void assignment_operator() // throws RecognitionException [1]
    {   
        int assignment_operator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 93) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:392:20: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' )
            int alt106 = 11;
            alt106 = dfa106.Predict(input);
            switch (alt106) 
            {
                case 1 :
                    // cs.g:393:2: '='
                    {
                    	Match(input,66,FOLLOW_66_in_assignment_operator2792); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:393:8: '+='
                    {
                    	Match(input,107,FOLLOW_107_in_assignment_operator2796); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:393:15: '-='
                    {
                    	Match(input,108,FOLLOW_108_in_assignment_operator2800); if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:393:22: '*='
                    {
                    	Match(input,109,FOLLOW_109_in_assignment_operator2804); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:393:29: '/='
                    {
                    	Match(input,110,FOLLOW_110_in_assignment_operator2808); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // cs.g:393:36: '%='
                    {
                    	Match(input,111,FOLLOW_111_in_assignment_operator2812); if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // cs.g:393:43: '&='
                    {
                    	Match(input,112,FOLLOW_112_in_assignment_operator2816); if (state.failed) return ;

                    }
                    break;
                case 8 :
                    // cs.g:393:50: '|='
                    {
                    	Match(input,113,FOLLOW_113_in_assignment_operator2820); if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // cs.g:393:57: '^='
                    {
                    	Match(input,114,FOLLOW_114_in_assignment_operator2824); if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // cs.g:393:64: '<<='
                    {
                    	Match(input,115,FOLLOW_115_in_assignment_operator2828); if (state.failed) return ;

                    }
                    break;
                case 11 :
                    // cs.g:393:72: '>' '>='
                    {
                    	Match(input,GT,FOLLOW_GT_in_assignment_operator2832); if (state.failed) return ;
                    	Match(input,116,FOLLOW_116_in_assignment_operator2834); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 93, assignment_operator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "assignment_operator"


    // $ANTLR start "pre_increment_expression"
    // cs.g:394:1: pre_increment_expression : '++' unary_expression ;
    public void pre_increment_expression() // throws RecognitionException [1]
    {   
        int pre_increment_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 94) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:394:25: ( '++' unary_expression )
            // cs.g:395:2: '++' unary_expression
            {
            	Match(input,102,FOLLOW_102_in_pre_increment_expression2843); if (state.failed) return ;
            	PushFollow(FOLLOW_unary_expression_in_pre_increment_expression2847);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 94, pre_increment_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "pre_increment_expression"


    // $ANTLR start "pre_decrement_expression"
    // cs.g:396:1: pre_decrement_expression : '--' unary_expression ;
    public void pre_decrement_expression() // throws RecognitionException [1]
    {   
        int pre_decrement_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 95) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:396:25: ( '--' unary_expression )
            // cs.g:397:2: '--' unary_expression
            {
            	Match(input,103,FOLLOW_103_in_pre_decrement_expression2856); if (state.failed) return ;
            	PushFollow(FOLLOW_unary_expression_in_pre_decrement_expression2860);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 95, pre_decrement_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "pre_decrement_expression"


    // $ANTLR start "pointer_indirection_expression"
    // cs.g:398:1: pointer_indirection_expression : '*' unary_expression ;
    public void pointer_indirection_expression() // throws RecognitionException [1]
    {   
        int pointer_indirection_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 96) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:398:31: ( '*' unary_expression )
            // cs.g:399:2: '*' unary_expression
            {
            	Match(input,100,FOLLOW_100_in_pointer_indirection_expression2868); if (state.failed) return ;
            	PushFollow(FOLLOW_unary_expression_in_pointer_indirection_expression2872);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 96, pointer_indirection_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "pointer_indirection_expression"


    // $ANTLR start "addressof_expression"
    // cs.g:400:1: addressof_expression : '&' unary_expression ;
    public void addressof_expression() // throws RecognitionException [1]
    {   
        int addressof_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 97) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:400:21: ( '&' unary_expression )
            // cs.g:401:2: '&' unary_expression
            {
            	Match(input,117,FOLLOW_117_in_addressof_expression2880); if (state.failed) return ;
            	PushFollow(FOLLOW_unary_expression_in_addressof_expression2884);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 97, addressof_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "addressof_expression"


    // $ANTLR start "non_assignment_expression"
    // cs.g:403:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
    public void non_assignment_expression() // throws RecognitionException [1]
    {   
        int non_assignment_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 98) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:403:26: ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
            int alt107 = 3;
            alt107 = dfa107.Predict(input);
            switch (alt107) 
            {
                case 1 :
                    // cs.g:405:2: ( anonymous_function_signature '=>' )=> lambda_expression
                    {
                    	PushFollow(FOLLOW_lambda_expression_in_non_assignment_expression2905);
                    	lambda_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:406:4: ( query_expression )=> query_expression
                    {
                    	PushFollow(FOLLOW_query_expression_in_non_assignment_expression2916);
                    	query_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:407:4: conditional_expression
                    {
                    	PushFollow(FOLLOW_conditional_expression_in_non_assignment_expression2922);
                    	conditional_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 98, non_assignment_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "non_assignment_expression"


    // $ANTLR start "multiplicative_expression"
    // cs.g:414:1: multiplicative_expression : unary_expression ( ( '*' | '/' | '%' ) unary_expression )* ;
    public void multiplicative_expression() // throws RecognitionException [1]
    {   
        int multiplicative_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 99) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:414:26: ( unary_expression ( ( '*' | '/' | '%' ) unary_expression )* )
            // cs.g:415:2: unary_expression ( ( '*' | '/' | '%' ) unary_expression )*
            {
            	PushFollow(FOLLOW_unary_expression_in_multiplicative_expression2936);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:415:19: ( ( '*' | '/' | '%' ) unary_expression )*
            	do 
            	{
            	    int alt108 = 2;
            	    int LA108_0 = input.LA(1);

            	    if ( (LA108_0 == 100 || (LA108_0 >= 118 && LA108_0 <= 119)) )
            	    {
            	        alt108 = 1;
            	    }


            	    switch (alt108) 
            		{
            			case 1 :
            			    // cs.g:415:22: ( '*' | '/' | '%' ) unary_expression
            			    {
            			    	if ( input.LA(1) == 100 || (input.LA(1) >= 118 && input.LA(1) <= 119) ) 
            			    	{
            			    	    input.Consume();
            			    	    state.errorRecovery = false;state.failed = false;
            			    	}
            			    	else 
            			    	{
            			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    	    MismatchedSetException mse = new MismatchedSetException(null,input);
            			    	    throw mse;
            			    	}

            			    	PushFollow(FOLLOW_unary_expression_in_multiplicative_expression2951);
            			    	unary_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop108;
            	    }
            	} while (true);

            	loop108:
            		;	// Stops C# compiler whining that label 'loop108' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 99, multiplicative_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "multiplicative_expression"


    // $ANTLR start "additive_expression"
    // cs.g:416:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
    public void additive_expression() // throws RecognitionException [1]
    {   
        int additive_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 100) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:416:20: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
            // cs.g:417:2: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
            {
            	PushFollow(FOLLOW_multiplicative_expression_in_additive_expression2961);
            	multiplicative_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:417:28: ( ( '+' | '-' ) multiplicative_expression )*
            	do 
            	{
            	    int alt109 = 2;
            	    int LA109_0 = input.LA(1);

            	    if ( (LA109_0 == MINUS || LA109_0 == 104) )
            	    {
            	        alt109 = 1;
            	    }


            	    switch (alt109) 
            		{
            			case 1 :
            			    // cs.g:417:29: ( '+' | '-' ) multiplicative_expression
            			    {
            			    	if ( input.LA(1) == MINUS || input.LA(1) == 104 ) 
            			    	{
            			    	    input.Consume();
            			    	    state.errorRecovery = false;state.failed = false;
            			    	}
            			    	else 
            			    	{
            			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    	    MismatchedSetException mse = new MismatchedSetException(null,input);
            			    	    throw mse;
            			    	}

            			    	PushFollow(FOLLOW_multiplicative_expression_in_additive_expression2972);
            			    	multiplicative_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop109;
            	    }
            	} while (true);

            	loop109:
            		;	// Stops C# compiler whining that label 'loop109' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 100, additive_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "additive_expression"


    // $ANTLR start "shift_expression"
    // cs.g:419:1: shift_expression : additive_expression ( ( '<<' | '>' '>' ) additive_expression )* ;
    public void shift_expression() // throws RecognitionException [1]
    {   
        int shift_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 101) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:419:17: ( additive_expression ( ( '<<' | '>' '>' ) additive_expression )* )
            // cs.g:420:2: additive_expression ( ( '<<' | '>' '>' ) additive_expression )*
            {
            	PushFollow(FOLLOW_additive_expression_in_shift_expression2983);
            	additive_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:420:22: ( ( '<<' | '>' '>' ) additive_expression )*
            	do 
            	{
            	    int alt111 = 2;
            	    int LA111_0 = input.LA(1);

            	    if ( (LA111_0 == GT) )
            	    {
            	        int LA111_1 = input.LA(2);

            	        if ( (LA111_1 == GT) )
            	        {
            	            alt111 = 1;
            	        }


            	    }
            	    else if ( (LA111_0 == 120) )
            	    {
            	        alt111 = 1;
            	    }


            	    switch (alt111) 
            		{
            			case 1 :
            			    // cs.g:420:23: ( '<<' | '>' '>' ) additive_expression
            			    {
            			    	// cs.g:420:23: ( '<<' | '>' '>' )
            			    	int alt110 = 2;
            			    	int LA110_0 = input.LA(1);

            			    	if ( (LA110_0 == 120) )
            			    	{
            			    	    alt110 = 1;
            			    	}
            			    	else if ( (LA110_0 == GT) )
            			    	{
            			    	    alt110 = 2;
            			    	}
            			    	else 
            			    	{
            			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    	    NoViableAltException nvae_d110s0 =
            			    	        new NoViableAltException("", 110, 0, input);

            			    	    throw nvae_d110s0;
            			    	}
            			    	switch (alt110) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:420:24: '<<'
            			    	        {
            			    	        	Match(input,120,FOLLOW_120_in_shift_expression2987); if (state.failed) return ;

            			    	        }
            			    	        break;
            			    	    case 2 :
            			    	        // cs.g:420:29: '>' '>'
            			    	        {
            			    	        	Match(input,GT,FOLLOW_GT_in_shift_expression2989); if (state.failed) return ;
            			    	        	Match(input,GT,FOLLOW_GT_in_shift_expression2991); if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	PushFollow(FOLLOW_additive_expression_in_shift_expression2994);
            			    	additive_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop111;
            	    }
            	} while (true);

            	loop111:
            		;	// Stops C# compiler whining that label 'loop111' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 101, shift_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "shift_expression"


    // $ANTLR start "relational_expression"
    // cs.g:421:1: relational_expression : shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* ;
    public void relational_expression() // throws RecognitionException [1]
    {   
        int relational_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 102) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:421:22: ( shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* )
            // cs.g:422:2: shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
            {
            	PushFollow(FOLLOW_shift_expression_in_relational_expression3004);
            	shift_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:423:3: ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
            	do 
            	{
            	    int alt112 = 3;
            	    int LA112_0 = input.LA(1);

            	    if ( (LA112_0 == GT || LA112_0 == 99 || LA112_0 == 116 || LA112_0 == 121) )
            	    {
            	        alt112 = 1;
            	    }
            	    else if ( ((LA112_0 >= 122 && LA112_0 <= 123)) )
            	    {
            	        alt112 = 2;
            	    }


            	    switch (alt112) 
            		{
            			case 1 :
            			    // cs.g:423:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
            			    {
            			    	// cs.g:423:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
            			    	// cs.g:423:6: ( '<' | '>' | '>=' | '<=' ) shift_expression
            			    	{
            			    		if ( input.LA(1) == GT || input.LA(1) == 99 || input.LA(1) == 116 || input.LA(1) == 121 ) 
            			    		{
            			    		    input.Consume();
            			    		    state.errorRecovery = false;state.failed = false;
            			    		}
            			    		else 
            			    		{
            			    		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    		    MismatchedSetException mse = new MismatchedSetException(null,input);
            			    		    throw mse;
            			    		}

            			    		PushFollow(FOLLOW_shift_expression_in_relational_expression3021);
            			    		shift_expression();
            			    		state._fsp--;
            			    		if (state.failed) return ;

            			    	}


            			    }
            			    break;
            			case 2 :
            			    // cs.g:424:6: ( ( 'is' | 'as' ) non_nullable_type )
            			    {
            			    	// cs.g:424:6: ( ( 'is' | 'as' ) non_nullable_type )
            			    	// cs.g:424:7: ( 'is' | 'as' ) non_nullable_type
            			    	{
            			    		if ( (input.LA(1) >= 122 && input.LA(1) <= 123) ) 
            			    		{
            			    		    input.Consume();
            			    		    state.errorRecovery = false;state.failed = false;
            			    		}
            			    		else 
            			    		{
            			    		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    		    MismatchedSetException mse = new MismatchedSetException(null,input);
            			    		    throw mse;
            			    		}

            			    		PushFollow(FOLLOW_non_nullable_type_in_relational_expression3038);
            			    		non_nullable_type();
            			    		state._fsp--;
            			    		if (state.failed) return ;

            			    	}


            			    }
            			    break;

            			default:
            			    goto loop112;
            	    }
            	} while (true);

            	loop112:
            		;	// Stops C# compiler whining that label 'loop112' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 102, relational_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "relational_expression"


    // $ANTLR start "equality_expression"
    // cs.g:426:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
    public void equality_expression() // throws RecognitionException [1]
    {   
        int equality_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 103) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:426:20: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
            // cs.g:427:2: relational_expression ( ( '==' | '!=' ) relational_expression )*
            {
            	PushFollow(FOLLOW_relational_expression_in_equality_expression3052);
            	relational_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:428:5: ( ( '==' | '!=' ) relational_expression )*
            	do 
            	{
            	    int alt113 = 2;
            	    int LA113_0 = input.LA(1);

            	    if ( ((LA113_0 >= 124 && LA113_0 <= 125)) )
            	    {
            	        alt113 = 1;
            	    }


            	    switch (alt113) 
            		{
            			case 1 :
            			    // cs.g:428:6: ( '==' | '!=' ) relational_expression
            			    {
            			    	if ( (input.LA(1) >= 124 && input.LA(1) <= 125) ) 
            			    	{
            			    	    input.Consume();
            			    	    state.errorRecovery = false;state.failed = false;
            			    	}
            			    	else 
            			    	{
            			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    	    MismatchedSetException mse = new MismatchedSetException(null,input);
            			    	    throw mse;
            			    	}

            			    	PushFollow(FOLLOW_relational_expression_in_equality_expression3067);
            			    	relational_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop113;
            	    }
            	} while (true);

            	loop113:
            		;	// Stops C# compiler whining that label 'loop113' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 103, equality_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "equality_expression"


    // $ANTLR start "and_expression"
    // cs.g:429:1: and_expression : equality_expression ( '&' equality_expression )* ;
    public void and_expression() // throws RecognitionException [1]
    {   
        int and_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 104) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:429:15: ( equality_expression ( '&' equality_expression )* )
            // cs.g:430:2: equality_expression ( '&' equality_expression )*
            {
            	PushFollow(FOLLOW_equality_expression_in_and_expression3077);
            	equality_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:430:22: ( '&' equality_expression )*
            	do 
            	{
            	    int alt114 = 2;
            	    int LA114_0 = input.LA(1);

            	    if ( (LA114_0 == 117) )
            	    {
            	        alt114 = 1;
            	    }


            	    switch (alt114) 
            		{
            			case 1 :
            			    // cs.g:430:23: '&' equality_expression
            			    {
            			    	Match(input,117,FOLLOW_117_in_and_expression3080); if (state.failed) return ;
            			    	PushFollow(FOLLOW_equality_expression_in_and_expression3084);
            			    	equality_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop114;
            	    }
            	} while (true);

            	loop114:
            		;	// Stops C# compiler whining that label 'loop114' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 104, and_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "and_expression"


    // $ANTLR start "exclusive_or_expression"
    // cs.g:431:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
    public void exclusive_or_expression() // throws RecognitionException [1]
    {   
        int exclusive_or_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 105) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:431:24: ( and_expression ( '^' and_expression )* )
            // cs.g:432:2: and_expression ( '^' and_expression )*
            {
            	PushFollow(FOLLOW_and_expression_in_exclusive_or_expression3094);
            	and_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:432:17: ( '^' and_expression )*
            	do 
            	{
            	    int alt115 = 2;
            	    int LA115_0 = input.LA(1);

            	    if ( (LA115_0 == 126) )
            	    {
            	        alt115 = 1;
            	    }


            	    switch (alt115) 
            		{
            			case 1 :
            			    // cs.g:432:18: '^' and_expression
            			    {
            			    	Match(input,126,FOLLOW_126_in_exclusive_or_expression3097); if (state.failed) return ;
            			    	PushFollow(FOLLOW_and_expression_in_exclusive_or_expression3101);
            			    	and_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop115;
            	    }
            	} while (true);

            	loop115:
            		;	// Stops C# compiler whining that label 'loop115' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 105, exclusive_or_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "exclusive_or_expression"


    // $ANTLR start "inclusive_or_expression"
    // cs.g:433:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
    public void inclusive_or_expression() // throws RecognitionException [1]
    {   
        int inclusive_or_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 106) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:433:24: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
            // cs.g:434:2: exclusive_or_expression ( '|' exclusive_or_expression )*
            {
            	PushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression3111);
            	exclusive_or_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:434:28: ( '|' exclusive_or_expression )*
            	do 
            	{
            	    int alt116 = 2;
            	    int LA116_0 = input.LA(1);

            	    if ( (LA116_0 == 127) )
            	    {
            	        alt116 = 1;
            	    }


            	    switch (alt116) 
            		{
            			case 1 :
            			    // cs.g:434:29: '|' exclusive_or_expression
            			    {
            			    	Match(input,127,FOLLOW_127_in_inclusive_or_expression3116); if (state.failed) return ;
            			    	PushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression3120);
            			    	exclusive_or_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop116;
            	    }
            	} while (true);

            	loop116:
            		;	// Stops C# compiler whining that label 'loop116' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 106, inclusive_or_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "inclusive_or_expression"


    // $ANTLR start "conditional_and_expression"
    // cs.g:435:1: conditional_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
    public void conditional_and_expression() // throws RecognitionException [1]
    {   
        int conditional_and_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 107) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:435:27: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
            // cs.g:436:2: inclusive_or_expression ( '&&' inclusive_or_expression )*
            {
            	PushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression3130);
            	inclusive_or_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:436:28: ( '&&' inclusive_or_expression )*
            	do 
            	{
            	    int alt117 = 2;
            	    int LA117_0 = input.LA(1);

            	    if ( (LA117_0 == 128) )
            	    {
            	        alt117 = 1;
            	    }


            	    switch (alt117) 
            		{
            			case 1 :
            			    // cs.g:436:29: '&&' inclusive_or_expression
            			    {
            			    	Match(input,128,FOLLOW_128_in_conditional_and_expression3135); if (state.failed) return ;
            			    	PushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression3139);
            			    	inclusive_or_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop117;
            	    }
            	} while (true);

            	loop117:
            		;	// Stops C# compiler whining that label 'loop117' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 107, conditional_and_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "conditional_and_expression"


    // $ANTLR start "conditional_or_expression"
    // cs.g:437:1: conditional_or_expression : conditional_and_expression ( '||' conditional_and_expression )* ;
    public void conditional_or_expression() // throws RecognitionException [1]
    {   
        int conditional_or_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 108) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:437:26: ( conditional_and_expression ( '||' conditional_and_expression )* )
            // cs.g:438:2: conditional_and_expression ( '||' conditional_and_expression )*
            {
            	PushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression3149);
            	conditional_and_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:438:30: ( '||' conditional_and_expression )*
            	do 
            	{
            	    int alt118 = 2;
            	    int LA118_0 = input.LA(1);

            	    if ( (LA118_0 == 129) )
            	    {
            	        alt118 = 1;
            	    }


            	    switch (alt118) 
            		{
            			case 1 :
            			    // cs.g:438:31: '||' conditional_and_expression
            			    {
            			    	Match(input,129,FOLLOW_129_in_conditional_or_expression3153); if (state.failed) return ;
            			    	PushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression3157);
            			    	conditional_and_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop118;
            	    }
            	} while (true);

            	loop118:
            		;	// Stops C# compiler whining that label 'loop118' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 108, conditional_or_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "conditional_or_expression"


    // $ANTLR start "null_coalescing_expression"
    // cs.g:440:1: null_coalescing_expression : conditional_or_expression ( '??' conditional_or_expression )* ;
    public void null_coalescing_expression() // throws RecognitionException [1]
    {   
        int null_coalescing_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 109) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:440:27: ( conditional_or_expression ( '??' conditional_or_expression )* )
            // cs.g:441:2: conditional_or_expression ( '??' conditional_or_expression )*
            {
            	PushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression3168);
            	conditional_or_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:441:30: ( '??' conditional_or_expression )*
            	do 
            	{
            	    int alt119 = 2;
            	    int LA119_0 = input.LA(1);

            	    if ( (LA119_0 == 130) )
            	    {
            	        alt119 = 1;
            	    }


            	    switch (alt119) 
            		{
            			case 1 :
            			    // cs.g:441:31: '??' conditional_or_expression
            			    {
            			    	Match(input,130,FOLLOW_130_in_null_coalescing_expression3173); if (state.failed) return ;
            			    	PushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression3177);
            			    	conditional_or_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop119;
            	    }
            	} while (true);

            	loop119:
            		;	// Stops C# compiler whining that label 'loop119' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 109, null_coalescing_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "null_coalescing_expression"


    // $ANTLR start "conditional_expression"
    // cs.g:442:1: conditional_expression : null_coalescing_expression ( '?' expression ':' expression )? ;
    public void conditional_expression() // throws RecognitionException [1]
    {   
        int conditional_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 110) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:442:23: ( null_coalescing_expression ( '?' expression ':' expression )? )
            // cs.g:443:2: null_coalescing_expression ( '?' expression ':' expression )?
            {
            	PushFollow(FOLLOW_null_coalescing_expression_in_conditional_expression3187);
            	null_coalescing_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:443:31: ( '?' expression ':' expression )?
            	int alt120 = 2;
            	int LA120_0 = input.LA(1);

            	if ( (LA120_0 == 101) )
            	{
            	    alt120 = 1;
            	}
            	switch (alt120) 
            	{
            	    case 1 :
            	        // cs.g:443:32: '?' expression ':' expression
            	        {
            	        	Match(input,101,FOLLOW_101_in_conditional_expression3192); if (state.failed) return ;
            	        	PushFollow(FOLLOW_expression_in_conditional_expression3196);
            	        	expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,90,FOLLOW_90_in_conditional_expression3200); if (state.failed) return ;
            	        	PushFollow(FOLLOW_expression_in_conditional_expression3204);
            	        	expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 110, conditional_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "conditional_expression"


    // $ANTLR start "lambda_expression"
    // cs.g:448:1: lambda_expression : anonymous_function_signature '=>' anonymous_function_body ;
    public void lambda_expression() // throws RecognitionException [1]
    {   
        int lambda_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 111) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:448:18: ( anonymous_function_signature '=>' anonymous_function_body )
            // cs.g:449:2: anonymous_function_signature '=>' anonymous_function_body
            {
            	PushFollow(FOLLOW_anonymous_function_signature_in_lambda_expression3224);
            	anonymous_function_signature();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,131,FOLLOW_131_in_lambda_expression3228); if (state.failed) return ;
            	PushFollow(FOLLOW_anonymous_function_body_in_lambda_expression3232);
            	anonymous_function_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 111, lambda_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "lambda_expression"


    // $ANTLR start "anonymous_function_signature"
    // cs.g:450:1: anonymous_function_signature : ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list );
    public void anonymous_function_signature() // throws RecognitionException [1]
    {   
        int anonymous_function_signature_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 112) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:450:29: ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list )
            int alt122 = 2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0 == 88) )
            {
                alt122 = 1;
            }
            else if ( (LA122_0 == IDENTIFIER || LA122_0 == 65 || (LA122_0 >= 132 && LA122_0 <= 133) || (LA122_0 >= 135 && LA122_0 <= 148) || (LA122_0 >= 150 && LA122_0 <= 152) || LA122_0 == 154 || (LA122_0 >= 157 && LA122_0 <= 159) || LA122_0 == 170 || (LA122_0 >= 177 && LA122_0 <= 178) || LA122_0 == 195 || LA122_0 == 202) )
            {
                alt122 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d122s0 =
                    new NoViableAltException("", 122, 0, input);

                throw nvae_d122s0;
            }
            switch (alt122) 
            {
                case 1 :
                    // cs.g:451:2: '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')'
                    {
                    	Match(input,88,FOLLOW_88_in_anonymous_function_signature3239); if (state.failed) return ;
                    	// cs.g:451:6: ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )?
                    	int alt121 = 3;
                    	int LA121_0 = input.LA(1);

                    	if ( (LA121_0 == 82 || (LA121_0 >= 91 && LA121_0 <= 92) || (LA121_0 >= 160 && LA121_0 <= 168) || (LA121_0 >= 196 && LA121_0 <= 201)) )
                    	{
                    	    alt121 = 1;
                    	}
                    	else if ( (LA121_0 == IDENTIFIER || LA121_0 == 65 || (LA121_0 >= 132 && LA121_0 <= 133) || (LA121_0 >= 135 && LA121_0 <= 148) || (LA121_0 >= 150 && LA121_0 <= 152) || LA121_0 == 154 || (LA121_0 >= 157 && LA121_0 <= 159) || LA121_0 == 170 || (LA121_0 >= 177 && LA121_0 <= 178) || LA121_0 == 195 || LA121_0 == 202) )
                    	{
                    	    int LA121_2 = input.LA(2);

                    	    if ( (LA121_2 == IDENTIFIER || LA121_2 == DOT || LA121_2 == 65 || LA121_2 == 84 || LA121_2 == 86 || (LA121_2 >= 99 && LA121_2 <= 101) || (LA121_2 >= 132 && LA121_2 <= 133) || (LA121_2 >= 135 && LA121_2 <= 148) || (LA121_2 >= 150 && LA121_2 <= 152) || LA121_2 == 154 || (LA121_2 >= 157 && LA121_2 <= 159) || LA121_2 == 170 || (LA121_2 >= 177 && LA121_2 <= 178) || LA121_2 == 195 || LA121_2 == 202) )
                    	    {
                    	        alt121 = 1;
                    	    }
                    	    else if ( (LA121_2 == RPAREN || LA121_2 == 89) )
                    	    {
                    	        alt121 = 2;
                    	    }
                    	}
                    	switch (alt121) 
                    	{
                    	    case 1 :
                    	        // cs.g:451:7: explicit_anonymous_function_parameter_list
                    	        {
                    	        	PushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature3242);
                    	        	explicit_anonymous_function_parameter_list();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:452:5: implicit_anonymous_function_parameter_list
                    	        {
                    	        	PushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3248);
                    	        	implicit_anonymous_function_parameter_list();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	Match(input,RPAREN,FOLLOW_RPAREN_in_anonymous_function_signature3252); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:453:4: implicit_anonymous_function_parameter_list
                    {
                    	PushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3257);
                    	implicit_anonymous_function_parameter_list();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 112, anonymous_function_signature_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "anonymous_function_signature"


    // $ANTLR start "implicit_anonymous_function_parameter_list"
    // cs.g:455:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* ;
    public void implicit_anonymous_function_parameter_list() // throws RecognitionException [1]
    {   
        int implicit_anonymous_function_parameter_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 113) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:455:43: ( implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* )
            // cs.g:456:2: implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )*
            {
            	PushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3266);
            	implicit_anonymous_function_parameter();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:456:42: ( ',' implicit_anonymous_function_parameter )*
            	do 
            	{
            	    int alt123 = 2;
            	    int LA123_0 = input.LA(1);

            	    if ( (LA123_0 == 89) )
            	    {
            	        alt123 = 1;
            	    }


            	    switch (alt123) 
            		{
            			case 1 :
            			    // cs.g:456:43: ',' implicit_anonymous_function_parameter
            			    {
            			    	Match(input,89,FOLLOW_89_in_implicit_anonymous_function_parameter_list3271); if (state.failed) return ;
            			    	PushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3275);
            			    	implicit_anonymous_function_parameter();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop123;
            	    }
            	} while (true);

            	loop123:
            		;	// Stops C# compiler whining that label 'loop123' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 113, implicit_anonymous_function_parameter_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "implicit_anonymous_function_parameter_list"


    // $ANTLR start "implicit_anonymous_function_parameter"
    // cs.g:457:1: implicit_anonymous_function_parameter : identifier ;
    public void implicit_anonymous_function_parameter() // throws RecognitionException [1]
    {   
        int implicit_anonymous_function_parameter_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 114) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:457:38: ( identifier )
            // cs.g:458:2: identifier
            {
            	PushFollow(FOLLOW_identifier_in_implicit_anonymous_function_parameter3285);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 114, implicit_anonymous_function_parameter_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "implicit_anonymous_function_parameter"


    // $ANTLR start "anonymous_function_body"
    // cs.g:459:1: anonymous_function_body : ( expression | block );
    public void anonymous_function_body() // throws RecognitionException [1]
    {   
        int anonymous_function_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 115) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:459:24: ( expression | block )
            int alt124 = 2;
            int LA124_0 = input.LA(1);

            if ( ((LA124_0 >= IDENTIFIER && LA124_0 <= NULL) || LA124_0 == MINUS || LA124_0 == 65 || LA124_0 == 68 || LA124_0 == 83 || LA124_0 == 85 || LA124_0 == 88 || (LA124_0 >= 93 && LA124_0 <= 98) || LA124_0 == 100 || (LA124_0 >= 102 && LA124_0 <= 106) || LA124_0 == 117 || (LA124_0 >= 132 && LA124_0 <= 133) || (LA124_0 >= 135 && LA124_0 <= 148) || (LA124_0 >= 150 && LA124_0 <= 152) || LA124_0 == 154 || (LA124_0 >= 157 && LA124_0 <= 168) || LA124_0 == 170 || (LA124_0 >= 177 && LA124_0 <= 178) || (LA124_0 >= 195 && LA124_0 <= 202)) )
            {
                alt124 = 1;
            }
            else if ( (LA124_0 == SEMI || LA124_0 == 62) )
            {
                alt124 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d124s0 =
                    new NoViableAltException("", 124, 0, input);

                throw nvae_d124s0;
            }
            switch (alt124) 
            {
                case 1 :
                    // cs.g:460:2: expression
                    {
                    	PushFollow(FOLLOW_expression_in_anonymous_function_body3292);
                    	expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:461:4: block
                    {
                    	PushFollow(FOLLOW_block_in_anonymous_function_body3297);
                    	block();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 115, anonymous_function_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "anonymous_function_body"


    // $ANTLR start "query_expression"
    // cs.g:466:1: query_expression : from_clause query_body ;
    public void query_expression() // throws RecognitionException [1]
    {   
        int query_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 116) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:466:17: ( from_clause query_body )
            // cs.g:467:2: from_clause query_body
            {
            	PushFollow(FOLLOW_from_clause_in_query_expression3309);
            	from_clause();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_query_body_in_query_expression3313);
            	query_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 116, query_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "query_expression"


    // $ANTLR start "query_body"
    // cs.g:468:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
    public void query_body() // throws RecognitionException [1]
    {   
        int query_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 117) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:468:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
            // cs.g:470:2: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
            {
            	// cs.g:470:2: ( query_body_clauses )?
            	int alt125 = 2;
            	int LA125_0 = input.LA(1);

            	if ( (LA125_0 == 133 || LA125_0 == 135 || (LA125_0 >= 138 && LA125_0 <= 139) || LA125_0 == 145) )
            	{
            	    alt125 = 1;
            	}
            	switch (alt125) 
            	{
            	    case 1 :
            	        // cs.g:470:2: query_body_clauses
            	        {
            	        	PushFollow(FOLLOW_query_body_clauses_in_query_body3323);
            	        	query_body_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_select_or_group_clause_in_query_body3328);
            	select_or_group_clause();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:470:49: ( ( 'into' )=> query_continuation )?
            	int alt126 = 2;
            	int LA126_0 = input.LA(1);

            	if ( (LA126_0 == 132) )
            	{
            	    int LA126_1 = input.LA(2);

            	    if ( (synpred23_cs()) )
            	    {
            	        alt126 = 1;
            	    }
            	}
            	switch (alt126) 
            	{
            	    case 1 :
            	        // cs.g:470:50: ( 'into' )=> query_continuation
            	        {
            	        	PushFollow(FOLLOW_query_continuation_in_query_body3339);
            	        	query_continuation();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 117, query_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "query_body"


    // $ANTLR start "query_continuation"
    // cs.g:471:1: query_continuation : 'into' identifier query_body ;
    public void query_continuation() // throws RecognitionException [1]
    {   
        int query_continuation_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 118) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:471:19: ( 'into' identifier query_body )
            // cs.g:472:2: 'into' identifier query_body
            {
            	Match(input,132,FOLLOW_132_in_query_continuation3349); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_query_continuation3353);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_query_body_in_query_continuation3357);
            	query_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 118, query_continuation_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "query_continuation"


    // $ANTLR start "query_body_clauses"
    // cs.g:473:1: query_body_clauses : ( query_body_clause )+ ;
    public void query_body_clauses() // throws RecognitionException [1]
    {   
        int query_body_clauses_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 119) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:473:19: ( ( query_body_clause )+ )
            // cs.g:474:2: ( query_body_clause )+
            {
            	// cs.g:474:2: ( query_body_clause )+
            	int cnt127 = 0;
            	do 
            	{
            	    int alt127 = 2;
            	    int LA127_0 = input.LA(1);

            	    if ( (LA127_0 == 133 || LA127_0 == 135 || (LA127_0 >= 138 && LA127_0 <= 139) || LA127_0 == 145) )
            	    {
            	        alt127 = 1;
            	    }


            	    switch (alt127) 
            		{
            			case 1 :
            			    // cs.g:474:2: query_body_clause
            			    {
            			    	PushFollow(FOLLOW_query_body_clause_in_query_body_clauses3364);
            			    	query_body_clause();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt127 >= 1 ) goto loop127;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee127 =
            		                new EarlyExitException(127, input);
            		            throw eee127;
            	    }
            	    cnt127++;
            	} while (true);

            	loop127:
            		;	// Stops C# compiler whining that label 'loop127' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 119, query_body_clauses_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "query_body_clauses"


    // $ANTLR start "query_body_clause"
    // cs.g:475:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
    public void query_body_clause() // throws RecognitionException [1]
    {   
        int query_body_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 120) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:475:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
            int alt128 = 5;
            switch ( input.LA(1) ) 
            {
            case 133:
            	{
                alt128 = 1;
                }
                break;
            case 138:
            	{
                alt128 = 2;
                }
                break;
            case 145:
            	{
                alt128 = 3;
                }
                break;
            case 135:
            	{
                alt128 = 4;
                }
                break;
            case 139:
            	{
                alt128 = 5;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d128s0 =
            	        new NoViableAltException("", 128, 0, input);

            	    throw nvae_d128s0;
            }

            switch (alt128) 
            {
                case 1 :
                    // cs.g:476:2: from_clause
                    {
                    	PushFollow(FOLLOW_from_clause_in_query_body_clause3373);
                    	from_clause();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:477:4: let_clause
                    {
                    	PushFollow(FOLLOW_let_clause_in_query_body_clause3378);
                    	let_clause();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:478:4: where_clause
                    {
                    	PushFollow(FOLLOW_where_clause_in_query_body_clause3383);
                    	where_clause();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:479:4: join_clause
                    {
                    	PushFollow(FOLLOW_join_clause_in_query_body_clause3388);
                    	join_clause();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:480:4: orderby_clause
                    {
                    	PushFollow(FOLLOW_orderby_clause_in_query_body_clause3393);
                    	orderby_clause();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 120, query_body_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "query_body_clause"


    // $ANTLR start "from_clause"
    // cs.g:481:1: from_clause : 'from' ( type )? identifier 'in' expression ;
    public void from_clause() // throws RecognitionException [1]
    {   
        int from_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 121) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:481:12: ( 'from' ( type )? identifier 'in' expression )
            // cs.g:482:2: 'from' ( type )? identifier 'in' expression
            {
            	Match(input,133,FOLLOW_133_in_from_clause3400); if (state.failed) return ;
            	// cs.g:482:11: ( type )?
            	int alt129 = 2;
            	int LA129_0 = input.LA(1);

            	if ( (LA129_0 == 82 || (LA129_0 >= 160 && LA129_0 <= 168) || (LA129_0 >= 196 && LA129_0 <= 201)) )
            	{
            	    alt129 = 1;
            	}
            	else if ( (LA129_0 == IDENTIFIER || LA129_0 == 65 || (LA129_0 >= 132 && LA129_0 <= 133) || (LA129_0 >= 135 && LA129_0 <= 148) || (LA129_0 >= 150 && LA129_0 <= 152) || LA129_0 == 154 || (LA129_0 >= 157 && LA129_0 <= 159) || LA129_0 == 170 || (LA129_0 >= 177 && LA129_0 <= 178) || LA129_0 == 195 || LA129_0 == 202) )
            	{
            	    int LA129_2 = input.LA(2);

            	    if ( (LA129_2 == IDENTIFIER || LA129_2 == DOT || LA129_2 == 65 || LA129_2 == 84 || LA129_2 == 86 || (LA129_2 >= 99 && LA129_2 <= 101) || (LA129_2 >= 132 && LA129_2 <= 133) || (LA129_2 >= 135 && LA129_2 <= 148) || (LA129_2 >= 150 && LA129_2 <= 152) || LA129_2 == 154 || (LA129_2 >= 157 && LA129_2 <= 159) || LA129_2 == 170 || (LA129_2 >= 177 && LA129_2 <= 178) || LA129_2 == 195 || LA129_2 == 202) )
            	    {
            	        alt129 = 1;
            	    }
            	}
            	switch (alt129) 
            	{
            	    case 1 :
            	        // cs.g:482:11: type
            	        {
            	        	PushFollow(FOLLOW_type_in_from_clause3404);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_identifier_in_from_clause3409);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,134,FOLLOW_134_in_from_clause3413); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_from_clause3417);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 121, from_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "from_clause"


    // $ANTLR start "join_clause"
    // cs.g:483:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
    public void join_clause() // throws RecognitionException [1]
    {   
        int join_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 122) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:483:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
            // cs.g:484:2: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
            {
            	Match(input,135,FOLLOW_135_in_join_clause3425); if (state.failed) return ;
            	// cs.g:484:11: ( type )?
            	int alt130 = 2;
            	int LA130_0 = input.LA(1);

            	if ( (LA130_0 == 82 || (LA130_0 >= 160 && LA130_0 <= 168) || (LA130_0 >= 196 && LA130_0 <= 201)) )
            	{
            	    alt130 = 1;
            	}
            	else if ( (LA130_0 == IDENTIFIER || LA130_0 == 65 || (LA130_0 >= 132 && LA130_0 <= 133) || (LA130_0 >= 135 && LA130_0 <= 148) || (LA130_0 >= 150 && LA130_0 <= 152) || LA130_0 == 154 || (LA130_0 >= 157 && LA130_0 <= 159) || LA130_0 == 170 || (LA130_0 >= 177 && LA130_0 <= 178) || LA130_0 == 195 || LA130_0 == 202) )
            	{
            	    int LA130_2 = input.LA(2);

            	    if ( (LA130_2 == IDENTIFIER || LA130_2 == DOT || LA130_2 == 65 || LA130_2 == 84 || LA130_2 == 86 || (LA130_2 >= 99 && LA130_2 <= 101) || (LA130_2 >= 132 && LA130_2 <= 133) || (LA130_2 >= 135 && LA130_2 <= 148) || (LA130_2 >= 150 && LA130_2 <= 152) || LA130_2 == 154 || (LA130_2 >= 157 && LA130_2 <= 159) || LA130_2 == 170 || (LA130_2 >= 177 && LA130_2 <= 178) || LA130_2 == 195 || LA130_2 == 202) )
            	    {
            	        alt130 = 1;
            	    }
            	}
            	switch (alt130) 
            	{
            	    case 1 :
            	        // cs.g:484:11: type
            	        {
            	        	PushFollow(FOLLOW_type_in_join_clause3429);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_identifier_in_join_clause3434);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,134,FOLLOW_134_in_join_clause3438); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_join_clause3442);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,136,FOLLOW_136_in_join_clause3446); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_join_clause3450);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,137,FOLLOW_137_in_join_clause3454); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_join_clause3458);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:484:94: ( 'into' identifier )?
            	int alt131 = 2;
            	int LA131_0 = input.LA(1);

            	if ( (LA131_0 == 132) )
            	{
            	    alt131 = 1;
            	}
            	switch (alt131) 
            	{
            	    case 1 :
            	        // cs.g:484:95: 'into' identifier
            	        {
            	        	Match(input,132,FOLLOW_132_in_join_clause3461); if (state.failed) return ;
            	        	PushFollow(FOLLOW_identifier_in_join_clause3463);
            	        	identifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 122, join_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "join_clause"


    // $ANTLR start "let_clause"
    // cs.g:485:1: let_clause : 'let' identifier '=' expression ;
    public void let_clause() // throws RecognitionException [1]
    {   
        int let_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 123) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:485:11: ( 'let' identifier '=' expression )
            // cs.g:486:2: 'let' identifier '=' expression
            {
            	Match(input,138,FOLLOW_138_in_let_clause3473); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_let_clause3477);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,66,FOLLOW_66_in_let_clause3481); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_let_clause3485);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 123, let_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "let_clause"


    // $ANTLR start "orderby_clause"
    // cs.g:487:1: orderby_clause : 'orderby' ordering_list ;
    public void orderby_clause() // throws RecognitionException [1]
    {   
        int orderby_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 124) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:487:15: ( 'orderby' ordering_list )
            // cs.g:488:2: 'orderby' ordering_list
            {
            	Match(input,139,FOLLOW_139_in_orderby_clause3492); if (state.failed) return ;
            	PushFollow(FOLLOW_ordering_list_in_orderby_clause3496);
            	ordering_list();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 124, orderby_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "orderby_clause"


    // $ANTLR start "ordering_list"
    // cs.g:489:1: ordering_list : ordering ( ',' ordering )* ;
    public void ordering_list() // throws RecognitionException [1]
    {   
        int ordering_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 125) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:489:14: ( ordering ( ',' ordering )* )
            // cs.g:490:2: ordering ( ',' ordering )*
            {
            	PushFollow(FOLLOW_ordering_in_ordering_list3504);
            	ordering();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:490:13: ( ',' ordering )*
            	do 
            	{
            	    int alt132 = 2;
            	    int LA132_0 = input.LA(1);

            	    if ( (LA132_0 == 89) )
            	    {
            	        alt132 = 1;
            	    }


            	    switch (alt132) 
            		{
            			case 1 :
            			    // cs.g:490:14: ',' ordering
            			    {
            			    	Match(input,89,FOLLOW_89_in_ordering_list3509); if (state.failed) return ;
            			    	PushFollow(FOLLOW_ordering_in_ordering_list3513);
            			    	ordering();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop132;
            	    }
            	} while (true);

            	loop132:
            		;	// Stops C# compiler whining that label 'loop132' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 125, ordering_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "ordering_list"


    // $ANTLR start "ordering"
    // cs.g:491:1: ordering : expression ordering_direction ;
    public void ordering() // throws RecognitionException [1]
    {   
        int ordering_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 126) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:491:9: ( expression ordering_direction )
            // cs.g:492:2: expression ordering_direction
            {
            	PushFollow(FOLLOW_expression_in_ordering3523);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_ordering_direction_in_ordering3528);
            	ordering_direction();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 126, ordering_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "ordering"


    // $ANTLR start "ordering_direction"
    // cs.g:494:1: ordering_direction : ( 'ascending' | 'descending' );
    public void ordering_direction() // throws RecognitionException [1]
    {   
        int ordering_direction_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 127) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:494:19: ( 'ascending' | 'descending' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 140 && input.LA(1) <= 141) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 127, ordering_direction_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "ordering_direction"


    // $ANTLR start "select_or_group_clause"
    // cs.g:497:1: select_or_group_clause : ( select_clause | group_clause );
    public void select_or_group_clause() // throws RecognitionException [1]
    {   
        int select_or_group_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 128) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:497:23: ( select_clause | group_clause )
            int alt133 = 2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0 == 142) )
            {
                alt133 = 1;
            }
            else if ( (LA133_0 == 143) )
            {
                alt133 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d133s0 =
                    new NoViableAltException("", 133, 0, input);

                throw nvae_d133s0;
            }
            switch (alt133) 
            {
                case 1 :
                    // cs.g:498:2: select_clause
                    {
                    	PushFollow(FOLLOW_select_clause_in_select_or_group_clause3550);
                    	select_clause();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:499:4: group_clause
                    {
                    	PushFollow(FOLLOW_group_clause_in_select_or_group_clause3555);
                    	group_clause();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 128, select_or_group_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "select_or_group_clause"


    // $ANTLR start "select_clause"
    // cs.g:500:1: select_clause : 'select' expression ;
    public void select_clause() // throws RecognitionException [1]
    {   
        int select_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 129) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:500:14: ( 'select' expression )
            // cs.g:501:2: 'select' expression
            {
            	Match(input,142,FOLLOW_142_in_select_clause3563); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_select_clause3567);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 129, select_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "select_clause"


    // $ANTLR start "group_clause"
    // cs.g:502:1: group_clause : 'group' expression 'by' expression ;
    public void group_clause() // throws RecognitionException [1]
    {   
        int group_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 130) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:502:13: ( 'group' expression 'by' expression )
            // cs.g:503:2: 'group' expression 'by' expression
            {
            	Match(input,143,FOLLOW_143_in_group_clause3575); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_group_clause3579);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,144,FOLLOW_144_in_group_clause3583); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_group_clause3587);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 130, group_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "group_clause"


    // $ANTLR start "where_clause"
    // cs.g:504:1: where_clause : 'where' boolean_expression ;
    public void where_clause() // throws RecognitionException [1]
    {   
        int where_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 131) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:504:13: ( 'where' boolean_expression )
            // cs.g:505:2: 'where' boolean_expression
            {
            	Match(input,145,FOLLOW_145_in_where_clause3595); if (state.failed) return ;
            	PushFollow(FOLLOW_boolean_expression_in_where_clause3599);
            	boolean_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 131, where_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "where_clause"


    // $ANTLR start "boolean_expression"
    // cs.g:506:1: boolean_expression : expression ;
    public void boolean_expression() // throws RecognitionException [1]
    {   
        int boolean_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 132) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:506:19: ( expression )
            // cs.g:507:2: expression
            {
            	PushFollow(FOLLOW_expression_in_boolean_expression3607);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 132, boolean_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "boolean_expression"


    // $ANTLR start "global_attributes"
    // cs.g:512:1: global_attributes : ( global_attribute )+ ;
    public void global_attributes() // throws RecognitionException [1]
    {   
        int global_attributes_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 133) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:512:18: ( ( global_attribute )+ )
            // cs.g:513:2: ( global_attribute )+
            {
            	// cs.g:513:2: ( global_attribute )+
            	int cnt134 = 0;
            	do 
            	{
            	    int alt134 = 2;
            	    int LA134_0 = input.LA(1);

            	    if ( (LA134_0 == 86) )
            	    {
            	        int LA134_2 = input.LA(2);

            	        if ( ((LA134_2 >= 146 && LA134_2 <= 147)) )
            	        {
            	            int LA134_3 = input.LA(3);

            	            if ( (LA134_3 == 90) )
            	            {
            	                alt134 = 1;
            	            }


            	        }


            	    }


            	    switch (alt134) 
            		{
            			case 1 :
            			    // cs.g:513:2: global_attribute
            			    {
            			    	PushFollow(FOLLOW_global_attribute_in_global_attributes3619);
            			    	global_attribute();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt134 >= 1 ) goto loop134;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee134 =
            		                new EarlyExitException(134, input);
            		            throw eee134;
            	    }
            	    cnt134++;
            	} while (true);

            	loop134:
            		;	// Stops C# compiler whining that label 'loop134' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 133, global_attributes_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "global_attributes"


    // $ANTLR start "global_attribute"
    // cs.g:514:1: global_attribute : '[' global_attribute_target_specifier attribute_list ( ',' )? ']' ;
    public void global_attribute() // throws RecognitionException [1]
    {   
        int global_attribute_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 134) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:514:17: ( '[' global_attribute_target_specifier attribute_list ( ',' )? ']' )
            // cs.g:515:2: '[' global_attribute_target_specifier attribute_list ( ',' )? ']'
            {
            	Match(input,86,FOLLOW_86_in_global_attribute3629); if (state.failed) return ;
            	PushFollow(FOLLOW_global_attribute_target_specifier_in_global_attribute3633);
            	global_attribute_target_specifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_attribute_list_in_global_attribute3637);
            	attribute_list();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:515:61: ( ',' )?
            	int alt135 = 2;
            	int LA135_0 = input.LA(1);

            	if ( (LA135_0 == 89) )
            	{
            	    alt135 = 1;
            	}
            	switch (alt135) 
            	{
            	    case 1 :
            	        // cs.g:515:61: ','
            	        {
            	        	Match(input,89,FOLLOW_89_in_global_attribute3641); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,87,FOLLOW_87_in_global_attribute3646); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 134, global_attribute_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "global_attribute"


    // $ANTLR start "global_attribute_target_specifier"
    // cs.g:516:1: global_attribute_target_specifier : global_attribute_target ':' ;
    public void global_attribute_target_specifier() // throws RecognitionException [1]
    {   
        int global_attribute_target_specifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 135) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:516:34: ( global_attribute_target ':' )
            // cs.g:517:2: global_attribute_target ':'
            {
            	PushFollow(FOLLOW_global_attribute_target_in_global_attribute_target_specifier3655);
            	global_attribute_target();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,90,FOLLOW_90_in_global_attribute_target_specifier3659); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 135, global_attribute_target_specifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "global_attribute_target_specifier"


    // $ANTLR start "global_attribute_target"
    // cs.g:518:1: global_attribute_target : ( 'assembly' | 'module' );
    public void global_attribute_target() // throws RecognitionException [1]
    {   
        int global_attribute_target_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 136) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:518:24: ( 'assembly' | 'module' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 146 && input.LA(1) <= 147) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 136, global_attribute_target_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "global_attribute_target"


    // $ANTLR start "attributes"
    // cs.g:520:1: attributes : attribute_sections ;
    public void attributes() // throws RecognitionException [1]
    {   
        int attributes_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 137) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:520:11: ( attribute_sections )
            // cs.g:521:2: attribute_sections
            {
            	PushFollow(FOLLOW_attribute_sections_in_attributes3681);
            	attribute_sections();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 137, attributes_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attributes"


    // $ANTLR start "attribute_sections"
    // cs.g:522:1: attribute_sections : ( attribute_section )+ ;
    public void attribute_sections() // throws RecognitionException [1]
    {   
        int attribute_sections_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 138) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:522:19: ( ( attribute_section )+ )
            // cs.g:523:2: ( attribute_section )+
            {
            	// cs.g:523:2: ( attribute_section )+
            	int cnt136 = 0;
            	do 
            	{
            	    int alt136 = 2;
            	    int LA136_0 = input.LA(1);

            	    if ( (LA136_0 == 86) )
            	    {
            	        alt136 = 1;
            	    }


            	    switch (alt136) 
            		{
            			case 1 :
            			    // cs.g:523:2: attribute_section
            			    {
            			    	PushFollow(FOLLOW_attribute_section_in_attribute_sections3690);
            			    	attribute_section();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt136 >= 1 ) goto loop136;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee136 =
            		                new EarlyExitException(136, input);
            		            throw eee136;
            	    }
            	    cnt136++;
            	} while (true);

            	loop136:
            		;	// Stops C# compiler whining that label 'loop136' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 138, attribute_sections_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute_sections"


    // $ANTLR start "attribute_section"
    // cs.g:524:1: attribute_section : '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' ;
    public void attribute_section() // throws RecognitionException [1]
    {   
        int attribute_section_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 139) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:524:18: ( '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' )
            // cs.g:525:2: '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']'
            {
            	Match(input,86,FOLLOW_86_in_attribute_section3700); if (state.failed) return ;
            	// cs.g:525:8: ( attribute_target_specifier )?
            	int alt137 = 2;
            	int LA137_0 = input.LA(1);

            	if ( (LA137_0 == 148 || (LA137_0 >= 150 && LA137_0 <= 152) || LA137_0 == 154) )
            	{
            	    int LA137_1 = input.LA(2);

            	    if ( (LA137_1 == 90) )
            	    {
            	        alt137 = 1;
            	    }
            	}
            	else if ( (LA137_0 == 149 || LA137_0 == 153) )
            	{
            	    alt137 = 1;
            	}
            	switch (alt137) 
            	{
            	    case 1 :
            	        // cs.g:525:8: attribute_target_specifier
            	        {
            	        	PushFollow(FOLLOW_attribute_target_specifier_in_attribute_section3704);
            	        	attribute_target_specifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_attribute_list_in_attribute_section3709);
            	attribute_list();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:525:55: ( ',' )?
            	int alt138 = 2;
            	int LA138_0 = input.LA(1);

            	if ( (LA138_0 == 89) )
            	{
            	    alt138 = 1;
            	}
            	switch (alt138) 
            	{
            	    case 1 :
            	        // cs.g:525:55: ','
            	        {
            	        	Match(input,89,FOLLOW_89_in_attribute_section3713); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,87,FOLLOW_87_in_attribute_section3718); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 139, attribute_section_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute_section"


    // $ANTLR start "attribute_target_specifier"
    // cs.g:526:1: attribute_target_specifier : attribute_target ':' ;
    public void attribute_target_specifier() // throws RecognitionException [1]
    {   
        int attribute_target_specifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 140) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:526:27: ( attribute_target ':' )
            // cs.g:527:2: attribute_target ':'
            {
            	PushFollow(FOLLOW_attribute_target_in_attribute_target_specifier3727);
            	attribute_target();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,90,FOLLOW_90_in_attribute_target_specifier3731); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 140, attribute_target_specifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute_target_specifier"


    // $ANTLR start "attribute_target"
    // cs.g:528:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
    public void attribute_target() // throws RecognitionException [1]
    {   
        int attribute_target_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 141) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:528:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 148 && input.LA(1) <= 154) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 141, attribute_target_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute_target"


    // $ANTLR start "attribute_list"
    // cs.g:530:1: attribute_list : attribute ( ',' attribute )* ;
    public void attribute_list() // throws RecognitionException [1]
    {   
        int attribute_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 142) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:530:15: ( attribute ( ',' attribute )* )
            // cs.g:531:2: attribute ( ',' attribute )*
            {
            	PushFollow(FOLLOW_attribute_in_attribute_list3773);
            	attribute();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:531:12: ( ',' attribute )*
            	do 
            	{
            	    int alt139 = 2;
            	    int LA139_0 = input.LA(1);

            	    if ( (LA139_0 == 89) )
            	    {
            	        int LA139_1 = input.LA(2);

            	        if ( (LA139_1 == IDENTIFIER || LA139_1 == 65 || (LA139_1 >= 132 && LA139_1 <= 133) || (LA139_1 >= 135 && LA139_1 <= 148) || (LA139_1 >= 150 && LA139_1 <= 152) || LA139_1 == 154 || (LA139_1 >= 157 && LA139_1 <= 159) || LA139_1 == 170 || (LA139_1 >= 177 && LA139_1 <= 178) || LA139_1 == 195 || LA139_1 == 202) )
            	        {
            	            alt139 = 1;
            	        }


            	    }


            	    switch (alt139) 
            		{
            			case 1 :
            			    // cs.g:531:13: ',' attribute
            			    {
            			    	Match(input,89,FOLLOW_89_in_attribute_list3776); if (state.failed) return ;
            			    	PushFollow(FOLLOW_attribute_in_attribute_list3778);
            			    	attribute();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop139;
            	    }
            	} while (true);

            	loop139:
            		;	// Stops C# compiler whining that label 'loop139' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 142, attribute_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute_list"


    // $ANTLR start "attribute"
    // cs.g:532:1: attribute : type_name ( attribute_arguments )? ;
    public void attribute() // throws RecognitionException [1]
    {   
        int attribute_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 143) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:532:10: ( type_name ( attribute_arguments )? )
            // cs.g:533:2: type_name ( attribute_arguments )?
            {
            	PushFollow(FOLLOW_type_name_in_attribute3790);
            	type_name();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:533:14: ( attribute_arguments )?
            	int alt140 = 2;
            	int LA140_0 = input.LA(1);

            	if ( (LA140_0 == 88) )
            	{
            	    alt140 = 1;
            	}
            	switch (alt140) 
            	{
            	    case 1 :
            	        // cs.g:533:14: attribute_arguments
            	        {
            	        	PushFollow(FOLLOW_attribute_arguments_in_attribute3794);
            	        	attribute_arguments();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 143, attribute_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute"


    // $ANTLR start "attribute_arguments"
    // cs.g:535:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
    public void attribute_arguments() // throws RecognitionException [1]
    {   
        int attribute_arguments_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 144) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:535:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
            // cs.g:536:2: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
            {
            	Match(input,88,FOLLOW_88_in_attribute_arguments3805); if (state.failed) return ;
            	// cs.g:536:8: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
            	int alt142 = 2;
            	int LA142_0 = input.LA(1);

            	if ( (LA142_0 == RPAREN) )
            	{
            	    alt142 = 1;
            	}
            	else if ( ((LA142_0 >= IDENTIFIER && LA142_0 <= NULL) || LA142_0 == MINUS || LA142_0 == 65 || LA142_0 == 68 || LA142_0 == 83 || LA142_0 == 85 || LA142_0 == 88 || (LA142_0 >= 93 && LA142_0 <= 98) || LA142_0 == 100 || (LA142_0 >= 102 && LA142_0 <= 106) || LA142_0 == 117 || (LA142_0 >= 132 && LA142_0 <= 133) || (LA142_0 >= 135 && LA142_0 <= 148) || (LA142_0 >= 150 && LA142_0 <= 152) || LA142_0 == 154 || (LA142_0 >= 157 && LA142_0 <= 168) || LA142_0 == 170 || (LA142_0 >= 177 && LA142_0 <= 178) || (LA142_0 >= 195 && LA142_0 <= 202)) )
            	{
            	    alt142 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d142s0 =
            	        new NoViableAltException("", 142, 0, input);

            	    throw nvae_d142s0;
            	}
            	switch (alt142) 
            	{
            	    case 1 :
            	        // cs.g:536:9: ')'
            	        {
            	        	Match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments3810); if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:537:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
            	        {
            	        	// cs.g:537:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
            	        	// cs.g:537:9: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
            	        	{
            	        		PushFollow(FOLLOW_positional_argument_in_attribute_arguments3830);
            	        		positional_argument();
            	        		state._fsp--;
            	        		if (state.failed) return ;
            	        		// cs.g:537:31: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
            	        		do 
            	        		{
            	        		    int alt141 = 3;
            	        		    int LA141_0 = input.LA(1);

            	        		    if ( (LA141_0 == IDENTIFIER || LA141_0 == 65 || (LA141_0 >= 132 && LA141_0 <= 133) || (LA141_0 >= 135 && LA141_0 <= 148) || (LA141_0 >= 150 && LA141_0 <= 152) || LA141_0 == 154 || (LA141_0 >= 157 && LA141_0 <= 159) || LA141_0 == 170 || (LA141_0 >= 177 && LA141_0 <= 178) || LA141_0 == 195 || LA141_0 == 202) && (synpred24_cs()) )
            	        		    {
            	        		        alt141 = 1;
            	        		    }
            	        		    else if ( (LA141_0 == 89) )
            	        		    {
            	        		        alt141 = 2;
            	        		    }


            	        		    switch (alt141) 
            	        			{
            	        				case 1 :
            	        				    // cs.g:537:32: ( ',' identifier '=' )=> named_argument
            	        				    {
            	        				    	PushFollow(FOLLOW_named_argument_in_attribute_arguments3849);
            	        				    	named_argument();
            	        				    	state._fsp--;
            	        				    	if (state.failed) return ;

            	        				    }
            	        				    break;
            	        				case 2 :
            	        				    // cs.g:538:15: ',' positional_argument
            	        				    {
            	        				    	Match(input,89,FOLLOW_89_in_attribute_arguments3865); if (state.failed) return ;
            	        				    	PushFollow(FOLLOW_positional_argument_in_attribute_arguments3867);
            	        				    	positional_argument();
            	        				    	state._fsp--;
            	        				    	if (state.failed) return ;

            	        				    }
            	        				    break;

            	        				default:
            	        				    goto loop141;
            	        		    }
            	        		} while (true);

            	        		loop141:
            	        			;	// Stops C# compiler whining that label 'loop141' has no statements


            	        	}

            	        	Match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments3878); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 144, attribute_arguments_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute_arguments"


    // $ANTLR start "positional_argument_list"
    // cs.g:541:1: positional_argument_list : positional_argument ( ',' positional_argument )* ;
    public void positional_argument_list() // throws RecognitionException [1]
    {   
        int positional_argument_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 145) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:541:25: ( positional_argument ( ',' positional_argument )* )
            // cs.g:542:2: positional_argument ( ',' positional_argument )*
            {
            	PushFollow(FOLLOW_positional_argument_in_positional_argument_list3892);
            	positional_argument();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:542:22: ( ',' positional_argument )*
            	do 
            	{
            	    int alt143 = 2;
            	    int LA143_0 = input.LA(1);

            	    if ( (LA143_0 == 89) )
            	    {
            	        alt143 = 1;
            	    }


            	    switch (alt143) 
            		{
            			case 1 :
            			    // cs.g:542:23: ',' positional_argument
            			    {
            			    	Match(input,89,FOLLOW_89_in_positional_argument_list3895); if (state.failed) return ;
            			    	PushFollow(FOLLOW_positional_argument_in_positional_argument_list3897);
            			    	positional_argument();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop143;
            	    }
            	} while (true);

            	loop143:
            		;	// Stops C# compiler whining that label 'loop143' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 145, positional_argument_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "positional_argument_list"


    // $ANTLR start "positional_argument"
    // cs.g:543:1: positional_argument : attribute_argument_expression ;
    public void positional_argument() // throws RecognitionException [1]
    {   
        int positional_argument_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 146) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:543:20: ( attribute_argument_expression )
            // cs.g:544:2: attribute_argument_expression
            {
            	PushFollow(FOLLOW_attribute_argument_expression_in_positional_argument3908);
            	attribute_argument_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 146, positional_argument_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "positional_argument"


    // $ANTLR start "named_argument_list"
    // cs.g:545:1: named_argument_list : named_argument ( ',' named_argument )* ;
    public void named_argument_list() // throws RecognitionException [1]
    {   
        int named_argument_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 147) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:545:20: ( named_argument ( ',' named_argument )* )
            // cs.g:546:2: named_argument ( ',' named_argument )*
            {
            	PushFollow(FOLLOW_named_argument_in_named_argument_list3917);
            	named_argument();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:546:17: ( ',' named_argument )*
            	do 
            	{
            	    int alt144 = 2;
            	    int LA144_0 = input.LA(1);

            	    if ( (LA144_0 == 89) )
            	    {
            	        alt144 = 1;
            	    }


            	    switch (alt144) 
            		{
            			case 1 :
            			    // cs.g:546:18: ',' named_argument
            			    {
            			    	Match(input,89,FOLLOW_89_in_named_argument_list3920); if (state.failed) return ;
            			    	PushFollow(FOLLOW_named_argument_in_named_argument_list3922);
            			    	named_argument();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop144;
            	    }
            	} while (true);

            	loop144:
            		;	// Stops C# compiler whining that label 'loop144' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 147, named_argument_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "named_argument_list"


    // $ANTLR start "named_argument"
    // cs.g:547:1: named_argument : identifier '=' attribute_argument_expression ;
    public void named_argument() // throws RecognitionException [1]
    {   
        int named_argument_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 148) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:547:15: ( identifier '=' attribute_argument_expression )
            // cs.g:548:2: identifier '=' attribute_argument_expression
            {
            	PushFollow(FOLLOW_identifier_in_named_argument3933);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,66,FOLLOW_66_in_named_argument3937); if (state.failed) return ;
            	PushFollow(FOLLOW_attribute_argument_expression_in_named_argument3941);
            	attribute_argument_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 148, named_argument_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "named_argument"


    // $ANTLR start "attribute_argument_expression"
    // cs.g:549:1: attribute_argument_expression : expression ;
    public void attribute_argument_expression() // throws RecognitionException [1]
    {   
        int attribute_argument_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 149) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:549:30: ( expression )
            // cs.g:550:2: expression
            {
            	PushFollow(FOLLOW_expression_in_attribute_argument_expression3950);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 149, attribute_argument_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "attribute_argument_expression"


    // $ANTLR start "class_declaration"
    // cs.g:556:1: class_declaration : 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? ;
    public void class_declaration() // throws RecognitionException [1]
    {   
        int class_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 150) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:556:18: ( 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? )
            // cs.g:557:2: 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )?
            {
            	Match(input,155,FOLLOW_155_in_class_declaration3963); if (state.failed) return ;
            	PushFollow(FOLLOW_type_or_generic_in_class_declaration3966);
            	type_or_generic();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:557:29: ( class_base )?
            	int alt145 = 2;
            	int LA145_0 = input.LA(1);

            	if ( (LA145_0 == 90) )
            	{
            	    alt145 = 1;
            	}
            	switch (alt145) 
            	{
            	    case 1 :
            	        // cs.g:557:29: class_base
            	        {
            	        	PushFollow(FOLLOW_class_base_in_class_declaration3970);
            	        	class_base();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:557:43: ( type_parameter_constraints_clauses )?
            	int alt146 = 2;
            	int LA146_0 = input.LA(1);

            	if ( (LA146_0 == 145) )
            	{
            	    alt146 = 1;
            	}
            	switch (alt146) 
            	{
            	    case 1 :
            	        // cs.g:557:43: type_parameter_constraints_clauses
            	        {
            	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_declaration3975);
            	        	type_parameter_constraints_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_class_body_in_class_declaration3980);
            	class_body();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:557:94: ( ';' )?
            	int alt147 = 2;
            	int LA147_0 = input.LA(1);

            	if ( (LA147_0 == SEMI) )
            	{
            	    alt147 = 1;
            	}
            	switch (alt147) 
            	{
            	    case 1 :
            	        // cs.g:557:94: ';'
            	        {
            	        	Match(input,SEMI,FOLLOW_SEMI_in_class_declaration3984); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 150, class_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "class_declaration"


    // $ANTLR start "class_base"
    // cs.g:558:1: class_base : ':' interface_type_list ;
    public void class_base() // throws RecognitionException [1]
    {   
        int class_base_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 151) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:558:11: ( ':' interface_type_list )
            // cs.g:561:2: ':' interface_type_list
            {
            	Match(input,90,FOLLOW_90_in_class_base3997); if (state.failed) return ;
            	PushFollow(FOLLOW_interface_type_list_in_class_base4001);
            	interface_type_list();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 151, class_base_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "class_base"


    // $ANTLR start "interface_type_list"
    // cs.g:563:1: interface_type_list : type ( ',' type )* ;
    public void interface_type_list() // throws RecognitionException [1]
    {   
        int interface_type_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 152) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:563:20: ( type ( ',' type )* )
            // cs.g:564:2: type ( ',' type )*
            {
            	PushFollow(FOLLOW_type_in_interface_type_list4011);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:564:7: ( ',' type )*
            	do 
            	{
            	    int alt148 = 2;
            	    int LA148_0 = input.LA(1);

            	    if ( (LA148_0 == 89) )
            	    {
            	        alt148 = 1;
            	    }


            	    switch (alt148) 
            		{
            			case 1 :
            			    // cs.g:564:8: ',' type
            			    {
            			    	Match(input,89,FOLLOW_89_in_interface_type_list4014); if (state.failed) return ;
            			    	PushFollow(FOLLOW_type_in_interface_type_list4018);
            			    	type();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop148;
            	    }
            	} while (true);

            	loop148:
            		;	// Stops C# compiler whining that label 'loop148' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 152, interface_type_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_type_list"


    // $ANTLR start "class_body"
    // cs.g:566:1: class_body : '{' ( class_member_declarations )? '}' ;
    public void class_body() // throws RecognitionException [1]
    {   
        int class_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 153) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:566:11: ( '{' ( class_member_declarations )? '}' )
            // cs.g:567:2: '{' ( class_member_declarations )? '}'
            {
            	Match(input,62,FOLLOW_62_in_class_body4029); if (state.failed) return ;
            	// cs.g:567:8: ( class_member_declarations )?
            	int alt149 = 2;
            	int LA149_0 = input.LA(1);

            	if ( (LA149_0 == IDENTIFIER || LA149_0 == ENUM || (LA149_0 >= 64 && LA149_0 <= 65) || (LA149_0 >= 67 && LA149_0 <= 82) || LA149_0 == 86 || LA149_0 == 97 || LA149_0 == 106 || (LA149_0 >= 132 && LA149_0 <= 133) || (LA149_0 >= 135 && LA149_0 <= 152) || (LA149_0 >= 154 && LA149_0 <= 155) || (LA149_0 >= 157 && LA149_0 <= 170) || LA149_0 == 172 || (LA149_0 >= 174 && LA149_0 <= 175) || (LA149_0 >= 177 && LA149_0 <= 178) || (LA149_0 >= 195 && LA149_0 <= 202)) )
            	{
            	    alt149 = 1;
            	}
            	switch (alt149) 
            	{
            	    case 1 :
            	        // cs.g:567:8: class_member_declarations
            	        {
            	        	PushFollow(FOLLOW_class_member_declarations_in_class_body4033);
            	        	class_member_declarations();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_class_body4038); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 153, class_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "class_body"


    // $ANTLR start "class_member_declarations"
    // cs.g:568:1: class_member_declarations : ( class_member_declaration )+ ;
    public void class_member_declarations() // throws RecognitionException [1]
    {   
        int class_member_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 154) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:568:26: ( ( class_member_declaration )+ )
            // cs.g:569:2: ( class_member_declaration )+
            {
            	// cs.g:569:2: ( class_member_declaration )+
            	int cnt150 = 0;
            	do 
            	{
            	    int alt150 = 2;
            	    int LA150_0 = input.LA(1);

            	    if ( (LA150_0 == IDENTIFIER || LA150_0 == ENUM || (LA150_0 >= 64 && LA150_0 <= 65) || (LA150_0 >= 67 && LA150_0 <= 82) || LA150_0 == 86 || LA150_0 == 97 || LA150_0 == 106 || (LA150_0 >= 132 && LA150_0 <= 133) || (LA150_0 >= 135 && LA150_0 <= 152) || (LA150_0 >= 154 && LA150_0 <= 155) || (LA150_0 >= 157 && LA150_0 <= 170) || LA150_0 == 172 || (LA150_0 >= 174 && LA150_0 <= 175) || (LA150_0 >= 177 && LA150_0 <= 178) || (LA150_0 >= 195 && LA150_0 <= 202)) )
            	    {
            	        alt150 = 1;
            	    }


            	    switch (alt150) 
            		{
            			case 1 :
            			    // cs.g:569:2: class_member_declaration
            			    {
            			    	PushFollow(FOLLOW_class_member_declaration_in_class_member_declarations4046);
            			    	class_member_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt150 >= 1 ) goto loop150;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee150 =
            		                new EarlyExitException(150, input);
            		            throw eee150;
            	    }
            	    cnt150++;
            	} while (true);

            	loop150:
            		;	// Stops C# compiler whining that label 'loop150' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 154, class_member_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "class_member_declarations"


    // $ANTLR start "constant_declaration"
    // cs.g:572:1: constant_declaration : 'const' type constant_declarators ';' ;
    public void constant_declaration() // throws RecognitionException [1]
    {   
        int constant_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 155) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:572:21: ( 'const' type constant_declarators ';' )
            // cs.g:573:2: 'const' type constant_declarators ';'
            {
            	Match(input,81,FOLLOW_81_in_constant_declaration4057); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_constant_declaration4061);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_constant_declarators_in_constant_declaration4065);
            	constant_declarators();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_constant_declaration4069); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 155, constant_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constant_declaration"


    // $ANTLR start "constant_declarators"
    // cs.g:574:1: constant_declarators : constant_declarator ( ',' constant_declarator )* ;
    public void constant_declarators() // throws RecognitionException [1]
    {   
        int constant_declarators_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 156) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:574:21: ( constant_declarator ( ',' constant_declarator )* )
            // cs.g:575:2: constant_declarator ( ',' constant_declarator )*
            {
            	PushFollow(FOLLOW_constant_declarator_in_constant_declarators4077);
            	constant_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:575:22: ( ',' constant_declarator )*
            	do 
            	{
            	    int alt151 = 2;
            	    int LA151_0 = input.LA(1);

            	    if ( (LA151_0 == 89) )
            	    {
            	        alt151 = 1;
            	    }


            	    switch (alt151) 
            		{
            			case 1 :
            			    // cs.g:575:23: ',' constant_declarator
            			    {
            			    	Match(input,89,FOLLOW_89_in_constant_declarators4080); if (state.failed) return ;
            			    	PushFollow(FOLLOW_constant_declarator_in_constant_declarators4082);
            			    	constant_declarator();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop151;
            	    }
            	} while (true);

            	loop151:
            		;	// Stops C# compiler whining that label 'loop151' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 156, constant_declarators_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constant_declarators"


    // $ANTLR start "constant_declarator"
    // cs.g:576:1: constant_declarator : identifier ( '=' constant_expression )? ;
    public void constant_declarator() // throws RecognitionException [1]
    {   
        int constant_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 157) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:576:20: ( identifier ( '=' constant_expression )? )
            // cs.g:577:2: identifier ( '=' constant_expression )?
            {
            	PushFollow(FOLLOW_identifier_in_constant_declarator4092);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:577:15: ( '=' constant_expression )?
            	int alt152 = 2;
            	int LA152_0 = input.LA(1);

            	if ( (LA152_0 == 66) )
            	{
            	    alt152 = 1;
            	}
            	switch (alt152) 
            	{
            	    case 1 :
            	        // cs.g:577:16: '=' constant_expression
            	        {
            	        	Match(input,66,FOLLOW_66_in_constant_declarator4097); if (state.failed) return ;
            	        	PushFollow(FOLLOW_constant_expression_in_constant_declarator4101);
            	        	constant_expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 157, constant_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constant_declarator"


    // $ANTLR start "constant_expression"
    // cs.g:578:1: constant_expression : expression ;
    public void constant_expression() // throws RecognitionException [1]
    {   
        int constant_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 158) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:578:20: ( expression )
            // cs.g:579:2: expression
            {
            	PushFollow(FOLLOW_expression_in_constant_expression4111);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 158, constant_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constant_expression"


    // $ANTLR start "field_declaration"
    // cs.g:582:1: field_declaration : variable_declarators ';' ;
    public void field_declaration() // throws RecognitionException [1]
    {   
        int field_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 159) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:582:18: ( variable_declarators ';' )
            // cs.g:583:2: variable_declarators ';'
            {
            	PushFollow(FOLLOW_variable_declarators_in_field_declaration4120);
            	variable_declarators();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_field_declaration4124); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 159, field_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "field_declaration"


    // $ANTLR start "variable_declarators"
    // cs.g:584:1: variable_declarators : variable_declarator ( ',' variable_declarator )* ;
    public void variable_declarators() // throws RecognitionException [1]
    {   
        int variable_declarators_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 160) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:584:21: ( variable_declarator ( ',' variable_declarator )* )
            // cs.g:585:2: variable_declarator ( ',' variable_declarator )*
            {
            	PushFollow(FOLLOW_variable_declarator_in_variable_declarators4132);
            	variable_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:585:22: ( ',' variable_declarator )*
            	do 
            	{
            	    int alt153 = 2;
            	    int LA153_0 = input.LA(1);

            	    if ( (LA153_0 == 89) )
            	    {
            	        alt153 = 1;
            	    }


            	    switch (alt153) 
            		{
            			case 1 :
            			    // cs.g:585:23: ',' variable_declarator
            			    {
            			    	Match(input,89,FOLLOW_89_in_variable_declarators4135); if (state.failed) return ;
            			    	PushFollow(FOLLOW_variable_declarator_in_variable_declarators4139);
            			    	variable_declarator();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop153;
            	    }
            	} while (true);

            	loop153:
            		;	// Stops C# compiler whining that label 'loop153' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 160, variable_declarators_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variable_declarators"


    // $ANTLR start "variable_declarator"
    // cs.g:586:1: variable_declarator : type_name ( '=' variable_initializer )? ;
    public void variable_declarator() // throws RecognitionException [1]
    {   
        int variable_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 161) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:586:20: ( type_name ( '=' variable_initializer )? )
            // cs.g:587:2: type_name ( '=' variable_initializer )?
            {
            	PushFollow(FOLLOW_type_name_in_variable_declarator4149);
            	type_name();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:587:12: ( '=' variable_initializer )?
            	int alt154 = 2;
            	int LA154_0 = input.LA(1);

            	if ( (LA154_0 == 66) )
            	{
            	    alt154 = 1;
            	}
            	switch (alt154) 
            	{
            	    case 1 :
            	        // cs.g:587:13: '=' variable_initializer
            	        {
            	        	Match(input,66,FOLLOW_66_in_variable_declarator4152); if (state.failed) return ;
            	        	PushFollow(FOLLOW_variable_initializer_in_variable_declarator4156);
            	        	variable_initializer();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 161, variable_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variable_declarator"


    // $ANTLR start "method_declaration"
    // cs.g:590:1: method_declaration : method_header method_body ;
    public void method_declaration() // throws RecognitionException [1]
    {   
        int method_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 162) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:590:19: ( method_header method_body )
            // cs.g:591:2: method_header method_body
            {
            	PushFollow(FOLLOW_method_header_in_method_declaration4170);
            	method_header();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_method_body_in_method_declaration4174);
            	method_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 162, method_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "method_declaration"


    // $ANTLR start "method_header"
    // cs.g:592:1: method_header : member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ;
    public void method_header() // throws RecognitionException [1]
    {   
        int method_header_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 163) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:592:14: ( member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? )
            // cs.g:593:2: member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )?
            {
            	PushFollow(FOLLOW_member_name_in_method_header4182);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_method_header4185); if (state.failed) return ;
            	// cs.g:593:21: ( formal_parameter_list )?
            	int alt155 = 2;
            	int LA155_0 = input.LA(1);

            	if ( (LA155_0 == IDENTIFIER || LA155_0 == 65 || (LA155_0 >= 82 && LA155_0 <= 83) || LA155_0 == 86 || (LA155_0 >= 91 && LA155_0 <= 92) || (LA155_0 >= 132 && LA155_0 <= 133) || (LA155_0 >= 135 && LA155_0 <= 148) || (LA155_0 >= 150 && LA155_0 <= 152) || LA155_0 == 154 || (LA155_0 >= 157 && LA155_0 <= 168) || (LA155_0 >= 170 && LA155_0 <= 171) || (LA155_0 >= 177 && LA155_0 <= 178) || (LA155_0 >= 195 && LA155_0 <= 202)) )
            	{
            	    alt155 = 1;
            	}
            	switch (alt155) 
            	{
            	    case 1 :
            	        // cs.g:593:21: formal_parameter_list
            	        {
            	        	PushFollow(FOLLOW_formal_parameter_list_in_method_header4189);
            	        	formal_parameter_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_method_header4194); if (state.failed) return ;
            	// cs.g:593:52: ( type_parameter_constraints_clauses )?
            	int alt156 = 2;
            	int LA156_0 = input.LA(1);

            	if ( (LA156_0 == 145) )
            	{
            	    alt156 = 1;
            	}
            	switch (alt156) 
            	{
            	    case 1 :
            	        // cs.g:593:52: type_parameter_constraints_clauses
            	        {
            	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_method_header4198);
            	        	type_parameter_constraints_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 163, method_header_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "method_header"


    // $ANTLR start "method_body"
    // cs.g:594:1: method_body : block ;
    public void method_body() // throws RecognitionException [1]
    {   
        int method_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 164) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:594:12: ( block )
            // cs.g:595:2: block
            {
            	PushFollow(FOLLOW_block_in_method_body4207);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 164, method_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "method_body"


    // $ANTLR start "member_name"
    // cs.g:596:1: member_name : qid ;
    public void member_name() // throws RecognitionException [1]
    {   
        int member_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 165) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:596:12: ( qid )
            // cs.g:597:2: qid
            {
            	PushFollow(FOLLOW_qid_in_member_name4215);
            	qid();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 165, member_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "member_name"


    // $ANTLR start "property_declaration"
    // cs.g:600:1: property_declaration : member_name '{' accessor_declarations '}' ;
    public void property_declaration() // throws RecognitionException [1]
    {   
        int property_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 166) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:600:21: ( member_name '{' accessor_declarations '}' )
            // cs.g:601:2: member_name '{' accessor_declarations '}'
            {
            	PushFollow(FOLLOW_member_name_in_property_declaration4227);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,62,FOLLOW_62_in_property_declaration4231); if (state.failed) return ;
            	PushFollow(FOLLOW_accessor_declarations_in_property_declaration4235);
            	accessor_declarations();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,63,FOLLOW_63_in_property_declaration4239); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 166, property_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "property_declaration"


    // $ANTLR start "accessor_declarations"
    // cs.g:602:1: accessor_declarations : ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) ;
    public void accessor_declarations() // throws RecognitionException [1]
    {   
        int accessor_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 167) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:602:22: ( ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) )
            // cs.g:603:2: ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
            {
            	// cs.g:603:2: ( attributes )?
            	int alt157 = 2;
            	int LA157_0 = input.LA(1);

            	if ( (LA157_0 == 86) )
            	{
            	    alt157 = 1;
            	}
            	switch (alt157) 
            	{
            	    case 1 :
            	        // cs.g:603:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_accessor_declarations4247);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:604:3: ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
            	int alt162 = 2;
            	switch ( input.LA(1) ) 
            	{
            	case 69:
            	case 70:
            	case 71:
            	case 72:
            		{
            	    int LA162_1 = input.LA(2);

            	    if ( (LA162_1 == 156) )
            	    {
            	        alt162 = 1;
            	    }
            	    else if ( (LA162_1 == 157) )
            	    {
            	        alt162 = 2;
            	    }
            	    else 
            	    {
            	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        NoViableAltException nvae_d162s1 =
            	            new NoViableAltException("", 162, 1, input);

            	        throw nvae_d162s1;
            	    }
            	    }
            	    break;
            	case 156:
            		{
            	    alt162 = 1;
            	    }
            	    break;
            	case 157:
            		{
            	    alt162 = 2;
            	    }
            	    break;
            		default:
            		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		    NoViableAltException nvae_d162s0 =
            		        new NoViableAltException("", 162, 0, input);

            		    throw nvae_d162s0;
            	}

            	switch (alt162) 
            	{
            	    case 1 :
            	        // cs.g:604:4: get_accessor_declaration ( attributes )? ( set_accessor_declaration )?
            	        {
            	        	PushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations4253);
            	        	get_accessor_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:604:31: ( attributes )?
            	        	int alt158 = 2;
            	        	int LA158_0 = input.LA(1);

            	        	if ( (LA158_0 == 86) )
            	        	{
            	        	    alt158 = 1;
            	        	}
            	        	switch (alt158) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:604:31: attributes
            	        	        {
            	        	        	PushFollow(FOLLOW_attributes_in_accessor_declarations4257);
            	        	        	attributes();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}

            	        	// cs.g:604:45: ( set_accessor_declaration )?
            	        	int alt159 = 2;
            	        	int LA159_0 = input.LA(1);

            	        	if ( ((LA159_0 >= 69 && LA159_0 <= 72) || LA159_0 == 157) )
            	        	{
            	        	    alt159 = 1;
            	        	}
            	        	switch (alt159) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:604:45: set_accessor_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations4262);
            	        	        	set_accessor_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:605:5: set_accessor_declaration ( attributes )? ( get_accessor_declaration )?
            	        {
            	        	PushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations4269);
            	        	set_accessor_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:605:32: ( attributes )?
            	        	int alt160 = 2;
            	        	int LA160_0 = input.LA(1);

            	        	if ( (LA160_0 == 86) )
            	        	{
            	        	    alt160 = 1;
            	        	}
            	        	switch (alt160) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:605:32: attributes
            	        	        {
            	        	        	PushFollow(FOLLOW_attributes_in_accessor_declarations4273);
            	        	        	attributes();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}

            	        	// cs.g:605:46: ( get_accessor_declaration )?
            	        	int alt161 = 2;
            	        	int LA161_0 = input.LA(1);

            	        	if ( ((LA161_0 >= 69 && LA161_0 <= 72) || LA161_0 == 156) )
            	        	{
            	        	    alt161 = 1;
            	        	}
            	        	switch (alt161) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:605:46: get_accessor_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations4278);
            	        	        	get_accessor_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 167, accessor_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "accessor_declarations"


    // $ANTLR start "get_accessor_declaration"
    // cs.g:606:1: get_accessor_declaration : ( accessor_modifier )? 'get' accessor_body ;
    public void get_accessor_declaration() // throws RecognitionException [1]
    {   
        int get_accessor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 168) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:606:25: ( ( accessor_modifier )? 'get' accessor_body )
            // cs.g:607:2: ( accessor_modifier )? 'get' accessor_body
            {
            	// cs.g:607:2: ( accessor_modifier )?
            	int alt163 = 2;
            	int LA163_0 = input.LA(1);

            	if ( ((LA163_0 >= 69 && LA163_0 <= 72)) )
            	{
            	    alt163 = 1;
            	}
            	switch (alt163) 
            	{
            	    case 1 :
            	        // cs.g:607:2: accessor_modifier
            	        {
            	        	PushFollow(FOLLOW_accessor_modifier_in_get_accessor_declaration4288);
            	        	accessor_modifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,156,FOLLOW_156_in_get_accessor_declaration4293); if (state.failed) return ;
            	PushFollow(FOLLOW_accessor_body_in_get_accessor_declaration4297);
            	accessor_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 168, get_accessor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "get_accessor_declaration"


    // $ANTLR start "set_accessor_declaration"
    // cs.g:608:1: set_accessor_declaration : ( accessor_modifier )? 'set' accessor_body ;
    public void set_accessor_declaration() // throws RecognitionException [1]
    {   
        int set_accessor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 169) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:608:25: ( ( accessor_modifier )? 'set' accessor_body )
            // cs.g:609:2: ( accessor_modifier )? 'set' accessor_body
            {
            	// cs.g:609:2: ( accessor_modifier )?
            	int alt164 = 2;
            	int LA164_0 = input.LA(1);

            	if ( ((LA164_0 >= 69 && LA164_0 <= 72)) )
            	{
            	    alt164 = 1;
            	}
            	switch (alt164) 
            	{
            	    case 1 :
            	        // cs.g:609:2: accessor_modifier
            	        {
            	        	PushFollow(FOLLOW_accessor_modifier_in_set_accessor_declaration4305);
            	        	accessor_modifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,157,FOLLOW_157_in_set_accessor_declaration4310); if (state.failed) return ;
            	PushFollow(FOLLOW_accessor_body_in_set_accessor_declaration4314);
            	accessor_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 169, set_accessor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "set_accessor_declaration"


    // $ANTLR start "accessor_modifier"
    // cs.g:610:1: accessor_modifier : ( 'public' | 'protected' | 'private' | 'internal' );
    public void accessor_modifier() // throws RecognitionException [1]
    {   
        int accessor_modifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 170) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:610:18: ( 'public' | 'protected' | 'private' | 'internal' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 69 && input.LA(1) <= 72) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 170, accessor_modifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "accessor_modifier"


    // $ANTLR start "accessor_body"
    // cs.g:612:1: accessor_body : block ;
    public void accessor_body() // throws RecognitionException [1]
    {   
        int accessor_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 171) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:612:14: ( block )
            // cs.g:613:2: block
            {
            	PushFollow(FOLLOW_block_in_accessor_body4342);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 171, accessor_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "accessor_body"


    // $ANTLR start "event_declaration"
    // cs.g:616:1: event_declaration : 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) ;
    public void event_declaration() // throws RecognitionException [1]
    {   
        int event_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 172) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:616:18: ( 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) )
            // cs.g:617:2: 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
            {
            	Match(input,149,FOLLOW_149_in_event_declaration4352); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_event_declaration4356);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:618:3: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
            	int alt165 = 2;
            	int LA165_0 = input.LA(1);

            	if ( ((LA165_0 >= 160 && LA165_0 <= 168) || (LA165_0 >= 196 && LA165_0 <= 201)) && (synpred25_cs()) )
            	{
            	    alt165 = 1;
            	}
            	else if ( (LA165_0 == IDENTIFIER || LA165_0 == 65 || (LA165_0 >= 132 && LA165_0 <= 133) || (LA165_0 >= 135 && LA165_0 <= 148) || (LA165_0 >= 150 && LA165_0 <= 152) || LA165_0 == 154 || (LA165_0 >= 157 && LA165_0 <= 159) || LA165_0 == 170 || (LA165_0 >= 177 && LA165_0 <= 178) || LA165_0 == 195 || LA165_0 == 202) )
            	{
            	    int LA165_2 = input.LA(2);

            	    if ( (synpred25_cs()) )
            	    {
            	        alt165 = 1;
            	    }
            	    else if ( (true) )
            	    {
            	        alt165 = 2;
            	    }
            	    else 
            	    {
            	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        NoViableAltException nvae_d165s2 =
            	            new NoViableAltException("", 165, 2, input);

            	        throw nvae_d165s2;
            	    }
            	}
            	else if ( ((LA165_0 >= Real_literal && LA165_0 <= NULL)) && (synpred25_cs()) )
            	{
            	    alt165 = 1;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d165s0 =
            	        new NoViableAltException("", 165, 0, input);

            	    throw nvae_d165s0;
            	}
            	switch (alt165) 
            	{
            	    case 1 :
            	        // cs.g:618:4: ( member_name '{' )=> member_name '{' event_accessor_declarations '}'
            	        {
            	        	PushFollow(FOLLOW_member_name_in_event_declaration4371);
            	        	member_name();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,62,FOLLOW_62_in_event_declaration4375); if (state.failed) return ;
            	        	PushFollow(FOLLOW_event_accessor_declarations_in_event_declaration4379);
            	        	event_accessor_declarations();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,63,FOLLOW_63_in_event_declaration4383); if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:619:5: variable_declarators ';'
            	        {
            	        	PushFollow(FOLLOW_variable_declarators_in_event_declaration4389);
            	        	variable_declarators();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,SEMI,FOLLOW_SEMI_in_event_declaration4393); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 172, event_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "event_declaration"


    // $ANTLR start "event_modifiers"
    // cs.g:621:1: event_modifiers : ( modifier )+ ;
    public void event_modifiers() // throws RecognitionException [1]
    {   
        int event_modifiers_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 173) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:621:16: ( ( modifier )+ )
            // cs.g:622:2: ( modifier )+
            {
            	// cs.g:622:2: ( modifier )+
            	int cnt166 = 0;
            	do 
            	{
            	    int alt166 = 2;
            	    int LA166_0 = input.LA(1);

            	    if ( (LA166_0 == 64 || (LA166_0 >= 68 && LA166_0 <= 80)) )
            	    {
            	        alt166 = 1;
            	    }


            	    switch (alt166) 
            		{
            			case 1 :
            			    // cs.g:622:2: modifier
            			    {
            			    	PushFollow(FOLLOW_modifier_in_event_modifiers4405);
            			    	modifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt166 >= 1 ) goto loop166;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee166 =
            		                new EarlyExitException(166, input);
            		            throw eee166;
            	    }
            	    cnt166++;
            	} while (true);

            	loop166:
            		;	// Stops C# compiler whining that label 'loop166' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 173, event_modifiers_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "event_modifiers"


    // $ANTLR start "event_accessor_declarations"
    // cs.g:623:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
    public void event_accessor_declarations() // throws RecognitionException [1]
    {   
        int event_accessor_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 174) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:623:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
            // cs.g:624:2: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
            {
            	// cs.g:624:2: ( attributes )?
            	int alt167 = 2;
            	int LA167_0 = input.LA(1);

            	if ( (LA167_0 == 86) )
            	{
            	    alt167 = 1;
            	}
            	switch (alt167) 
            	{
            	    case 1 :
            	        // cs.g:624:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations4414);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:624:16: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
            	int alt170 = 2;
            	int LA170_0 = input.LA(1);

            	if ( (LA170_0 == 158) )
            	{
            	    alt170 = 1;
            	}
            	else if ( (LA170_0 == 159) )
            	{
            	    alt170 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d170s0 =
            	        new NoViableAltException("", 170, 0, input);

            	    throw nvae_d170s0;
            	}
            	switch (alt170) 
            	{
            	    case 1 :
            	        // cs.g:624:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
            	        {
            	        	// cs.g:624:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
            	        	// cs.g:624:18: add_accessor_declaration ( attributes )? remove_accessor_declaration
            	        	{
            	        		PushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations4421);
            	        		add_accessor_declaration();
            	        		state._fsp--;
            	        		if (state.failed) return ;
            	        		// cs.g:624:45: ( attributes )?
            	        		int alt168 = 2;
            	        		int LA168_0 = input.LA(1);

            	        		if ( (LA168_0 == 86) )
            	        		{
            	        		    alt168 = 1;
            	        		}
            	        		switch (alt168) 
            	        		{
            	        		    case 1 :
            	        		        // cs.g:624:45: attributes
            	        		        {
            	        		        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations4425);
            	        		        	attributes();
            	        		        	state._fsp--;
            	        		        	if (state.failed) return ;

            	        		        }
            	        		        break;

            	        		}

            	        		PushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations4430);
            	        		remove_accessor_declaration();
            	        		state._fsp--;
            	        		if (state.failed) return ;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:625:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
            	        {
            	        	// cs.g:625:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
            	        	// cs.g:625:19: remove_accessor_declaration ( attributes )? add_accessor_declaration
            	        	{
            	        		PushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations4451);
            	        		remove_accessor_declaration();
            	        		state._fsp--;
            	        		if (state.failed) return ;
            	        		// cs.g:625:49: ( attributes )?
            	        		int alt169 = 2;
            	        		int LA169_0 = input.LA(1);

            	        		if ( (LA169_0 == 86) )
            	        		{
            	        		    alt169 = 1;
            	        		}
            	        		switch (alt169) 
            	        		{
            	        		    case 1 :
            	        		        // cs.g:625:49: attributes
            	        		        {
            	        		        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations4455);
            	        		        	attributes();
            	        		        	state._fsp--;
            	        		        	if (state.failed) return ;

            	        		        }
            	        		        break;

            	        		}

            	        		PushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations4460);
            	        		add_accessor_declaration();
            	        		state._fsp--;
            	        		if (state.failed) return ;

            	        	}


            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 174, event_accessor_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "event_accessor_declarations"


    // $ANTLR start "add_accessor_declaration"
    // cs.g:626:1: add_accessor_declaration : 'add' block ;
    public void add_accessor_declaration() // throws RecognitionException [1]
    {   
        int add_accessor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 175) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:626:25: ( 'add' block )
            // cs.g:627:2: 'add' block
            {
            	Match(input,158,FOLLOW_158_in_add_accessor_declaration4470); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_add_accessor_declaration4474);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 175, add_accessor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "add_accessor_declaration"


    // $ANTLR start "remove_accessor_declaration"
    // cs.g:628:1: remove_accessor_declaration : 'remove' block ;
    public void remove_accessor_declaration() // throws RecognitionException [1]
    {   
        int remove_accessor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 176) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:628:28: ( 'remove' block )
            // cs.g:629:2: 'remove' block
            {
            	Match(input,159,FOLLOW_159_in_remove_accessor_declaration4482); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_remove_accessor_declaration4486);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 176, remove_accessor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "remove_accessor_declaration"


    // $ANTLR start "enum_declaration"
    // cs.g:634:1: enum_declaration : 'enum' identifier ( enum_base )? enum_body ( ';' )? ;
    public void enum_declaration() // throws RecognitionException [1]
    {   
        int enum_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 177) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:634:17: ( 'enum' identifier ( enum_base )? enum_body ( ';' )? )
            // cs.g:635:2: 'enum' identifier ( enum_base )? enum_body ( ';' )?
            {
            	Match(input,ENUM,FOLLOW_ENUM_in_enum_declaration4498); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_enum_declaration4502);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:635:24: ( enum_base )?
            	int alt171 = 2;
            	int LA171_0 = input.LA(1);

            	if ( (LA171_0 == 90) )
            	{
            	    alt171 = 1;
            	}
            	switch (alt171) 
            	{
            	    case 1 :
            	        // cs.g:635:24: enum_base
            	        {
            	        	PushFollow(FOLLOW_enum_base_in_enum_declaration4506);
            	        	enum_base();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_enum_body_in_enum_declaration4511);
            	enum_body();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:635:49: ( ';' )?
            	int alt172 = 2;
            	int LA172_0 = input.LA(1);

            	if ( (LA172_0 == SEMI) )
            	{
            	    alt172 = 1;
            	}
            	switch (alt172) 
            	{
            	    case 1 :
            	        // cs.g:635:49: ';'
            	        {
            	        	Match(input,SEMI,FOLLOW_SEMI_in_enum_declaration4515); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 177, enum_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "enum_declaration"


    // $ANTLR start "enum_base"
    // cs.g:636:1: enum_base : ':' integral_type ;
    public void enum_base() // throws RecognitionException [1]
    {   
        int enum_base_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 178) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:636:10: ( ':' integral_type )
            // cs.g:637:2: ':' integral_type
            {
            	Match(input,90,FOLLOW_90_in_enum_base4524); if (state.failed) return ;
            	PushFollow(FOLLOW_integral_type_in_enum_base4528);
            	integral_type();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 178, enum_base_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "enum_base"


    // $ANTLR start "enum_body"
    // cs.g:638:1: enum_body : '{' ( enum_member_declarations ( ',' )? )? '}' ;
    public void enum_body() // throws RecognitionException [1]
    {   
        int enum_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 179) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:638:10: ( '{' ( enum_member_declarations ( ',' )? )? '}' )
            // cs.g:639:2: '{' ( enum_member_declarations ( ',' )? )? '}'
            {
            	Match(input,62,FOLLOW_62_in_enum_body4536); if (state.failed) return ;
            	// cs.g:639:6: ( enum_member_declarations ( ',' )? )?
            	int alt174 = 2;
            	int LA174_0 = input.LA(1);

            	if ( (LA174_0 == IDENTIFIER || LA174_0 == 65 || LA174_0 == 86 || (LA174_0 >= 132 && LA174_0 <= 133) || (LA174_0 >= 135 && LA174_0 <= 148) || (LA174_0 >= 150 && LA174_0 <= 152) || LA174_0 == 154 || (LA174_0 >= 157 && LA174_0 <= 159) || LA174_0 == 170 || (LA174_0 >= 177 && LA174_0 <= 178) || LA174_0 == 195 || LA174_0 == 202) )
            	{
            	    alt174 = 1;
            	}
            	switch (alt174) 
            	{
            	    case 1 :
            	        // cs.g:639:7: enum_member_declarations ( ',' )?
            	        {
            	        	PushFollow(FOLLOW_enum_member_declarations_in_enum_body4539);
            	        	enum_member_declarations();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:639:32: ( ',' )?
            	        	int alt173 = 2;
            	        	int LA173_0 = input.LA(1);

            	        	if ( (LA173_0 == 89) )
            	        	{
            	        	    alt173 = 1;
            	        	}
            	        	switch (alt173) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:639:32: ','
            	        	        {
            	        	        	Match(input,89,FOLLOW_89_in_enum_body4541); if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_enum_body4548); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 179, enum_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "enum_body"


    // $ANTLR start "enum_member_declarations"
    // cs.g:640:1: enum_member_declarations : enum_member_declaration ( ',' enum_member_declaration )* ;
    public void enum_member_declarations() // throws RecognitionException [1]
    {   
        int enum_member_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 180) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:640:25: ( enum_member_declaration ( ',' enum_member_declaration )* )
            // cs.g:641:2: enum_member_declaration ( ',' enum_member_declaration )*
            {
            	PushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations4556);
            	enum_member_declaration();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:641:26: ( ',' enum_member_declaration )*
            	do 
            	{
            	    int alt175 = 2;
            	    int LA175_0 = input.LA(1);

            	    if ( (LA175_0 == 89) )
            	    {
            	        int LA175_1 = input.LA(2);

            	        if ( (LA175_1 == IDENTIFIER || LA175_1 == 65 || LA175_1 == 86 || (LA175_1 >= 132 && LA175_1 <= 133) || (LA175_1 >= 135 && LA175_1 <= 148) || (LA175_1 >= 150 && LA175_1 <= 152) || LA175_1 == 154 || (LA175_1 >= 157 && LA175_1 <= 159) || LA175_1 == 170 || (LA175_1 >= 177 && LA175_1 <= 178) || LA175_1 == 195 || LA175_1 == 202) )
            	        {
            	            alt175 = 1;
            	        }


            	    }


            	    switch (alt175) 
            		{
            			case 1 :
            			    // cs.g:641:27: ',' enum_member_declaration
            			    {
            			    	Match(input,89,FOLLOW_89_in_enum_member_declarations4559); if (state.failed) return ;
            			    	PushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations4561);
            			    	enum_member_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop175;
            	    }
            	} while (true);

            	loop175:
            		;	// Stops C# compiler whining that label 'loop175' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 180, enum_member_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "enum_member_declarations"


    // $ANTLR start "enum_member_declaration"
    // cs.g:642:1: enum_member_declaration : ( attributes )? identifier ( '=' expression )? ;
    public void enum_member_declaration() // throws RecognitionException [1]
    {   
        int enum_member_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 181) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:642:24: ( ( attributes )? identifier ( '=' expression )? )
            // cs.g:643:2: ( attributes )? identifier ( '=' expression )?
            {
            	// cs.g:643:2: ( attributes )?
            	int alt176 = 2;
            	int LA176_0 = input.LA(1);

            	if ( (LA176_0 == 86) )
            	{
            	    alt176 = 1;
            	}
            	switch (alt176) 
            	{
            	    case 1 :
            	        // cs.g:643:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_enum_member_declaration4571);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_identifier_in_enum_member_declaration4576);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:643:29: ( '=' expression )?
            	int alt177 = 2;
            	int LA177_0 = input.LA(1);

            	if ( (LA177_0 == 66) )
            	{
            	    alt177 = 1;
            	}
            	switch (alt177) 
            	{
            	    case 1 :
            	        // cs.g:643:30: '=' expression
            	        {
            	        	Match(input,66,FOLLOW_66_in_enum_member_declaration4581); if (state.failed) return ;
            	        	PushFollow(FOLLOW_expression_in_enum_member_declaration4585);
            	        	expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 181, enum_member_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "enum_member_declaration"


    // $ANTLR start "integral_type"
    // cs.g:648:1: integral_type : ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' );
    public void integral_type() // throws RecognitionException [1]
    {   
        int integral_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 182) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:648:14: ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 160 && input.LA(1) <= 168) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 182, integral_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "integral_type"


    // $ANTLR start "delegate_declaration"
    // cs.g:652:1: delegate_declaration : 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
    public void delegate_declaration() // throws RecognitionException [1]
    {   
        int delegate_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 183) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:652:21: ( 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
            // cs.g:653:2: 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
            {
            	Match(input,97,FOLLOW_97_in_delegate_declaration4642); if (state.failed) return ;
            	PushFollow(FOLLOW_return_type_in_delegate_declaration4646);
            	return_type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_delegate_declaration4650);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:653:41: ( variant_generic_parameter_list )?
            	int alt178 = 2;
            	int LA178_0 = input.LA(1);

            	if ( (LA178_0 == 99) )
            	{
            	    alt178 = 1;
            	}
            	switch (alt178) 
            	{
            	    case 1 :
            	        // cs.g:653:41: variant_generic_parameter_list
            	        {
            	        	PushFollow(FOLLOW_variant_generic_parameter_list_in_delegate_declaration4653);
            	        	variant_generic_parameter_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,88,FOLLOW_88_in_delegate_declaration4661); if (state.failed) return ;
            	// cs.g:654:9: ( formal_parameter_list )?
            	int alt179 = 2;
            	int LA179_0 = input.LA(1);

            	if ( (LA179_0 == IDENTIFIER || LA179_0 == 65 || (LA179_0 >= 82 && LA179_0 <= 83) || LA179_0 == 86 || (LA179_0 >= 91 && LA179_0 <= 92) || (LA179_0 >= 132 && LA179_0 <= 133) || (LA179_0 >= 135 && LA179_0 <= 148) || (LA179_0 >= 150 && LA179_0 <= 152) || LA179_0 == 154 || (LA179_0 >= 157 && LA179_0 <= 168) || (LA179_0 >= 170 && LA179_0 <= 171) || (LA179_0 >= 177 && LA179_0 <= 178) || (LA179_0 >= 195 && LA179_0 <= 202)) )
            	{
            	    alt179 = 1;
            	}
            	switch (alt179) 
            	{
            	    case 1 :
            	        // cs.g:654:9: formal_parameter_list
            	        {
            	        	PushFollow(FOLLOW_formal_parameter_list_in_delegate_declaration4665);
            	        	formal_parameter_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_delegate_declaration4670); if (state.failed) return ;
            	// cs.g:654:40: ( type_parameter_constraints_clauses )?
            	int alt180 = 2;
            	int LA180_0 = input.LA(1);

            	if ( (LA180_0 == 145) )
            	{
            	    alt180 = 1;
            	}
            	switch (alt180) 
            	{
            	    case 1 :
            	        // cs.g:654:40: type_parameter_constraints_clauses
            	        {
            	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration4674);
            	        	type_parameter_constraints_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_delegate_declaration4679); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 183, delegate_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "delegate_declaration"


    // $ANTLR start "delegate_modifiers"
    // cs.g:655:1: delegate_modifiers : ( modifier )+ ;
    public void delegate_modifiers() // throws RecognitionException [1]
    {   
        int delegate_modifiers_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 184) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:655:19: ( ( modifier )+ )
            // cs.g:656:2: ( modifier )+
            {
            	// cs.g:656:2: ( modifier )+
            	int cnt181 = 0;
            	do 
            	{
            	    int alt181 = 2;
            	    int LA181_0 = input.LA(1);

            	    if ( (LA181_0 == 64 || (LA181_0 >= 68 && LA181_0 <= 80)) )
            	    {
            	        alt181 = 1;
            	    }


            	    switch (alt181) 
            		{
            			case 1 :
            			    // cs.g:656:2: modifier
            			    {
            			    	PushFollow(FOLLOW_modifier_in_delegate_modifiers4687);
            			    	modifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt181 >= 1 ) goto loop181;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee181 =
            		                new EarlyExitException(181, input);
            		            throw eee181;
            	    }
            	    cnt181++;
            	} while (true);

            	loop181:
            		;	// Stops C# compiler whining that label 'loop181' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 184, delegate_modifiers_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "delegate_modifiers"


    // $ANTLR start "variant_generic_parameter_list"
    // cs.g:658:1: variant_generic_parameter_list : '<' variant_type_parameters '>' ;
    public void variant_generic_parameter_list() // throws RecognitionException [1]
    {   
        int variant_generic_parameter_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 185) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:658:31: ( '<' variant_type_parameters '>' )
            // cs.g:659:2: '<' variant_type_parameters '>'
            {
            	Match(input,99,FOLLOW_99_in_variant_generic_parameter_list4697); if (state.failed) return ;
            	PushFollow(FOLLOW_variant_type_parameters_in_variant_generic_parameter_list4701);
            	variant_type_parameters();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,GT,FOLLOW_GT_in_variant_generic_parameter_list4705); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 185, variant_generic_parameter_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variant_generic_parameter_list"


    // $ANTLR start "variant_type_parameters"
    // cs.g:660:1: variant_type_parameters : variant_type_variable_name ( ',' variant_type_variable_name )* ;
    public void variant_type_parameters() // throws RecognitionException [1]
    {   
        int variant_type_parameters_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 186) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:660:24: ( variant_type_variable_name ( ',' variant_type_variable_name )* )
            // cs.g:661:2: variant_type_variable_name ( ',' variant_type_variable_name )*
            {
            	PushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters4713);
            	variant_type_variable_name();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:661:29: ( ',' variant_type_variable_name )*
            	do 
            	{
            	    int alt182 = 2;
            	    int LA182_0 = input.LA(1);

            	    if ( (LA182_0 == 89) )
            	    {
            	        alt182 = 1;
            	    }


            	    switch (alt182) 
            		{
            			case 1 :
            			    // cs.g:661:30: ',' variant_type_variable_name
            			    {
            			    	Match(input,89,FOLLOW_89_in_variant_type_parameters4716); if (state.failed) return ;
            			    	PushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters4718);
            			    	variant_type_variable_name();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop182;
            	    }
            	} while (true);

            	loop182:
            		;	// Stops C# compiler whining that label 'loop182' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 186, variant_type_parameters_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variant_type_parameters"


    // $ANTLR start "variant_type_variable_name"
    // cs.g:662:1: variant_type_variable_name : ( attributes )? ( variance_annotation )? type_variable_name ;
    public void variant_type_variable_name() // throws RecognitionException [1]
    {   
        int variant_type_variable_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 187) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:662:27: ( ( attributes )? ( variance_annotation )? type_variable_name )
            // cs.g:663:2: ( attributes )? ( variance_annotation )? type_variable_name
            {
            	// cs.g:663:2: ( attributes )?
            	int alt183 = 2;
            	int LA183_0 = input.LA(1);

            	if ( (LA183_0 == 86) )
            	{
            	    alt183 = 1;
            	}
            	switch (alt183) 
            	{
            	    case 1 :
            	        // cs.g:663:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_variant_type_variable_name4728);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:663:16: ( variance_annotation )?
            	int alt184 = 2;
            	int LA184_0 = input.LA(1);

            	if ( (LA184_0 == 91 || LA184_0 == 134) )
            	{
            	    alt184 = 1;
            	}
            	switch (alt184) 
            	{
            	    case 1 :
            	        // cs.g:663:16: variance_annotation
            	        {
            	        	PushFollow(FOLLOW_variance_annotation_in_variant_type_variable_name4733);
            	        	variance_annotation();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_type_variable_name_in_variant_type_variable_name4738);
            	type_variable_name();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 187, variant_type_variable_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variant_type_variable_name"


    // $ANTLR start "variance_annotation"
    // cs.g:664:1: variance_annotation : ( 'in' | 'out' );
    public void variance_annotation() // throws RecognitionException [1]
    {   
        int variance_annotation_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 188) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:664:20: ( 'in' | 'out' )
            // cs.g:
            {
            	if ( input.LA(1) == 91 || input.LA(1) == 134 ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 188, variance_annotation_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "variance_annotation"


    // $ANTLR start "type_parameter_constraints_clauses"
    // cs.g:667:1: type_parameter_constraints_clauses : type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* ;
    public void type_parameter_constraints_clauses() // throws RecognitionException [1]
    {   
        int type_parameter_constraints_clauses_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 189) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:667:35: ( type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* )
            // cs.g:668:2: type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )*
            {
            	PushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses4759);
            	type_parameter_constraints_clause();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:668:38: ( ',' type_parameter_constraints_clause )*
            	do 
            	{
            	    int alt185 = 2;
            	    int LA185_0 = input.LA(1);

            	    if ( (LA185_0 == 89) )
            	    {
            	        alt185 = 1;
            	    }


            	    switch (alt185) 
            		{
            			case 1 :
            			    // cs.g:668:39: ',' type_parameter_constraints_clause
            			    {
            			    	Match(input,89,FOLLOW_89_in_type_parameter_constraints_clauses4764); if (state.failed) return ;
            			    	PushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses4768);
            			    	type_parameter_constraints_clause();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop185;
            	    }
            	} while (true);

            	loop185:
            		;	// Stops C# compiler whining that label 'loop185' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 189, type_parameter_constraints_clauses_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_parameter_constraints_clauses"


    // $ANTLR start "type_parameter_constraints_clause"
    // cs.g:669:1: type_parameter_constraints_clause : 'where' type_variable_name ':' type_parameter_constraint_list ;
    public void type_parameter_constraints_clause() // throws RecognitionException [1]
    {   
        int type_parameter_constraints_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 190) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:669:34: ( 'where' type_variable_name ':' type_parameter_constraint_list )
            // cs.g:670:2: 'where' type_variable_name ':' type_parameter_constraint_list
            {
            	Match(input,145,FOLLOW_145_in_type_parameter_constraints_clause4778); if (state.failed) return ;
            	PushFollow(FOLLOW_type_variable_name_in_type_parameter_constraints_clause4782);
            	type_variable_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,90,FOLLOW_90_in_type_parameter_constraints_clause4786); if (state.failed) return ;
            	PushFollow(FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause4790);
            	type_parameter_constraint_list();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 190, type_parameter_constraints_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_parameter_constraints_clause"


    // $ANTLR start "type_parameter_constraint_list"
    // cs.g:672:1: type_parameter_constraint_list : ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint );
    public void type_parameter_constraint_list() // throws RecognitionException [1]
    {   
        int type_parameter_constraint_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 191) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:672:31: ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint )
            int alt189 = 3;
            switch ( input.LA(1) ) 
            {
            case 155:
            case 169:
            	{
                alt189 = 1;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
            	{
                alt189 = 2;
                }
                break;
            case 68:
            	{
                alt189 = 3;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d189s0 =
            	        new NoViableAltException("", 189, 0, input);

            	    throw nvae_d189s0;
            }

            switch (alt189) 
            {
                case 1 :
                    // cs.g:673:5: ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )?
                    {
                    	if ( input.LA(1) == 155 || input.LA(1) == 169 ) 
                    	{
                    	    input.Consume();
                    	    state.errorRecovery = false;state.failed = false;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    MismatchedSetException mse = new MismatchedSetException(null,input);
                    	    throw mse;
                    	}

                    	// cs.g:673:28: ( ',' secondary_constraint_list )?
                    	int alt186 = 2;
                    	int LA186_0 = input.LA(1);

                    	if ( (LA186_0 == 89) )
                    	{
                    	    int LA186_1 = input.LA(2);

                    	    if ( (LA186_1 == 145) )
                    	    {
                    	        int LA186_3 = input.LA(3);

                    	        if ( (LA186_3 == DOT || LA186_3 == SEMI || LA186_3 == 62 || LA186_3 == 84 || LA186_3 == 89 || LA186_3 == 99) )
                    	        {
                    	            alt186 = 1;
                    	        }
                    	    }
                    	    else if ( (LA186_1 == IDENTIFIER || LA186_1 == 65 || (LA186_1 >= 132 && LA186_1 <= 133) || (LA186_1 >= 135 && LA186_1 <= 144) || (LA186_1 >= 146 && LA186_1 <= 148) || (LA186_1 >= 150 && LA186_1 <= 152) || LA186_1 == 154 || (LA186_1 >= 157 && LA186_1 <= 159) || LA186_1 == 170 || (LA186_1 >= 177 && LA186_1 <= 178) || LA186_1 == 195 || LA186_1 == 202) )
                    	    {
                    	        alt186 = 1;
                    	    }
                    	}
                    	switch (alt186) 
                    	{
                    	    case 1 :
                    	        // cs.g:673:29: ',' secondary_constraint_list
                    	        {
                    	        	Match(input,89,FOLLOW_89_in_type_parameter_constraint_list4864); if (state.failed) return ;
                    	        	PushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list4868);
                    	        	secondary_constraint_list();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	// cs.g:673:65: ( ',' constructor_constraint )?
                    	int alt187 = 2;
                    	int LA187_0 = input.LA(1);

                    	if ( (LA187_0 == 89) )
                    	{
                    	    int LA187_1 = input.LA(2);

                    	    if ( (LA187_1 == 68) )
                    	    {
                    	        alt187 = 1;
                    	    }
                    	}
                    	switch (alt187) 
                    	{
                    	    case 1 :
                    	        // cs.g:673:66: ',' constructor_constraint
                    	        {
                    	        	Match(input,89,FOLLOW_89_in_type_parameter_constraint_list4875); if (state.failed) return ;
                    	        	PushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list4879);
                    	        	constructor_constraint();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 2 :
                    // cs.g:674:4: secondary_constraint_list ( ',' constructor_constraint )?
                    {
                    	PushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list4886);
                    	secondary_constraint_list();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:674:32: ( ',' constructor_constraint )?
                    	int alt188 = 2;
                    	int LA188_0 = input.LA(1);

                    	if ( (LA188_0 == 89) )
                    	{
                    	    int LA188_1 = input.LA(2);

                    	    if ( (LA188_1 == 68) )
                    	    {
                    	        alt188 = 1;
                    	    }
                    	}
                    	switch (alt188) 
                    	{
                    	    case 1 :
                    	        // cs.g:674:33: ',' constructor_constraint
                    	        {
                    	        	Match(input,89,FOLLOW_89_in_type_parameter_constraint_list4891); if (state.failed) return ;
                    	        	PushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list4895);
                    	        	constructor_constraint();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 3 :
                    // cs.g:675:4: constructor_constraint
                    {
                    	PushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list4902);
                    	constructor_constraint();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 191, type_parameter_constraint_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_parameter_constraint_list"


    // $ANTLR start "secondary_constraint_list"
    // cs.g:680:1: secondary_constraint_list : secondary_constraint ( ',' secondary_constraint )* ;
    public void secondary_constraint_list() // throws RecognitionException [1]
    {   
        int secondary_constraint_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 192) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:680:26: ( secondary_constraint ( ',' secondary_constraint )* )
            // cs.g:681:2: secondary_constraint ( ',' secondary_constraint )*
            {
            	PushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list4914);
            	secondary_constraint();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:681:23: ( ',' secondary_constraint )*
            	do 
            	{
            	    int alt190 = 2;
            	    int LA190_0 = input.LA(1);

            	    if ( (LA190_0 == 89) )
            	    {
            	        int LA190_1 = input.LA(2);

            	        if ( (LA190_1 == 145) )
            	        {
            	            int LA190_3 = input.LA(3);

            	            if ( (LA190_3 == DOT || LA190_3 == SEMI || LA190_3 == 62 || LA190_3 == 84 || LA190_3 == 89 || LA190_3 == 99) )
            	            {
            	                alt190 = 1;
            	            }


            	        }
            	        else if ( (LA190_1 == IDENTIFIER || LA190_1 == 65 || (LA190_1 >= 132 && LA190_1 <= 133) || (LA190_1 >= 135 && LA190_1 <= 144) || (LA190_1 >= 146 && LA190_1 <= 148) || (LA190_1 >= 150 && LA190_1 <= 152) || LA190_1 == 154 || (LA190_1 >= 157 && LA190_1 <= 159) || LA190_1 == 170 || (LA190_1 >= 177 && LA190_1 <= 178) || LA190_1 == 195 || LA190_1 == 202) )
            	        {
            	            alt190 = 1;
            	        }


            	    }


            	    switch (alt190) 
            		{
            			case 1 :
            			    // cs.g:681:24: ',' secondary_constraint
            			    {
            			    	Match(input,89,FOLLOW_89_in_secondary_constraint_list4917); if (state.failed) return ;
            			    	PushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list4919);
            			    	secondary_constraint();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop190;
            	    }
            	} while (true);

            	loop190:
            		;	// Stops C# compiler whining that label 'loop190' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 192, secondary_constraint_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "secondary_constraint_list"


    // $ANTLR start "secondary_constraint"
    // cs.g:682:1: secondary_constraint : type_name ;
    public void secondary_constraint() // throws RecognitionException [1]
    {   
        int secondary_constraint_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 193) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:682:21: ( type_name )
            // cs.g:683:2: type_name
            {
            	PushFollow(FOLLOW_type_name_in_secondary_constraint4929);
            	type_name();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 193, secondary_constraint_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "secondary_constraint"


    // $ANTLR start "type_variable_name"
    // cs.g:684:1: type_variable_name : identifier ;
    public void type_variable_name() // throws RecognitionException [1]
    {   
        int type_variable_name_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 194) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:684:19: ( identifier )
            // cs.g:685:2: identifier
            {
            	PushFollow(FOLLOW_identifier_in_type_variable_name4939);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 194, type_variable_name_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "type_variable_name"


    // $ANTLR start "constructor_constraint"
    // cs.g:686:1: constructor_constraint : 'new' '(' ')' ;
    public void constructor_constraint() // throws RecognitionException [1]
    {   
        int constructor_constraint_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 195) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:686:23: ( 'new' '(' ')' )
            // cs.g:687:2: 'new' '(' ')'
            {
            	Match(input,68,FOLLOW_68_in_constructor_constraint4947); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_constructor_constraint4951); if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_constructor_constraint4955); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 195, constructor_constraint_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constructor_constraint"


    // $ANTLR start "return_type"
    // cs.g:688:1: return_type : ( type | 'void' );
    public void return_type() // throws RecognitionException [1]
    {   
        int return_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 196) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:688:12: ( type | 'void' )
            int alt191 = 2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0 == IDENTIFIER || LA191_0 == 65 || (LA191_0 >= 132 && LA191_0 <= 133) || (LA191_0 >= 135 && LA191_0 <= 148) || (LA191_0 >= 150 && LA191_0 <= 152) || LA191_0 == 154 || (LA191_0 >= 157 && LA191_0 <= 168) || LA191_0 == 170 || (LA191_0 >= 177 && LA191_0 <= 178) || (LA191_0 >= 195 && LA191_0 <= 202)) )
            {
                alt191 = 1;
            }
            else if ( (LA191_0 == 82) )
            {
                int LA191_2 = input.LA(2);

                if ( (LA191_2 == IDENTIFIER || LA191_2 == 65 || (LA191_2 >= 132 && LA191_2 <= 133) || (LA191_2 >= 135 && LA191_2 <= 148) || (LA191_2 >= 150 && LA191_2 <= 152) || LA191_2 == 154 || (LA191_2 >= 157 && LA191_2 <= 159) || LA191_2 == 170 || (LA191_2 >= 177 && LA191_2 <= 178) || LA191_2 == 195 || LA191_2 == 202) )
                {
                    alt191 = 2;
                }
                else if ( (LA191_2 == 100) )
                {
                    alt191 = 1;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d191s2 =
                        new NoViableAltException("", 191, 2, input);

                    throw nvae_d191s2;
                }
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d191s0 =
                    new NoViableAltException("", 191, 0, input);

                throw nvae_d191s0;
            }
            switch (alt191) 
            {
                case 1 :
                    // cs.g:689:2: type
                    {
                    	PushFollow(FOLLOW_type_in_return_type4963);
                    	type();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:690:5: 'void'
                    {
                    	Match(input,82,FOLLOW_82_in_return_type4969); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 196, return_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "return_type"


    // $ANTLR start "formal_parameter_list"
    // cs.g:691:1: formal_parameter_list : formal_parameter ( ',' formal_parameter )* ;
    public void formal_parameter_list() // throws RecognitionException [1]
    {   
        int formal_parameter_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 197) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:691:22: ( formal_parameter ( ',' formal_parameter )* )
            // cs.g:692:2: formal_parameter ( ',' formal_parameter )*
            {
            	PushFollow(FOLLOW_formal_parameter_in_formal_parameter_list4976);
            	formal_parameter();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:692:19: ( ',' formal_parameter )*
            	do 
            	{
            	    int alt192 = 2;
            	    int LA192_0 = input.LA(1);

            	    if ( (LA192_0 == 89) )
            	    {
            	        alt192 = 1;
            	    }


            	    switch (alt192) 
            		{
            			case 1 :
            			    // cs.g:692:20: ',' formal_parameter
            			    {
            			    	Match(input,89,FOLLOW_89_in_formal_parameter_list4979); if (state.failed) return ;
            			    	PushFollow(FOLLOW_formal_parameter_in_formal_parameter_list4981);
            			    	formal_parameter();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop192;
            	    }
            	} while (true);

            	loop192:
            		;	// Stops C# compiler whining that label 'loop192' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 197, formal_parameter_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "formal_parameter_list"


    // $ANTLR start "formal_parameter"
    // cs.g:693:1: formal_parameter : ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' );
    public void formal_parameter() // throws RecognitionException [1]
    {   
        int formal_parameter_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 198) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:693:17: ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' )
            int alt195 = 2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0 == IDENTIFIER || LA195_0 == 65 || (LA195_0 >= 82 && LA195_0 <= 83) || LA195_0 == 86 || (LA195_0 >= 91 && LA195_0 <= 92) || (LA195_0 >= 132 && LA195_0 <= 133) || (LA195_0 >= 135 && LA195_0 <= 148) || (LA195_0 >= 150 && LA195_0 <= 152) || LA195_0 == 154 || (LA195_0 >= 157 && LA195_0 <= 168) || LA195_0 == 171 || (LA195_0 >= 177 && LA195_0 <= 178) || (LA195_0 >= 195 && LA195_0 <= 202)) )
            {
                alt195 = 1;
            }
            else if ( (LA195_0 == 170) )
            {
                int LA195_2 = input.LA(2);

                if ( (LA195_2 == IDENTIFIER || LA195_2 == DOT || LA195_2 == 65 || LA195_2 == 84 || LA195_2 == 86 || (LA195_2 >= 99 && LA195_2 <= 101) || (LA195_2 >= 132 && LA195_2 <= 133) || (LA195_2 >= 135 && LA195_2 <= 148) || (LA195_2 >= 150 && LA195_2 <= 152) || LA195_2 == 154 || (LA195_2 >= 157 && LA195_2 <= 159) || LA195_2 == 170 || (LA195_2 >= 177 && LA195_2 <= 178) || LA195_2 == 195 || LA195_2 == 202) )
                {
                    alt195 = 1;
                }
                else if ( (LA195_2 == RPAREN || LA195_2 == 87 || LA195_2 == 89) )
                {
                    alt195 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d195s2 =
                        new NoViableAltException("", 195, 2, input);

                    throw nvae_d195s2;
                }
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d195s0 =
                    new NoViableAltException("", 195, 0, input);

                throw nvae_d195s0;
            }
            switch (alt195) 
            {
                case 1 :
                    // cs.g:694:2: ( attributes )? ( fixed_parameter | parameter_array )
                    {
                    	// cs.g:694:2: ( attributes )?
                    	int alt193 = 2;
                    	int LA193_0 = input.LA(1);

                    	if ( (LA193_0 == 86) )
                    	{
                    	    alt193 = 1;
                    	}
                    	switch (alt193) 
                    	{
                    	    case 1 :
                    	        // cs.g:694:2: attributes
                    	        {
                    	        	PushFollow(FOLLOW_attributes_in_formal_parameter4991);
                    	        	attributes();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}

                    	// cs.g:694:16: ( fixed_parameter | parameter_array )
                    	int alt194 = 2;
                    	int LA194_0 = input.LA(1);

                    	if ( (LA194_0 == IDENTIFIER || LA194_0 == 65 || (LA194_0 >= 82 && LA194_0 <= 83) || (LA194_0 >= 91 && LA194_0 <= 92) || (LA194_0 >= 132 && LA194_0 <= 133) || (LA194_0 >= 135 && LA194_0 <= 148) || (LA194_0 >= 150 && LA194_0 <= 152) || LA194_0 == 154 || (LA194_0 >= 157 && LA194_0 <= 168) || LA194_0 == 170 || (LA194_0 >= 177 && LA194_0 <= 178) || (LA194_0 >= 195 && LA194_0 <= 202)) )
                    	{
                    	    alt194 = 1;
                    	}
                    	else if ( (LA194_0 == 171) )
                    	{
                    	    alt194 = 2;
                    	}
                    	else 
                    	{
                    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    	    NoViableAltException nvae_d194s0 =
                    	        new NoViableAltException("", 194, 0, input);

                    	    throw nvae_d194s0;
                    	}
                    	switch (alt194) 
                    	{
                    	    case 1 :
                    	        // cs.g:694:17: fixed_parameter
                    	        {
                    	        	PushFollow(FOLLOW_fixed_parameter_in_formal_parameter4997);
                    	        	fixed_parameter();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;
                    	    case 2 :
                    	        // cs.g:694:35: parameter_array
                    	        {
                    	        	PushFollow(FOLLOW_parameter_array_in_formal_parameter5001);
                    	        	parameter_array();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 2 :
                    // cs.g:695:4: '__arglist'
                    {
                    	Match(input,170,FOLLOW_170_in_formal_parameter5008); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 198, formal_parameter_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "formal_parameter"


    // $ANTLR start "fixed_parameters"
    // cs.g:696:1: fixed_parameters : fixed_parameter ( ',' fixed_parameter )* ;
    public void fixed_parameters() // throws RecognitionException [1]
    {   
        int fixed_parameters_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 199) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:696:17: ( fixed_parameter ( ',' fixed_parameter )* )
            // cs.g:697:2: fixed_parameter ( ',' fixed_parameter )*
            {
            	PushFollow(FOLLOW_fixed_parameter_in_fixed_parameters5016);
            	fixed_parameter();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:697:20: ( ',' fixed_parameter )*
            	do 
            	{
            	    int alt196 = 2;
            	    int LA196_0 = input.LA(1);

            	    if ( (LA196_0 == 89) )
            	    {
            	        alt196 = 1;
            	    }


            	    switch (alt196) 
            		{
            			case 1 :
            			    // cs.g:697:21: ',' fixed_parameter
            			    {
            			    	Match(input,89,FOLLOW_89_in_fixed_parameters5021); if (state.failed) return ;
            			    	PushFollow(FOLLOW_fixed_parameter_in_fixed_parameters5025);
            			    	fixed_parameter();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop196;
            	    }
            	} while (true);

            	loop196:
            		;	// Stops C# compiler whining that label 'loop196' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 199, fixed_parameters_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "fixed_parameters"


    // $ANTLR start "fixed_parameter"
    // cs.g:699:1: fixed_parameter : ( parameter_modifier )? type identifier ( default_argument )? ;
    public void fixed_parameter() // throws RecognitionException [1]
    {   
        int fixed_parameter_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 200) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:699:16: ( ( parameter_modifier )? type identifier ( default_argument )? )
            // cs.g:700:2: ( parameter_modifier )? type identifier ( default_argument )?
            {
            	// cs.g:700:2: ( parameter_modifier )?
            	int alt197 = 2;
            	int LA197_0 = input.LA(1);

            	if ( (LA197_0 == 83 || (LA197_0 >= 91 && LA197_0 <= 92)) )
            	{
            	    alt197 = 1;
            	}
            	switch (alt197) 
            	{
            	    case 1 :
            	        // cs.g:700:2: parameter_modifier
            	        {
            	        	PushFollow(FOLLOW_parameter_modifier_in_fixed_parameter5036);
            	        	parameter_modifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_type_in_fixed_parameter5041);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_fixed_parameter5045);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:700:44: ( default_argument )?
            	int alt198 = 2;
            	int LA198_0 = input.LA(1);

            	if ( (LA198_0 == 66) )
            	{
            	    alt198 = 1;
            	}
            	switch (alt198) 
            	{
            	    case 1 :
            	        // cs.g:700:44: default_argument
            	        {
            	        	PushFollow(FOLLOW_default_argument_in_fixed_parameter5049);
            	        	default_argument();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 200, fixed_parameter_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "fixed_parameter"


    // $ANTLR start "default_argument"
    // cs.g:702:1: default_argument : '=' expression ;
    public void default_argument() // throws RecognitionException [1]
    {   
        int default_argument_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 201) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:702:17: ( '=' expression )
            // cs.g:703:2: '=' expression
            {
            	Match(input,66,FOLLOW_66_in_default_argument5059); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_default_argument5061);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 201, default_argument_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "default_argument"


    // $ANTLR start "parameter_modifier"
    // cs.g:704:1: parameter_modifier : ( 'ref' | 'out' | 'this' );
    public void parameter_modifier() // throws RecognitionException [1]
    {   
        int parameter_modifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 202) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:704:19: ( 'ref' | 'out' | 'this' )
            // cs.g:
            {
            	if ( input.LA(1) == 83 || (input.LA(1) >= 91 && input.LA(1) <= 92) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 202, parameter_modifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "parameter_modifier"


    // $ANTLR start "parameter_array"
    // cs.g:706:1: parameter_array : 'params' type identifier ;
    public void parameter_array() // throws RecognitionException [1]
    {   
        int parameter_array_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 203) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:706:16: ( 'params' type identifier )
            // cs.g:707:2: 'params' type identifier
            {
            	Match(input,171,FOLLOW_171_in_parameter_array5084); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_parameter_array5088);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_parameter_array5092);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 203, parameter_array_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "parameter_array"


    // $ANTLR start "interface_declaration"
    // cs.g:710:1: interface_declaration : 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? ;
    public void interface_declaration() // throws RecognitionException [1]
    {   
        int interface_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 204) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:710:22: ( 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? )
            // cs.g:711:2: 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )?
            {
            	Match(input,172,FOLLOW_172_in_interface_declaration5102); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_interface_declaration5106);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:711:29: ( variant_generic_parameter_list )?
            	int alt199 = 2;
            	int LA199_0 = input.LA(1);

            	if ( (LA199_0 == 99) )
            	{
            	    alt199 = 1;
            	}
            	switch (alt199) 
            	{
            	    case 1 :
            	        // cs.g:711:29: variant_generic_parameter_list
            	        {
            	        	PushFollow(FOLLOW_variant_generic_parameter_list_in_interface_declaration5110);
            	        	variant_generic_parameter_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:712:6: ( interface_base )?
            	int alt200 = 2;
            	int LA200_0 = input.LA(1);

            	if ( (LA200_0 == 90) )
            	{
            	    alt200 = 1;
            	}
            	switch (alt200) 
            	{
            	    case 1 :
            	        // cs.g:712:6: interface_base
            	        {
            	        	PushFollow(FOLLOW_interface_base_in_interface_declaration5119);
            	        	interface_base();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:712:24: ( type_parameter_constraints_clauses )?
            	int alt201 = 2;
            	int LA201_0 = input.LA(1);

            	if ( (LA201_0 == 145) )
            	{
            	    alt201 = 1;
            	}
            	switch (alt201) 
            	{
            	    case 1 :
            	        // cs.g:712:24: type_parameter_constraints_clauses
            	        {
            	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_declaration5124);
            	        	type_parameter_constraints_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_interface_body_in_interface_declaration5129);
            	interface_body();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:712:79: ( ';' )?
            	int alt202 = 2;
            	int LA202_0 = input.LA(1);

            	if ( (LA202_0 == SEMI) )
            	{
            	    alt202 = 1;
            	}
            	switch (alt202) 
            	{
            	    case 1 :
            	        // cs.g:712:79: ';'
            	        {
            	        	Match(input,SEMI,FOLLOW_SEMI_in_interface_declaration5133); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 204, interface_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_declaration"


    // $ANTLR start "interface_modifiers"
    // cs.g:713:1: interface_modifiers : ( modifier )+ ;
    public void interface_modifiers() // throws RecognitionException [1]
    {   
        int interface_modifiers_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 205) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:713:20: ( ( modifier )+ )
            // cs.g:714:2: ( modifier )+
            {
            	// cs.g:714:2: ( modifier )+
            	int cnt203 = 0;
            	do 
            	{
            	    int alt203 = 2;
            	    int LA203_0 = input.LA(1);

            	    if ( (LA203_0 == 64 || (LA203_0 >= 68 && LA203_0 <= 80)) )
            	    {
            	        alt203 = 1;
            	    }


            	    switch (alt203) 
            		{
            			case 1 :
            			    // cs.g:714:2: modifier
            			    {
            			    	PushFollow(FOLLOW_modifier_in_interface_modifiers5143);
            			    	modifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt203 >= 1 ) goto loop203;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee203 =
            		                new EarlyExitException(203, input);
            		            throw eee203;
            	    }
            	    cnt203++;
            	} while (true);

            	loop203:
            		;	// Stops C# compiler whining that label 'loop203' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 205, interface_modifiers_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_modifiers"


    // $ANTLR start "interface_base"
    // cs.g:715:1: interface_base : ':' interface_type_list ;
    public void interface_base() // throws RecognitionException [1]
    {   
        int interface_base_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 206) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:715:15: ( ':' interface_type_list )
            // cs.g:716:5: ':' interface_type_list
            {
            	Match(input,90,FOLLOW_90_in_interface_base5156); if (state.failed) return ;
            	PushFollow(FOLLOW_interface_type_list_in_interface_base5158);
            	interface_type_list();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 206, interface_base_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_base"


    // $ANTLR start "interface_body"
    // cs.g:717:1: interface_body : '{' ( interface_member_declarations )? '}' ;
    public void interface_body() // throws RecognitionException [1]
    {   
        int interface_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 207) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:717:15: ( '{' ( interface_member_declarations )? '}' )
            // cs.g:718:2: '{' ( interface_member_declarations )? '}'
            {
            	Match(input,62,FOLLOW_62_in_interface_body5166); if (state.failed) return ;
            	// cs.g:718:8: ( interface_member_declarations )?
            	int alt204 = 2;
            	int LA204_0 = input.LA(1);

            	if ( (LA204_0 == IDENTIFIER || (LA204_0 >= 64 && LA204_0 <= 65) || (LA204_0 >= 68 && LA204_0 <= 80) || LA204_0 == 82 || LA204_0 == 86 || (LA204_0 >= 132 && LA204_0 <= 133) || (LA204_0 >= 135 && LA204_0 <= 152) || LA204_0 == 154 || (LA204_0 >= 157 && LA204_0 <= 168) || LA204_0 == 170 || (LA204_0 >= 177 && LA204_0 <= 178) || (LA204_0 >= 195 && LA204_0 <= 202)) )
            	{
            	    alt204 = 1;
            	}
            	switch (alt204) 
            	{
            	    case 1 :
            	        // cs.g:718:8: interface_member_declarations
            	        {
            	        	PushFollow(FOLLOW_interface_member_declarations_in_interface_body5170);
            	        	interface_member_declarations();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_interface_body5175); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 207, interface_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_body"


    // $ANTLR start "interface_member_declarations"
    // cs.g:719:1: interface_member_declarations : ( interface_member_declaration )+ ;
    public void interface_member_declarations() // throws RecognitionException [1]
    {   
        int interface_member_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 208) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:719:30: ( ( interface_member_declaration )+ )
            // cs.g:720:2: ( interface_member_declaration )+
            {
            	// cs.g:720:2: ( interface_member_declaration )+
            	int cnt205 = 0;
            	do 
            	{
            	    int alt205 = 2;
            	    int LA205_0 = input.LA(1);

            	    if ( (LA205_0 == IDENTIFIER || (LA205_0 >= 64 && LA205_0 <= 65) || (LA205_0 >= 68 && LA205_0 <= 80) || LA205_0 == 82 || LA205_0 == 86 || (LA205_0 >= 132 && LA205_0 <= 133) || (LA205_0 >= 135 && LA205_0 <= 152) || LA205_0 == 154 || (LA205_0 >= 157 && LA205_0 <= 168) || LA205_0 == 170 || (LA205_0 >= 177 && LA205_0 <= 178) || (LA205_0 >= 195 && LA205_0 <= 202)) )
            	    {
            	        alt205 = 1;
            	    }


            	    switch (alt205) 
            		{
            			case 1 :
            			    // cs.g:720:2: interface_member_declaration
            			    {
            			    	PushFollow(FOLLOW_interface_member_declaration_in_interface_member_declarations5183);
            			    	interface_member_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt205 >= 1 ) goto loop205;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee205 =
            		                new EarlyExitException(205, input);
            		            throw eee205;
            	    }
            	    cnt205++;
            	} while (true);

            	loop205:
            		;	// Stops C# compiler whining that label 'loop205' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 208, interface_member_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_member_declarations"


    // $ANTLR start "interface_member_declaration"
    // cs.g:721:1: interface_member_declaration : ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) ;
    public void interface_member_declaration() // throws RecognitionException [1]
    {   
        int interface_member_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 209) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:721:29: ( ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) )
            // cs.g:722:2: ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
            {
            	// cs.g:722:2: ( attributes )?
            	int alt206 = 2;
            	int LA206_0 = input.LA(1);

            	if ( (LA206_0 == 86) )
            	{
            	    alt206 = 1;
            	}
            	switch (alt206) 
            	{
            	    case 1 :
            	        // cs.g:722:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_interface_member_declaration5192);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:722:17: ( modifiers )?
            	int alt207 = 2;
            	int LA207_0 = input.LA(1);

            	if ( (LA207_0 == 64 || (LA207_0 >= 68 && LA207_0 <= 80)) )
            	{
            	    alt207 = 1;
            	}
            	switch (alt207) 
            	{
            	    case 1 :
            	        // cs.g:722:17: modifiers
            	        {
            	        	PushFollow(FOLLOW_modifiers_in_interface_member_declaration5198);
            	        	modifiers();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:723:3: ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
            	int alt209 = 3;
            	switch ( input.LA(1) ) 
            	{
            	case 82:
            		{
            	    int LA209_1 = input.LA(2);

            	    if ( (LA209_1 == IDENTIFIER || LA209_1 == 65 || (LA209_1 >= 132 && LA209_1 <= 133) || (LA209_1 >= 135 && LA209_1 <= 148) || (LA209_1 >= 150 && LA209_1 <= 152) || LA209_1 == 154 || (LA209_1 >= 157 && LA209_1 <= 159) || LA209_1 == 170 || (LA209_1 >= 177 && LA209_1 <= 178) || LA209_1 == 195 || LA209_1 == 202) )
            	    {
            	        alt209 = 1;
            	    }
            	    else if ( (LA209_1 == 100) )
            	    {
            	        alt209 = 3;
            	    }
            	    else 
            	    {
            	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        NoViableAltException nvae_d209s1 =
            	            new NoViableAltException("", 209, 1, input);

            	        throw nvae_d209s1;
            	    }
            	    }
            	    break;
            	case 149:
            		{
            	    alt209 = 2;
            	    }
            	    break;
            	case IDENTIFIER:
            	case 65:
            	case 132:
            	case 133:
            	case 135:
            	case 136:
            	case 137:
            	case 138:
            	case 139:
            	case 140:
            	case 141:
            	case 142:
            	case 143:
            	case 144:
            	case 145:
            	case 146:
            	case 147:
            	case 148:
            	case 150:
            	case 151:
            	case 152:
            	case 154:
            	case 157:
            	case 158:
            	case 159:
            	case 160:
            	case 161:
            	case 162:
            	case 163:
            	case 164:
            	case 165:
            	case 166:
            	case 167:
            	case 168:
            	case 170:
            	case 177:
            	case 178:
            	case 195:
            	case 196:
            	case 197:
            	case 198:
            	case 199:
            	case 200:
            	case 201:
            	case 202:
            		{
            	    alt209 = 3;
            	    }
            	    break;
            		default:
            		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		    NoViableAltException nvae_d209s0 =
            		        new NoViableAltException("", 209, 0, input);

            		    throw nvae_d209s0;
            	}

            	switch (alt209) 
            	{
            	    case 1 :
            	        // cs.g:723:4: 'void' interface_method_declaration
            	        {
            	        	Match(input,82,FOLLOW_82_in_interface_member_declaration5204); if (state.failed) return ;
            	        	PushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration5208);
            	        	interface_method_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:724:5: interface_event_declaration
            	        {
            	        	PushFollow(FOLLOW_interface_event_declaration_in_interface_member_declaration5214);
            	        	interface_event_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 3 :
            	        // cs.g:725:5: type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
            	        {
            	        	PushFollow(FOLLOW_type_in_interface_member_declaration5220);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:725:12: ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
            	        	int alt208 = 3;
            	        	int LA208_0 = input.LA(1);

            	        	if ( (LA208_0 == IDENTIFIER || LA208_0 == 65 || (LA208_0 >= 132 && LA208_0 <= 133) || (LA208_0 >= 135 && LA208_0 <= 148) || (LA208_0 >= 150 && LA208_0 <= 152) || LA208_0 == 154 || (LA208_0 >= 157 && LA208_0 <= 159) || LA208_0 == 170 || (LA208_0 >= 177 && LA208_0 <= 178) || LA208_0 == 195 || LA208_0 == 202) )
            	        	{
            	        	    int LA208_1 = input.LA(2);

            	        	    if ( (LA208_1 == 99) && (synpred26_cs()) )
            	        	    {
            	        	        alt208 = 1;
            	        	    }
            	        	    else if ( (LA208_1 == 88) && (synpred26_cs()) )
            	        	    {
            	        	        alt208 = 1;
            	        	    }
            	        	    else if ( (LA208_1 == 62) && (synpred27_cs()) )
            	        	    {
            	        	        alt208 = 2;
            	        	    }
            	        	    else 
            	        	    {
            	        	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        	        NoViableAltException nvae_d208s1 =
            	        	            new NoViableAltException("", 208, 1, input);

            	        	        throw nvae_d208s1;
            	        	    }
            	        	}
            	        	else if ( (LA208_0 == 83) )
            	        	{
            	        	    alt208 = 3;
            	        	}
            	        	else 
            	        	{
            	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        	    NoViableAltException nvae_d208s0 =
            	        	        new NoViableAltException("", 208, 0, input);

            	        	    throw nvae_d208s0;
            	        	}
            	        	switch (alt208) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:725:14: ( member_name '(' )=> interface_method_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration5236);
            	        	        	interface_method_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:726:14: ( member_name '{' )=> interface_property_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_interface_property_declaration_in_interface_member_declaration5261);
            	        	        	interface_property_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 3 :
            	        	        // cs.g:727:8: interface_indexer_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_interface_indexer_declaration_in_interface_member_declaration5271);
            	        	        	interface_indexer_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 209, interface_member_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_member_declaration"


    // $ANTLR start "interface_property_declaration"
    // cs.g:730:1: interface_property_declaration : identifier '{' interface_accessor_declarations '}' ;
    public void interface_property_declaration() // throws RecognitionException [1]
    {   
        int interface_property_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 210) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:730:31: ( identifier '{' interface_accessor_declarations '}' )
            // cs.g:731:2: identifier '{' interface_accessor_declarations '}'
            {
            	PushFollow(FOLLOW_identifier_in_interface_property_declaration5288);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,62,FOLLOW_62_in_interface_property_declaration5292); if (state.failed) return ;
            	PushFollow(FOLLOW_interface_accessor_declarations_in_interface_property_declaration5296);
            	interface_accessor_declarations();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,63,FOLLOW_63_in_interface_property_declaration5300); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 210, interface_property_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_property_declaration"


    // $ANTLR start "interface_method_declaration"
    // cs.g:732:1: interface_method_declaration : identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
    public void interface_method_declaration() // throws RecognitionException [1]
    {   
        int interface_method_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 211) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:732:29: ( identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
            // cs.g:733:2: identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
            {
            	PushFollow(FOLLOW_identifier_in_interface_method_declaration5308);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:733:15: ( generic_argument_list )?
            	int alt210 = 2;
            	int LA210_0 = input.LA(1);

            	if ( (LA210_0 == 99) )
            	{
            	    alt210 = 1;
            	}
            	switch (alt210) 
            	{
            	    case 1 :
            	        // cs.g:733:15: generic_argument_list
            	        {
            	        	PushFollow(FOLLOW_generic_argument_list_in_interface_method_declaration5312);
            	        	generic_argument_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,88,FOLLOW_88_in_interface_method_declaration5320); if (state.failed) return ;
            	// cs.g:734:12: ( formal_parameter_list )?
            	int alt211 = 2;
            	int LA211_0 = input.LA(1);

            	if ( (LA211_0 == IDENTIFIER || LA211_0 == 65 || (LA211_0 >= 82 && LA211_0 <= 83) || LA211_0 == 86 || (LA211_0 >= 91 && LA211_0 <= 92) || (LA211_0 >= 132 && LA211_0 <= 133) || (LA211_0 >= 135 && LA211_0 <= 148) || (LA211_0 >= 150 && LA211_0 <= 152) || LA211_0 == 154 || (LA211_0 >= 157 && LA211_0 <= 168) || (LA211_0 >= 170 && LA211_0 <= 171) || (LA211_0 >= 177 && LA211_0 <= 178) || (LA211_0 >= 195 && LA211_0 <= 202)) )
            	{
            	    alt211 = 1;
            	}
            	switch (alt211) 
            	{
            	    case 1 :
            	        // cs.g:734:12: formal_parameter_list
            	        {
            	        	PushFollow(FOLLOW_formal_parameter_list_in_interface_method_declaration5324);
            	        	formal_parameter_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_interface_method_declaration5329); if (state.failed) return ;
            	// cs.g:734:43: ( type_parameter_constraints_clauses )?
            	int alt212 = 2;
            	int LA212_0 = input.LA(1);

            	if ( (LA212_0 == 145) )
            	{
            	    alt212 = 1;
            	}
            	switch (alt212) 
            	{
            	    case 1 :
            	        // cs.g:734:43: type_parameter_constraints_clauses
            	        {
            	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration5333);
            	        	type_parameter_constraints_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_interface_method_declaration5338); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 211, interface_method_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_method_declaration"


    // $ANTLR start "interface_event_declaration"
    // cs.g:735:1: interface_event_declaration : 'event' type identifier ';' ;
    public void interface_event_declaration() // throws RecognitionException [1]
    {   
        int interface_event_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 212) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:735:28: ( 'event' type identifier ';' )
            // cs.g:737:2: 'event' type identifier ';'
            {
            	Match(input,149,FOLLOW_149_in_interface_event_declaration5349); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_interface_event_declaration5353);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_interface_event_declaration5357);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_interface_event_declaration5361); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 212, interface_event_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_event_declaration"


    // $ANTLR start "interface_indexer_declaration"
    // cs.g:738:1: interface_indexer_declaration : 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' ;
    public void interface_indexer_declaration() // throws RecognitionException [1]
    {   
        int interface_indexer_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 213) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:738:30: ( 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' )
            // cs.g:740:2: 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}'
            {
            	Match(input,83,FOLLOW_83_in_interface_indexer_declaration5373); if (state.failed) return ;
            	Match(input,86,FOLLOW_86_in_interface_indexer_declaration5377); if (state.failed) return ;
            	PushFollow(FOLLOW_formal_parameter_list_in_interface_indexer_declaration5381);
            	formal_parameter_list();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,87,FOLLOW_87_in_interface_indexer_declaration5385); if (state.failed) return ;
            	Match(input,62,FOLLOW_62_in_interface_indexer_declaration5389); if (state.failed) return ;
            	PushFollow(FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration5393);
            	interface_accessor_declarations();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,63,FOLLOW_63_in_interface_indexer_declaration5397); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 213, interface_indexer_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_indexer_declaration"


    // $ANTLR start "interface_accessor_declarations"
    // cs.g:741:1: interface_accessor_declarations : ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) ;
    public void interface_accessor_declarations() // throws RecognitionException [1]
    {   
        int interface_accessor_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 214) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:741:32: ( ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) )
            // cs.g:742:2: ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
            {
            	// cs.g:742:2: ( attributes )?
            	int alt213 = 2;
            	int LA213_0 = input.LA(1);

            	if ( (LA213_0 == 86) )
            	{
            	    alt213 = 1;
            	}
            	switch (alt213) 
            	{
            	    case 1 :
            	        // cs.g:742:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_interface_accessor_declarations5405);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:743:3: ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
            	int alt218 = 2;
            	int LA218_0 = input.LA(1);

            	if ( (LA218_0 == 156) )
            	{
            	    alt218 = 1;
            	}
            	else if ( (LA218_0 == 157) )
            	{
            	    alt218 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d218s0 =
            	        new NoViableAltException("", 218, 0, input);

            	    throw nvae_d218s0;
            	}
            	switch (alt218) 
            	{
            	    case 1 :
            	        // cs.g:743:4: interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )?
            	        {
            	        	PushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations5414);
            	        	interface_get_accessor_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:743:41: ( attributes )?
            	        	int alt214 = 2;
            	        	int LA214_0 = input.LA(1);

            	        	if ( (LA214_0 == 86) )
            	        	{
            	        	    alt214 = 1;
            	        	}
            	        	switch (alt214) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:743:41: attributes
            	        	        {
            	        	        	PushFollow(FOLLOW_attributes_in_interface_accessor_declarations5418);
            	        	        	attributes();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}

            	        	// cs.g:743:55: ( interface_set_accessor_declaration )?
            	        	int alt215 = 2;
            	        	int LA215_0 = input.LA(1);

            	        	if ( (LA215_0 == 157) )
            	        	{
            	        	    alt215 = 1;
            	        	}
            	        	switch (alt215) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:743:55: interface_set_accessor_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations5423);
            	        	        	interface_set_accessor_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:744:5: interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )?
            	        {
            	        	PushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations5430);
            	        	interface_set_accessor_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:744:42: ( attributes )?
            	        	int alt216 = 2;
            	        	int LA216_0 = input.LA(1);

            	        	if ( (LA216_0 == 86) )
            	        	{
            	        	    alt216 = 1;
            	        	}
            	        	switch (alt216) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:744:42: attributes
            	        	        {
            	        	        	PushFollow(FOLLOW_attributes_in_interface_accessor_declarations5434);
            	        	        	attributes();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}

            	        	// cs.g:744:56: ( interface_get_accessor_declaration )?
            	        	int alt217 = 2;
            	        	int LA217_0 = input.LA(1);

            	        	if ( (LA217_0 == 156) )
            	        	{
            	        	    alt217 = 1;
            	        	}
            	        	switch (alt217) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:744:56: interface_get_accessor_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations5439);
            	        	        	interface_get_accessor_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 214, interface_accessor_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_accessor_declarations"


    // $ANTLR start "interface_get_accessor_declaration"
    // cs.g:745:1: interface_get_accessor_declaration : 'get' ';' ;
    public void interface_get_accessor_declaration() // throws RecognitionException [1]
    {   
        int interface_get_accessor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 215) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:745:35: ( 'get' ';' )
            // cs.g:746:2: 'get' ';'
            {
            	Match(input,156,FOLLOW_156_in_interface_get_accessor_declaration5449); if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_interface_get_accessor_declaration5453); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 215, interface_get_accessor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_get_accessor_declaration"


    // $ANTLR start "interface_set_accessor_declaration"
    // cs.g:747:1: interface_set_accessor_declaration : 'set' ';' ;
    public void interface_set_accessor_declaration() // throws RecognitionException [1]
    {   
        int interface_set_accessor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 216) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:747:35: ( 'set' ';' )
            // cs.g:748:2: 'set' ';'
            {
            	Match(input,157,FOLLOW_157_in_interface_set_accessor_declaration5463); if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_interface_set_accessor_declaration5467); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 216, interface_set_accessor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "interface_set_accessor_declaration"


    // $ANTLR start "method_modifiers"
    // cs.g:749:1: method_modifiers : ( modifier )+ ;
    public void method_modifiers() // throws RecognitionException [1]
    {   
        int method_modifiers_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 217) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:749:17: ( ( modifier )+ )
            // cs.g:750:2: ( modifier )+
            {
            	// cs.g:750:2: ( modifier )+
            	int cnt219 = 0;
            	do 
            	{
            	    int alt219 = 2;
            	    int LA219_0 = input.LA(1);

            	    if ( (LA219_0 == 64 || (LA219_0 >= 68 && LA219_0 <= 80)) )
            	    {
            	        alt219 = 1;
            	    }


            	    switch (alt219) 
            		{
            			case 1 :
            			    // cs.g:750:2: modifier
            			    {
            			    	PushFollow(FOLLOW_modifier_in_method_modifiers5477);
            			    	modifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt219 >= 1 ) goto loop219;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee219 =
            		                new EarlyExitException(219, input);
            		            throw eee219;
            	    }
            	    cnt219++;
            	} while (true);

            	loop219:
            		;	// Stops C# compiler whining that label 'loop219' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 217, method_modifiers_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "method_modifiers"


    // $ANTLR start "struct_declaration"
    // cs.g:753:1: struct_declaration : 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? ;
    public void struct_declaration() // throws RecognitionException [1]
    {   
        int struct_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 218) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:753:19: ( 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? )
            // cs.g:754:2: 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )?
            {
            	Match(input,169,FOLLOW_169_in_struct_declaration5489); if (state.failed) return ;
            	PushFollow(FOLLOW_type_or_generic_in_struct_declaration5493);
            	type_or_generic();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:754:31: ( struct_interfaces )?
            	int alt220 = 2;
            	int LA220_0 = input.LA(1);

            	if ( (LA220_0 == 90) )
            	{
            	    alt220 = 1;
            	}
            	switch (alt220) 
            	{
            	    case 1 :
            	        // cs.g:754:31: struct_interfaces
            	        {
            	        	PushFollow(FOLLOW_struct_interfaces_in_struct_declaration5497);
            	        	struct_interfaces();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:754:52: ( type_parameter_constraints_clauses )?
            	int alt221 = 2;
            	int LA221_0 = input.LA(1);

            	if ( (LA221_0 == 145) )
            	{
            	    alt221 = 1;
            	}
            	switch (alt221) 
            	{
            	    case 1 :
            	        // cs.g:754:52: type_parameter_constraints_clauses
            	        {
            	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_struct_declaration5502);
            	        	type_parameter_constraints_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_struct_body_in_struct_declaration5507);
            	struct_body();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:754:104: ( ';' )?
            	int alt222 = 2;
            	int LA222_0 = input.LA(1);

            	if ( (LA222_0 == SEMI) )
            	{
            	    alt222 = 1;
            	}
            	switch (alt222) 
            	{
            	    case 1 :
            	        // cs.g:754:104: ';'
            	        {
            	        	Match(input,SEMI,FOLLOW_SEMI_in_struct_declaration5511); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 218, struct_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "struct_declaration"


    // $ANTLR start "struct_modifiers"
    // cs.g:755:1: struct_modifiers : ( struct_modifier )+ ;
    public void struct_modifiers() // throws RecognitionException [1]
    {   
        int struct_modifiers_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 219) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:755:17: ( ( struct_modifier )+ )
            // cs.g:756:2: ( struct_modifier )+
            {
            	// cs.g:756:2: ( struct_modifier )+
            	int cnt223 = 0;
            	do 
            	{
            	    int alt223 = 2;
            	    int LA223_0 = input.LA(1);

            	    if ( ((LA223_0 >= 68 && LA223_0 <= 73)) )
            	    {
            	        alt223 = 1;
            	    }


            	    switch (alt223) 
            		{
            			case 1 :
            			    // cs.g:756:2: struct_modifier
            			    {
            			    	PushFollow(FOLLOW_struct_modifier_in_struct_modifiers5520);
            			    	struct_modifier();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt223 >= 1 ) goto loop223;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee223 =
            		                new EarlyExitException(223, input);
            		            throw eee223;
            	    }
            	    cnt223++;
            	} while (true);

            	loop223:
            		;	// Stops C# compiler whining that label 'loop223' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 219, struct_modifiers_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "struct_modifiers"


    // $ANTLR start "struct_modifier"
    // cs.g:757:1: struct_modifier : ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' );
    public void struct_modifier() // throws RecognitionException [1]
    {   
        int struct_modifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 220) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:757:16: ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 68 && input.LA(1) <= 73) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 220, struct_modifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "struct_modifier"


    // $ANTLR start "struct_interfaces"
    // cs.g:759:1: struct_interfaces : ':' interface_type_list ;
    public void struct_interfaces() // throws RecognitionException [1]
    {   
        int struct_interfaces_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 221) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:759:18: ( ':' interface_type_list )
            // cs.g:760:2: ':' interface_type_list
            {
            	Match(input,90,FOLLOW_90_in_struct_interfaces5557); if (state.failed) return ;
            	PushFollow(FOLLOW_interface_type_list_in_struct_interfaces5561);
            	interface_type_list();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 221, struct_interfaces_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "struct_interfaces"


    // $ANTLR start "struct_body"
    // cs.g:761:1: struct_body : '{' ( struct_member_declarations )? '}' ;
    public void struct_body() // throws RecognitionException [1]
    {   
        int struct_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 222) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:761:12: ( '{' ( struct_member_declarations )? '}' )
            // cs.g:762:2: '{' ( struct_member_declarations )? '}'
            {
            	Match(input,62,FOLLOW_62_in_struct_body5568); if (state.failed) return ;
            	// cs.g:762:8: ( struct_member_declarations )?
            	int alt224 = 2;
            	int LA224_0 = input.LA(1);

            	if ( (LA224_0 == IDENTIFIER || LA224_0 == ENUM || (LA224_0 >= 64 && LA224_0 <= 65) || (LA224_0 >= 67 && LA224_0 <= 82) || LA224_0 == 86 || LA224_0 == 97 || (LA224_0 >= 132 && LA224_0 <= 133) || (LA224_0 >= 135 && LA224_0 <= 152) || (LA224_0 >= 154 && LA224_0 <= 155) || (LA224_0 >= 157 && LA224_0 <= 170) || LA224_0 == 172 || (LA224_0 >= 174 && LA224_0 <= 175) || (LA224_0 >= 177 && LA224_0 <= 178) || (LA224_0 >= 195 && LA224_0 <= 202)) )
            	{
            	    alt224 = 1;
            	}
            	switch (alt224) 
            	{
            	    case 1 :
            	        // cs.g:762:8: struct_member_declarations
            	        {
            	        	PushFollow(FOLLOW_struct_member_declarations_in_struct_body5572);
            	        	struct_member_declarations();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_struct_body5577); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 222, struct_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "struct_body"


    // $ANTLR start "struct_member_declarations"
    // cs.g:763:1: struct_member_declarations : ( struct_member_declaration )+ ;
    public void struct_member_declarations() // throws RecognitionException [1]
    {   
        int struct_member_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 223) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:763:27: ( ( struct_member_declaration )+ )
            // cs.g:764:2: ( struct_member_declaration )+
            {
            	// cs.g:764:2: ( struct_member_declaration )+
            	int cnt225 = 0;
            	do 
            	{
            	    int alt225 = 2;
            	    int LA225_0 = input.LA(1);

            	    if ( (LA225_0 == IDENTIFIER || LA225_0 == ENUM || (LA225_0 >= 64 && LA225_0 <= 65) || (LA225_0 >= 67 && LA225_0 <= 82) || LA225_0 == 86 || LA225_0 == 97 || (LA225_0 >= 132 && LA225_0 <= 133) || (LA225_0 >= 135 && LA225_0 <= 152) || (LA225_0 >= 154 && LA225_0 <= 155) || (LA225_0 >= 157 && LA225_0 <= 170) || LA225_0 == 172 || (LA225_0 >= 174 && LA225_0 <= 175) || (LA225_0 >= 177 && LA225_0 <= 178) || (LA225_0 >= 195 && LA225_0 <= 202)) )
            	    {
            	        alt225 = 1;
            	    }


            	    switch (alt225) 
            		{
            			case 1 :
            			    // cs.g:764:2: struct_member_declaration
            			    {
            			    	PushFollow(FOLLOW_struct_member_declaration_in_struct_member_declarations5584);
            			    	struct_member_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt225 >= 1 ) goto loop225;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee225 =
            		                new EarlyExitException(225, input);
            		            throw eee225;
            	    }
            	    cnt225++;
            	} while (true);

            	loop225:
            		;	// Stops C# compiler whining that label 'loop225' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 223, struct_member_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "struct_member_declarations"


    // $ANTLR start "struct_member_declaration"
    // cs.g:765:1: struct_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) ;
    public void struct_member_declaration() // throws RecognitionException [1]
    {   
        int struct_member_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 224) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:765:26: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) )
            // cs.g:766:2: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
            {
            	// cs.g:766:2: ( attributes )?
            	int alt226 = 2;
            	int LA226_0 = input.LA(1);

            	if ( (LA226_0 == 86) )
            	{
            	    alt226 = 1;
            	}
            	switch (alt226) 
            	{
            	    case 1 :
            	        // cs.g:766:2: attributes
            	        {
            	        	PushFollow(FOLLOW_attributes_in_struct_member_declaration5593);
            	        	attributes();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:766:17: (m= modifiers )?
            	int alt227 = 2;
            	int LA227_0 = input.LA(1);

            	if ( (LA227_0 == 64 || (LA227_0 >= 68 && LA227_0 <= 80)) )
            	{
            	    alt227 = 1;
            	}
            	switch (alt227) 
            	{
            	    case 1 :
            	        // cs.g:766:17: m= modifiers
            	        {
            	        	PushFollow(FOLLOW_modifiers_in_struct_member_declaration5600);
            	        	modifiers();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// cs.g:767:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
            	int alt230 = 12;
            	alt230 = dfa230.Predict(input);
            	switch (alt230) 
            	{
            	    case 1 :
            	        // cs.g:767:4: 'const' type constant_declarators ';'
            	        {
            	        	Match(input,81,FOLLOW_81_in_struct_member_declaration5606); if (state.failed) return ;
            	        	PushFollow(FOLLOW_type_in_struct_member_declaration5610);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	PushFollow(FOLLOW_constant_declarators_in_struct_member_declaration5614);
            	        	constant_declarators();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,SEMI,FOLLOW_SEMI_in_struct_member_declaration5618); if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:768:4: event_declaration
            	        {
            	        	PushFollow(FOLLOW_event_declaration_in_struct_member_declaration5623);
            	        	event_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 3 :
            	        // cs.g:769:4: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
            	        {
            	        	Match(input,67,FOLLOW_67_in_struct_member_declaration5630); if (state.failed) return ;
            	        	// cs.g:769:14: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
            	        	int alt228 = 4;
            	        	switch ( input.LA(1) ) 
            	        	{
            	        	case IDENTIFIER:
            	        	case Real_literal:
            	        	case NUMBER:
            	        	case Hex_number:
            	        	case Character_literal:
            	        	case STRINGLITERAL:
            	        	case Verbatim_string_literal:
            	        	case TRUE:
            	        	case FALSE:
            	        	case NULL:
            	        	case 65:
            	        	case 132:
            	        	case 133:
            	        	case 135:
            	        	case 136:
            	        	case 137:
            	        	case 138:
            	        	case 139:
            	        	case 140:
            	        	case 141:
            	        	case 142:
            	        	case 143:
            	        	case 144:
            	        	case 145:
            	        	case 146:
            	        	case 147:
            	        	case 148:
            	        	case 150:
            	        	case 151:
            	        	case 152:
            	        	case 154:
            	        	case 157:
            	        	case 158:
            	        	case 159:
            	        	case 160:
            	        	case 161:
            	        	case 162:
            	        	case 163:
            	        	case 164:
            	        	case 165:
            	        	case 166:
            	        	case 167:
            	        	case 168:
            	        	case 170:
            	        	case 177:
            	        	case 178:
            	        	case 195:
            	        	case 196:
            	        	case 197:
            	        	case 198:
            	        	case 199:
            	        	case 200:
            	        	case 201:
            	        	case 202:
            	        		{
            	        	    alt228 = 1;
            	        	    }
            	        	    break;
            	        	case 172:
            	        		{
            	        	    alt228 = 2;
            	        	    }
            	        	    break;
            	        	case 155:
            	        		{
            	        	    alt228 = 3;
            	        	    }
            	        	    break;
            	        	case 169:
            	        		{
            	        	    alt228 = 4;
            	        	    }
            	        	    break;
            	        		default:
            	        		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        		    NoViableAltException nvae_d228s0 =
            	        		        new NoViableAltException("", 228, 0, input);

            	        		    throw nvae_d228s0;
            	        	}

            	        	switch (alt228) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:769:15: method_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_method_declaration_in_struct_member_declaration5633);
            	        	        	method_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:770:9: interface_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_interface_declaration_in_struct_member_declaration5644);
            	        	        	interface_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 3 :
            	        	        // cs.g:771:9: class_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_class_declaration_in_struct_member_declaration5655);
            	        	        	class_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 4 :
            	        	        // cs.g:772:9: struct_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_struct_declaration_in_struct_member_declaration5666);
            	        	        	struct_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 4 :
            	        // cs.g:774:4: interface_declaration
            	        {
            	        	PushFollow(FOLLOW_interface_declaration_in_struct_member_declaration5673);
            	        	interface_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 5 :
            	        // cs.g:775:4: class_declaration
            	        {
            	        	PushFollow(FOLLOW_class_declaration_in_struct_member_declaration5679);
            	        	class_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 6 :
            	        // cs.g:776:4: 'void' method_declaration
            	        {
            	        	Match(input,82,FOLLOW_82_in_struct_member_declaration5686); if (state.failed) return ;
            	        	PushFollow(FOLLOW_method_declaration_in_struct_member_declaration5690);
            	        	method_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 7 :
            	        // cs.g:777:4: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
            	        {
            	        	PushFollow(FOLLOW_type_in_struct_member_declaration5695);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:777:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
            	        	int alt229 = 6;
            	        	alt229 = dfa229.Predict(input);
            	        	switch (alt229) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:777:11: ( member_name '(' )=> method_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_method_declaration_in_struct_member_declaration5709);
            	        	        	method_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:778:8: ( member_name '{' )=> property_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_property_declaration_in_struct_member_declaration5728);
            	        	        	property_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 3 :
            	        	        // cs.g:779:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_type_name_in_struct_member_declaration5751);
            	        	        	type_name();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;
            	        	        	Match(input,DOT,FOLLOW_DOT_in_struct_member_declaration5753); if (state.failed) return ;
            	        	        	PushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration5755);
            	        	        	indexer_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 4 :
            	        	        // cs.g:780:8: indexer_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration5764);
            	        	        	indexer_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 5 :
            	        	        // cs.g:781:11: field_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_field_declaration_in_struct_member_declaration5777);
            	        	        	field_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 6 :
            	        	        // cs.g:782:11: operator_declaration
            	        	        {
            	        	        	PushFollow(FOLLOW_operator_declaration_in_struct_member_declaration5795);
            	        	        	operator_declaration();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 8 :
            	        // cs.g:786:4: struct_declaration
            	        {
            	        	PushFollow(FOLLOW_struct_declaration_in_struct_member_declaration5813);
            	        	struct_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 9 :
            	        // cs.g:787:4: enum_declaration
            	        {
            	        	PushFollow(FOLLOW_enum_declaration_in_struct_member_declaration5819);
            	        	enum_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 10 :
            	        // cs.g:788:4: delegate_declaration
            	        {
            	        	PushFollow(FOLLOW_delegate_declaration_in_struct_member_declaration5826);
            	        	delegate_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 11 :
            	        // cs.g:789:4: conversion_operator_declaration
            	        {
            	        	PushFollow(FOLLOW_conversion_operator_declaration_in_struct_member_declaration5832);
            	        	conversion_operator_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 12 :
            	        // cs.g:790:4: constructor_declaration
            	        {
            	        	PushFollow(FOLLOW_constructor_declaration_in_struct_member_declaration5837);
            	        	constructor_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 224, struct_member_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "struct_member_declaration"


    // $ANTLR start "indexer_declaration"
    // cs.g:796:1: indexer_declaration : indexer_declarator '{' accessor_declarations '}' ;
    public void indexer_declaration() // throws RecognitionException [1]
    {   
        int indexer_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 225) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:796:20: ( indexer_declarator '{' accessor_declarations '}' )
            // cs.g:797:2: indexer_declarator '{' accessor_declarations '}'
            {
            	PushFollow(FOLLOW_indexer_declarator_in_indexer_declaration5854);
            	indexer_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,62,FOLLOW_62_in_indexer_declaration5858); if (state.failed) return ;
            	PushFollow(FOLLOW_accessor_declarations_in_indexer_declaration5862);
            	accessor_declarations();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,63,FOLLOW_63_in_indexer_declaration5866); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 225, indexer_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "indexer_declaration"


    // $ANTLR start "indexer_declarator"
    // cs.g:798:1: indexer_declarator : 'this' '[' formal_parameter_list ']' ;
    public void indexer_declarator() // throws RecognitionException [1]
    {   
        int indexer_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 226) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:798:19: ( 'this' '[' formal_parameter_list ']' )
            // cs.g:800:2: 'this' '[' formal_parameter_list ']'
            {
            	Match(input,83,FOLLOW_83_in_indexer_declarator5876); if (state.failed) return ;
            	Match(input,86,FOLLOW_86_in_indexer_declarator5880); if (state.failed) return ;
            	PushFollow(FOLLOW_formal_parameter_list_in_indexer_declarator5884);
            	formal_parameter_list();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,87,FOLLOW_87_in_indexer_declarator5888); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 226, indexer_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "indexer_declarator"


    // $ANTLR start "operator_declaration"
    // cs.g:803:1: operator_declaration : operator_declarator operator_body ;
    public void operator_declaration() // throws RecognitionException [1]
    {   
        int operator_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 227) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:803:21: ( operator_declarator operator_body )
            // cs.g:804:2: operator_declarator operator_body
            {
            	PushFollow(FOLLOW_operator_declarator_in_operator_declaration5899);
            	operator_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_operator_body_in_operator_declaration5903);
            	operator_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 227, operator_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "operator_declaration"


    // $ANTLR start "operator_declarator"
    // cs.g:805:1: operator_declarator : 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) ;
    public void operator_declarator() // throws RecognitionException [1]
    {   
        int operator_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 228) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:805:20: ( 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) )
            // cs.g:806:2: 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
            {
            	Match(input,173,FOLLOW_173_in_operator_declarator5911); if (state.failed) return ;
            	// cs.g:807:3: ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
            	int alt232 = 3;
            	switch ( input.LA(1) ) 
            	{
            	case MINUS:
            	case 104:
            		{
            	    alt232 = 1;
            	    }
            	    break;
            	case TRUE:
            	case FALSE:
            	case 102:
            	case 103:
            	case 105:
            	case 106:
            		{
            	    alt232 = 2;
            	    }
            	    break;
            	case GT:
            	case 99:
            	case 100:
            	case 116:
            	case 117:
            	case 118:
            	case 119:
            	case 120:
            	case 121:
            	case 124:
            	case 125:
            	case 126:
            	case 127:
            		{
            	    alt232 = 3;
            	    }
            	    break;
            		default:
            		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		    NoViableAltException nvae_d232s0 =
            		        new NoViableAltException("", 232, 0, input);

            		    throw nvae_d232s0;
            	}

            	switch (alt232) 
            	{
            	    case 1 :
            	        // cs.g:807:4: ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator )
            	        {
            	        	if ( input.LA(1) == MINUS || input.LA(1) == 104 ) 
            	        	{
            	        	    input.Consume();
            	        	    state.errorRecovery = false;state.failed = false;
            	        	}
            	        	else 
            	        	{
            	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	        	    throw mse;
            	        	}

            	        	Match(input,88,FOLLOW_88_in_operator_declarator5929); if (state.failed) return ;
            	        	PushFollow(FOLLOW_type_in_operator_declarator5933);
            	        	type();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	PushFollow(FOLLOW_identifier_in_operator_declarator5937);
            	        	identifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:807:42: ( binary_operator_declarator | unary_operator_declarator )
            	        	int alt231 = 2;
            	        	int LA231_0 = input.LA(1);

            	        	if ( (LA231_0 == 89) )
            	        	{
            	        	    alt231 = 1;
            	        	}
            	        	else if ( (LA231_0 == RPAREN) )
            	        	{
            	        	    alt231 = 2;
            	        	}
            	        	else 
            	        	{
            	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        	    NoViableAltException nvae_d231s0 =
            	        	        new NoViableAltException("", 231, 0, input);

            	        	    throw nvae_d231s0;
            	        	}
            	        	switch (alt231) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:807:43: binary_operator_declarator
            	        	        {
            	        	        	PushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator5940);
            	        	        	binary_operator_declarator();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;
            	        	    case 2 :
            	        	        // cs.g:807:72: unary_operator_declarator
            	        	        {
            	        	        	PushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator5944);
            	        	        	unary_operator_declarator();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:808:5: overloadable_unary_operator unary_operator_declarator
            	        {
            	        	PushFollow(FOLLOW_overloadable_unary_operator_in_operator_declarator5951);
            	        	overloadable_unary_operator();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	PushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator5955);
            	        	unary_operator_declarator();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 3 :
            	        // cs.g:809:5: overloadable_binary_operator binary_operator_declarator
            	        {
            	        	PushFollow(FOLLOW_overloadable_binary_operator_in_operator_declarator5961);
            	        	overloadable_binary_operator();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	PushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator5965);
            	        	binary_operator_declarator();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 228, operator_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "operator_declarator"


    // $ANTLR start "unary_operator_declarator"
    // cs.g:810:1: unary_operator_declarator : ')' ;
    public void unary_operator_declarator() // throws RecognitionException [1]
    {   
        int unary_operator_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 229) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:810:26: ( ')' )
            // cs.g:811:5: ')'
            {
            	Match(input,RPAREN,FOLLOW_RPAREN_in_unary_operator_declarator5977); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 229, unary_operator_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unary_operator_declarator"


    // $ANTLR start "overloadable_unary_operator"
    // cs.g:812:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
    public void overloadable_unary_operator() // throws RecognitionException [1]
    {   
        int overloadable_unary_operator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 230) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:812:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
            // cs.g:
            {
            	if ( (input.LA(1) >= TRUE && input.LA(1) <= FALSE) || (input.LA(1) >= 102 && input.LA(1) <= 103) || (input.LA(1) >= 105 && input.LA(1) <= 106) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 230, overloadable_unary_operator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "overloadable_unary_operator"


    // $ANTLR start "binary_operator_declarator"
    // cs.g:814:1: binary_operator_declarator : ',' type identifier ')' ;
    public void binary_operator_declarator() // throws RecognitionException [1]
    {   
        int binary_operator_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 231) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:814:27: ( ',' type identifier ')' )
            // cs.g:815:2: ',' type identifier ')'
            {
            	Match(input,89,FOLLOW_89_in_binary_operator_declarator6020); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_binary_operator_declarator6024);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_binary_operator_declarator6028);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_binary_operator_declarator6032); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 231, binary_operator_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "binary_operator_declarator"


    // $ANTLR start "overloadable_binary_operator"
    // cs.g:817:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
    public void overloadable_binary_operator() // throws RecognitionException [1]
    {   
        int overloadable_binary_operator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 232) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:817:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
            int alt233 = 14;
            alt233 = dfa233.Predict(input);
            switch (alt233) 
            {
                case 1 :
                    // cs.g:818:19: '*'
                    {
                    	Match(input,100,FOLLOW_100_in_overloadable_binary_operator6043); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:818:25: '/'
                    {
                    	Match(input,118,FOLLOW_118_in_overloadable_binary_operator6047); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:818:31: '%'
                    {
                    	Match(input,119,FOLLOW_119_in_overloadable_binary_operator6051); if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:818:37: '&'
                    {
                    	Match(input,117,FOLLOW_117_in_overloadable_binary_operator6055); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:818:43: '|'
                    {
                    	Match(input,127,FOLLOW_127_in_overloadable_binary_operator6059); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // cs.g:818:49: '^'
                    {
                    	Match(input,126,FOLLOW_126_in_overloadable_binary_operator6063); if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // cs.g:818:55: '<<'
                    {
                    	Match(input,120,FOLLOW_120_in_overloadable_binary_operator6067); if (state.failed) return ;

                    }
                    break;
                case 8 :
                    // cs.g:818:62: '>' '>'
                    {
                    	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator6071); if (state.failed) return ;
                    	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator6073); if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // cs.g:818:72: '=='
                    {
                    	Match(input,124,FOLLOW_124_in_overloadable_binary_operator6077); if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // cs.g:818:79: '!='
                    {
                    	Match(input,125,FOLLOW_125_in_overloadable_binary_operator6081); if (state.failed) return ;

                    }
                    break;
                case 11 :
                    // cs.g:818:86: '>'
                    {
                    	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator6085); if (state.failed) return ;

                    }
                    break;
                case 12 :
                    // cs.g:818:92: '<'
                    {
                    	Match(input,99,FOLLOW_99_in_overloadable_binary_operator6089); if (state.failed) return ;

                    }
                    break;
                case 13 :
                    // cs.g:818:98: '>='
                    {
                    	Match(input,116,FOLLOW_116_in_overloadable_binary_operator6093); if (state.failed) return ;

                    }
                    break;
                case 14 :
                    // cs.g:818:105: '<='
                    {
                    	Match(input,121,FOLLOW_121_in_overloadable_binary_operator6097); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 232, overloadable_binary_operator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "overloadable_binary_operator"


    // $ANTLR start "conversion_operator_declaration"
    // cs.g:820:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
    public void conversion_operator_declaration() // throws RecognitionException [1]
    {   
        int conversion_operator_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 233) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:820:32: ( conversion_operator_declarator operator_body )
            // cs.g:821:2: conversion_operator_declarator operator_body
            {
            	PushFollow(FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration6107);
            	conversion_operator_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_operator_body_in_conversion_operator_declaration6111);
            	operator_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 233, conversion_operator_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "conversion_operator_declaration"


    // $ANTLR start "conversion_operator_declarator"
    // cs.g:822:1: conversion_operator_declarator : ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' ;
    public void conversion_operator_declarator() // throws RecognitionException [1]
    {   
        int conversion_operator_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 234) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:822:31: ( ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' )
            // cs.g:823:2: ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')'
            {
            	if ( (input.LA(1) >= 174 && input.LA(1) <= 175) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}

            	Match(input,173,FOLLOW_173_in_conversion_operator_declarator6128); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_conversion_operator_declarator6132);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_conversion_operator_declarator6136); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_conversion_operator_declarator6140);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_conversion_operator_declarator6144);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_conversion_operator_declarator6148); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 234, conversion_operator_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "conversion_operator_declarator"


    // $ANTLR start "operator_body"
    // cs.g:824:1: operator_body : block ;
    public void operator_body() // throws RecognitionException [1]
    {   
        int operator_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 235) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:824:14: ( block )
            // cs.g:825:2: block
            {
            	PushFollow(FOLLOW_block_in_operator_body6156);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 235, operator_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "operator_body"


    // $ANTLR start "constructor_declaration"
    // cs.g:828:1: constructor_declaration : constructor_declarator constructor_body ;
    public void constructor_declaration() // throws RecognitionException [1]
    {   
        int constructor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 236) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:828:24: ( constructor_declarator constructor_body )
            // cs.g:829:2: constructor_declarator constructor_body
            {
            	PushFollow(FOLLOW_constructor_declarator_in_constructor_declaration6166);
            	constructor_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_constructor_body_in_constructor_declaration6170);
            	constructor_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 236, constructor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constructor_declaration"


    // $ANTLR start "constructor_declarator"
    // cs.g:830:1: constructor_declarator : identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? ;
    public void constructor_declarator() // throws RecognitionException [1]
    {   
        int constructor_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 237) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:830:23: ( identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? )
            // cs.g:831:2: identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )?
            {
            	PushFollow(FOLLOW_identifier_in_constructor_declarator6178);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_constructor_declarator6182); if (state.failed) return ;
            	// cs.g:831:21: ( formal_parameter_list )?
            	int alt234 = 2;
            	int LA234_0 = input.LA(1);

            	if ( (LA234_0 == IDENTIFIER || LA234_0 == 65 || (LA234_0 >= 82 && LA234_0 <= 83) || LA234_0 == 86 || (LA234_0 >= 91 && LA234_0 <= 92) || (LA234_0 >= 132 && LA234_0 <= 133) || (LA234_0 >= 135 && LA234_0 <= 148) || (LA234_0 >= 150 && LA234_0 <= 152) || LA234_0 == 154 || (LA234_0 >= 157 && LA234_0 <= 168) || (LA234_0 >= 170 && LA234_0 <= 171) || (LA234_0 >= 177 && LA234_0 <= 178) || (LA234_0 >= 195 && LA234_0 <= 202)) )
            	{
            	    alt234 = 1;
            	}
            	switch (alt234) 
            	{
            	    case 1 :
            	        // cs.g:831:21: formal_parameter_list
            	        {
            	        	PushFollow(FOLLOW_formal_parameter_list_in_constructor_declarator6186);
            	        	formal_parameter_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_constructor_declarator6191); if (state.failed) return ;
            	// cs.g:831:52: ( constructor_initializer )?
            	int alt235 = 2;
            	int LA235_0 = input.LA(1);

            	if ( (LA235_0 == 90) )
            	{
            	    alt235 = 1;
            	}
            	switch (alt235) 
            	{
            	    case 1 :
            	        // cs.g:831:52: constructor_initializer
            	        {
            	        	PushFollow(FOLLOW_constructor_initializer_in_constructor_declarator6195);
            	        	constructor_initializer();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 237, constructor_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constructor_declarator"


    // $ANTLR start "constructor_initializer"
    // cs.g:832:1: constructor_initializer : ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' ;
    public void constructor_initializer() // throws RecognitionException [1]
    {   
        int constructor_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 238) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:832:24: ( ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' )
            // cs.g:833:2: ':' ( 'base' | 'this' ) '(' ( argument_list )? ')'
            {
            	Match(input,90,FOLLOW_90_in_constructor_initializer6204); if (state.failed) return ;
            	if ( input.LA(1) == 83 || input.LA(1) == 85 ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}

            	Match(input,88,FOLLOW_88_in_constructor_initializer6218); if (state.failed) return ;
            	// cs.g:833:34: ( argument_list )?
            	int alt236 = 2;
            	int LA236_0 = input.LA(1);

            	if ( ((LA236_0 >= IDENTIFIER && LA236_0 <= NULL) || LA236_0 == MINUS || LA236_0 == 65 || LA236_0 == 68 || LA236_0 == 83 || LA236_0 == 85 || LA236_0 == 88 || (LA236_0 >= 91 && LA236_0 <= 98) || LA236_0 == 100 || (LA236_0 >= 102 && LA236_0 <= 106) || LA236_0 == 117 || (LA236_0 >= 132 && LA236_0 <= 133) || (LA236_0 >= 135 && LA236_0 <= 148) || (LA236_0 >= 150 && LA236_0 <= 152) || LA236_0 == 154 || (LA236_0 >= 157 && LA236_0 <= 168) || LA236_0 == 170 || (LA236_0 >= 177 && LA236_0 <= 178) || (LA236_0 >= 195 && LA236_0 <= 202)) )
            	{
            	    alt236 = 1;
            	}
            	switch (alt236) 
            	{
            	    case 1 :
            	        // cs.g:833:34: argument_list
            	        {
            	        	PushFollow(FOLLOW_argument_list_in_constructor_initializer6222);
            	        	argument_list();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_constructor_initializer6227); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 238, constructor_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constructor_initializer"


    // $ANTLR start "constructor_body"
    // cs.g:834:1: constructor_body : block ;
    public void constructor_body() // throws RecognitionException [1]
    {   
        int constructor_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 239) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:834:17: ( block )
            // cs.g:835:2: block
            {
            	PushFollow(FOLLOW_block_in_constructor_body6235);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 239, constructor_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constructor_body"


    // $ANTLR start "destructor_declaration"
    // cs.g:844:1: destructor_declaration : '~' identifier '(' ')' destructor_body ;
    public void destructor_declaration() // throws RecognitionException [1]
    {   
        int destructor_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 240) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:844:23: ( '~' identifier '(' ')' destructor_body )
            // cs.g:845:2: '~' identifier '(' ')' destructor_body
            {
            	Match(input,106,FOLLOW_106_in_destructor_declaration6251); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_destructor_declaration6254);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_destructor_declaration6258); if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_destructor_declaration6262); if (state.failed) return ;
            	PushFollow(FOLLOW_destructor_body_in_destructor_declaration6267);
            	destructor_body();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 240, destructor_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "destructor_declaration"


    // $ANTLR start "destructor_body"
    // cs.g:846:1: destructor_body : block ;
    public void destructor_body() // throws RecognitionException [1]
    {   
        int destructor_body_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 241) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:846:16: ( block )
            // cs.g:847:2: block
            {
            	PushFollow(FOLLOW_block_in_destructor_body6275);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 241, destructor_body_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "destructor_body"


    // $ANTLR start "invocation_expression"
    // cs.g:850:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
    public void invocation_expression() // throws RecognitionException [1]
    {   
        int invocation_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 242) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:850:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
            // cs.g:851:2: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
            {
            	PushFollow(FOLLOW_invocation_start_in_invocation_expression6285);
            	invocation_start();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:851:21: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
            	do 
            	{
            	    int alt237 = 3;
            	    int LA237_0 = input.LA(1);

            	    if ( (LA237_0 == 88) )
            	    {
            	        int LA237_1 = input.LA(2);

            	        if ( (synpred31_cs()) )
            	        {
            	            alt237 = 1;
            	        }


            	    }
            	    else if ( ((LA237_0 >= DOT && LA237_0 <= PTR) || LA237_0 == 86) )
            	    {
            	        alt237 = 2;
            	    }


            	    switch (alt237) 
            		{
            			case 1 :
            			    // cs.g:851:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
            			    {
            			    	// cs.g:851:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
            			    	// cs.g:851:23: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
            			    	{
            			    		PushFollow(FOLLOW_arguments_in_invocation_expression6307);
            			    		arguments();
            			    		state._fsp--;
            			    		if (state.failed) return ;
            			    		PushFollow(FOLLOW_invocation_part_in_invocation_expression6311);
            			    		invocation_part();
            			    		state._fsp--;
            			    		if (state.failed) return ;

            			    	}


            			    }
            			    break;
            			case 2 :
            			    // cs.g:852:9: invocation_part
            			    {
            			    	PushFollow(FOLLOW_invocation_part_in_invocation_expression6322);
            			    	invocation_part();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop237;
            	    }
            	} while (true);

            	loop237:
            		;	// Stops C# compiler whining that label 'loop237' has no statements

            	PushFollow(FOLLOW_arguments_in_invocation_expression6328);
            	arguments();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 242, invocation_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "invocation_expression"


    // $ANTLR start "invocation_start"
    // cs.g:853:1: invocation_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression );
    public void invocation_start() // throws RecognitionException [1]
    {   
        int invocation_start_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 243) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:853:17: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression )
            int alt239 = 6;
            switch ( input.LA(1) ) 
            {
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            	{
                alt239 = 1;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
            	{
                int LA239_2 = input.LA(2);

                if ( ((LA239_2 >= DOT && LA239_2 <= PTR) || LA239_2 == 84 || LA239_2 == 86 || LA239_2 == 88) )
                {
                    alt239 = 5;
                }
                else if ( (LA239_2 == 99) && (synpred32_cs()) )
                {
                    alt239 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d239s2 =
                        new NoViableAltException("", 239, 2, input);

                    throw nvae_d239s2;
                }
                }
                break;
            case 83:
            	{
                alt239 = 3;
                }
                break;
            case 85:
            	{
                alt239 = 4;
                }
                break;
            case 98:
            	{
                alt239 = 6;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d239s0 =
            	        new NoViableAltException("", 239, 0, input);

            	    throw nvae_d239s0;
            }

            switch (alt239) 
            {
                case 1 :
                    // cs.g:854:2: predefined_type
                    {
                    	PushFollow(FOLLOW_predefined_type_in_invocation_start6336);
                    	predefined_type();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:855:4: ( identifier '<' )=> identifier generic_argument_list
                    {
                    	PushFollow(FOLLOW_identifier_in_invocation_start6353);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	PushFollow(FOLLOW_generic_argument_list_in_invocation_start6357);
                    	generic_argument_list();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:856:4: 'this'
                    {
                    	Match(input,83,FOLLOW_83_in_invocation_start6362); if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:857:4: 'base'
                    {
                    	Match(input,85,FOLLOW_85_in_invocation_start6368); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:858:4: identifier ( '::' identifier )?
                    {
                    	PushFollow(FOLLOW_identifier_in_invocation_start6373);
                    	identifier();
                    	state._fsp--;
                    	if (state.failed) return ;
                    	// cs.g:858:17: ( '::' identifier )?
                    	int alt238 = 2;
                    	int LA238_0 = input.LA(1);

                    	if ( (LA238_0 == 84) )
                    	{
                    	    alt238 = 1;
                    	}
                    	switch (alt238) 
                    	{
                    	    case 1 :
                    	        // cs.g:858:18: '::' identifier
                    	        {
                    	        	Match(input,84,FOLLOW_84_in_invocation_start6378); if (state.failed) return ;
                    	        	PushFollow(FOLLOW_identifier_in_invocation_start6382);
                    	        	identifier();
                    	        	state._fsp--;
                    	        	if (state.failed) return ;

                    	        }
                    	        break;

                    	}


                    }
                    break;
                case 6 :
                    // cs.g:859:4: typeof_expression
                    {
                    	PushFollow(FOLLOW_typeof_expression_in_invocation_start6389);
                    	typeof_expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 243, invocation_start_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "invocation_start"


    // $ANTLR start "invocation_part"
    // cs.g:861:1: invocation_part : ( access_identifier | brackets );
    public void invocation_part() // throws RecognitionException [1]
    {   
        int invocation_part_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 244) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:861:16: ( access_identifier | brackets )
            int alt240 = 2;
            int LA240_0 = input.LA(1);

            if ( ((LA240_0 >= DOT && LA240_0 <= PTR)) )
            {
                alt240 = 1;
            }
            else if ( (LA240_0 == 86) )
            {
                alt240 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d240s0 =
                    new NoViableAltException("", 240, 0, input);

                throw nvae_d240s0;
            }
            switch (alt240) 
            {
                case 1 :
                    // cs.g:862:3: access_identifier
                    {
                    	PushFollow(FOLLOW_access_identifier_in_invocation_part6412);
                    	access_identifier();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:863:4: brackets
                    {
                    	PushFollow(FOLLOW_brackets_in_invocation_part6417);
                    	brackets();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 244, invocation_part_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "invocation_part"


    // $ANTLR start "statement"
    // cs.g:867:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );
    public void statement() // throws RecognitionException [1]
    {   
        int statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 245) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:867:10: ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement )
            int alt241 = 3;
            alt241 = dfa241.Predict(input);
            switch (alt241) 
            {
                case 1 :
                    // cs.g:868:2: ( declaration_statement )=> declaration_statement
                    {
                    	PushFollow(FOLLOW_declaration_statement_in_statement6434);
                    	declaration_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:869:4: ( identifier ':' )=> labeled_statement
                    {
                    	PushFollow(FOLLOW_labeled_statement_in_statement6449);
                    	labeled_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:870:4: embedded_statement
                    {
                    	PushFollow(FOLLOW_embedded_statement_in_statement6454);
                    	embedded_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 245, statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "statement"


    // $ANTLR start "embedded_statement"
    // cs.g:872:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );
    public void embedded_statement() // throws RecognitionException [1]
    {   
        int embedded_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 246) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:872:19: ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement )
            int alt242 = 13;
            alt242 = dfa242.Predict(input);
            switch (alt242) 
            {
                case 1 :
                    // cs.g:873:2: block
                    {
                    	PushFollow(FOLLOW_block_in_embedded_statement6464);
                    	block();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:874:4: selection_statement
                    {
                    	PushFollow(FOLLOW_selection_statement_in_embedded_statement6469);
                    	selection_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:875:4: iteration_statement
                    {
                    	PushFollow(FOLLOW_iteration_statement_in_embedded_statement6475);
                    	iteration_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:876:4: jump_statement
                    {
                    	PushFollow(FOLLOW_jump_statement_in_embedded_statement6481);
                    	jump_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:877:4: try_statement
                    {
                    	PushFollow(FOLLOW_try_statement_in_embedded_statement6488);
                    	try_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // cs.g:878:4: checked_statement
                    {
                    	PushFollow(FOLLOW_checked_statement_in_embedded_statement6493);
                    	checked_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // cs.g:879:4: unchecked_statement
                    {
                    	PushFollow(FOLLOW_unchecked_statement_in_embedded_statement6498);
                    	unchecked_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 8 :
                    // cs.g:880:4: lock_statement
                    {
                    	PushFollow(FOLLOW_lock_statement_in_embedded_statement6503);
                    	lock_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // cs.g:881:4: using_statement
                    {
                    	PushFollow(FOLLOW_using_statement_in_embedded_statement6508);
                    	using_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // cs.g:882:4: yield_statement
                    {
                    	PushFollow(FOLLOW_yield_statement_in_embedded_statement6514);
                    	yield_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 11 :
                    // cs.g:883:4: unsafe_statement
                    {
                    	PushFollow(FOLLOW_unsafe_statement_in_embedded_statement6520);
                    	unsafe_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 12 :
                    // cs.g:884:4: fixed_statement
                    {
                    	PushFollow(FOLLOW_fixed_statement_in_embedded_statement6525);
                    	fixed_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 13 :
                    // cs.g:885:4: expression_statement
                    {
                    	PushFollow(FOLLOW_expression_statement_in_embedded_statement6530);
                    	expression_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 246, embedded_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "embedded_statement"


    // $ANTLR start "fixed_statement"
    // cs.g:887:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
    public void fixed_statement() // throws RecognitionException [1]
    {   
        int fixed_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 247) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:887:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
            // cs.g:888:2: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
            {
            	Match(input,176,FOLLOW_176_in_fixed_statement6540); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_fixed_statement6544); if (state.failed) return ;
            	PushFollow(FOLLOW_pointer_type_in_fixed_statement6548);
            	pointer_type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_fixed_pointer_declarators_in_fixed_statement6550);
            	fixed_pointer_declarators();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_fixed_statement6554); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_fixed_statement6558);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 247, fixed_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "fixed_statement"


    // $ANTLR start "fixed_pointer_declarators"
    // cs.g:889:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
    public void fixed_pointer_declarators() // throws RecognitionException [1]
    {   
        int fixed_pointer_declarators_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 248) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:889:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
            // cs.g:890:2: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
            {
            	PushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators6566);
            	fixed_pointer_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:890:29: ( ',' fixed_pointer_declarator )*
            	do 
            	{
            	    int alt243 = 2;
            	    int LA243_0 = input.LA(1);

            	    if ( (LA243_0 == 89) )
            	    {
            	        alt243 = 1;
            	    }


            	    switch (alt243) 
            		{
            			case 1 :
            			    // cs.g:890:30: ',' fixed_pointer_declarator
            			    {
            			    	Match(input,89,FOLLOW_89_in_fixed_pointer_declarators6571); if (state.failed) return ;
            			    	PushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators6575);
            			    	fixed_pointer_declarator();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop243;
            	    }
            	} while (true);

            	loop243:
            		;	// Stops C# compiler whining that label 'loop243' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 248, fixed_pointer_declarators_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "fixed_pointer_declarators"


    // $ANTLR start "fixed_pointer_declarator"
    // cs.g:891:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
    public void fixed_pointer_declarator() // throws RecognitionException [1]
    {   
        int fixed_pointer_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 249) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:891:25: ( identifier '=' fixed_pointer_initializer )
            // cs.g:892:2: identifier '=' fixed_pointer_initializer
            {
            	PushFollow(FOLLOW_identifier_in_fixed_pointer_declarator6585);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,66,FOLLOW_66_in_fixed_pointer_declarator6589); if (state.failed) return ;
            	PushFollow(FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator6593);
            	fixed_pointer_initializer();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 249, fixed_pointer_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "fixed_pointer_declarator"


    // $ANTLR start "fixed_pointer_initializer"
    // cs.g:893:1: fixed_pointer_initializer : expression ;
    public void fixed_pointer_initializer() // throws RecognitionException [1]
    {   
        int fixed_pointer_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 250) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:893:26: ( expression )
            // cs.g:895:2: expression
            {
            	PushFollow(FOLLOW_expression_in_fixed_pointer_initializer6603);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 250, fixed_pointer_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "fixed_pointer_initializer"


    // $ANTLR start "unsafe_statement"
    // cs.g:896:1: unsafe_statement : 'unsafe' block ;
    public void unsafe_statement() // throws RecognitionException [1]
    {   
        int unsafe_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 251) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:896:17: ( 'unsafe' block )
            // cs.g:897:2: 'unsafe' block
            {
            	Match(input,73,FOLLOW_73_in_unsafe_statement6610); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_unsafe_statement6614);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 251, unsafe_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unsafe_statement"


    // $ANTLR start "labeled_statement"
    // cs.g:898:1: labeled_statement : identifier ':' statement ;
    public void labeled_statement() // throws RecognitionException [1]
    {   
        int labeled_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 252) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:898:18: ( identifier ':' statement )
            // cs.g:899:2: identifier ':' statement
            {
            	PushFollow(FOLLOW_identifier_in_labeled_statement6621);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,90,FOLLOW_90_in_labeled_statement6625); if (state.failed) return ;
            	PushFollow(FOLLOW_statement_in_labeled_statement6629);
            	statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 252, labeled_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "labeled_statement"


    // $ANTLR start "declaration_statement"
    // cs.g:900:1: declaration_statement : ( local_variable_declaration | local_constant_declaration ) ';' ;
    public void declaration_statement() // throws RecognitionException [1]
    {   
        int declaration_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 253) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:900:22: ( ( local_variable_declaration | local_constant_declaration ) ';' )
            // cs.g:901:2: ( local_variable_declaration | local_constant_declaration ) ';'
            {
            	// cs.g:901:2: ( local_variable_declaration | local_constant_declaration )
            	int alt244 = 2;
            	int LA244_0 = input.LA(1);

            	if ( (LA244_0 == IDENTIFIER || LA244_0 == 65 || LA244_0 == 82 || (LA244_0 >= 132 && LA244_0 <= 133) || (LA244_0 >= 135 && LA244_0 <= 148) || (LA244_0 >= 150 && LA244_0 <= 152) || LA244_0 == 154 || (LA244_0 >= 157 && LA244_0 <= 168) || LA244_0 == 170 || (LA244_0 >= 177 && LA244_0 <= 178) || (LA244_0 >= 195 && LA244_0 <= 202)) )
            	{
            	    alt244 = 1;
            	}
            	else if ( (LA244_0 == 81) )
            	{
            	    alt244 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d244s0 =
            	        new NoViableAltException("", 244, 0, input);

            	    throw nvae_d244s0;
            	}
            	switch (alt244) 
            	{
            	    case 1 :
            	        // cs.g:901:3: local_variable_declaration
            	        {
            	        	PushFollow(FOLLOW_local_variable_declaration_in_declaration_statement6638);
            	        	local_variable_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:902:4: local_constant_declaration
            	        {
            	        	PushFollow(FOLLOW_local_constant_declaration_in_declaration_statement6644);
            	        	local_constant_declaration();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_declaration_statement6647); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 253, declaration_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "declaration_statement"


    // $ANTLR start "local_variable_declaration"
    // cs.g:903:1: local_variable_declaration : local_variable_type local_variable_declarators ;
    public void local_variable_declaration() // throws RecognitionException [1]
    {   
        int local_variable_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 254) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:903:27: ( local_variable_type local_variable_declarators )
            // cs.g:904:2: local_variable_type local_variable_declarators
            {
            	PushFollow(FOLLOW_local_variable_type_in_local_variable_declaration6655);
            	local_variable_type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_local_variable_declarators_in_local_variable_declaration6659);
            	local_variable_declarators();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 254, local_variable_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_variable_declaration"


    // $ANTLR start "local_variable_type"
    // cs.g:905:1: local_variable_type : ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type );
    public void local_variable_type() // throws RecognitionException [1]
    {   
        int local_variable_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 255) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:905:20: ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type )
            int alt245 = 3;
            switch ( input.LA(1) ) 
            {
            case 177:
            	{
                int LA245_1 = input.LA(2);

                if ( (synpred35_cs()) )
                {
                    alt245 = 1;
                }
                else if ( (true) )
                {
                    alt245 = 3;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d245s1 =
                        new NoViableAltException("", 245, 1, input);

                    throw nvae_d245s1;
                }
                }
                break;
            case 178:
            	{
                int LA245_2 = input.LA(2);

                if ( (synpred36_cs()) )
                {
                    alt245 = 2;
                }
                else if ( (true) )
                {
                    alt245 = 3;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d245s2 =
                        new NoViableAltException("", 245, 2, input);

                    throw nvae_d245s2;
                }
                }
                break;
            case IDENTIFIER:
            case 65:
            case 82:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 170:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            	{
                alt245 = 3;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d245s0 =
            	        new NoViableAltException("", 245, 0, input);

            	    throw nvae_d245s0;
            }

            switch (alt245) 
            {
                case 1 :
                    // cs.g:906:2: ( 'var' )=> 'var'
                    {
                    	Match(input,177,FOLLOW_177_in_local_variable_type6673); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:907:4: ( 'dynamic' )=> 'dynamic'
                    {
                    	Match(input,178,FOLLOW_178_in_local_variable_type6684); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:908:4: type
                    {
                    	PushFollow(FOLLOW_type_in_local_variable_type6689);
                    	type();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 255, local_variable_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_variable_type"


    // $ANTLR start "local_variable_declarators"
    // cs.g:909:1: local_variable_declarators : local_variable_declarator ( ',' local_variable_declarator )* ;
    public void local_variable_declarators() // throws RecognitionException [1]
    {   
        int local_variable_declarators_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 256) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:909:27: ( local_variable_declarator ( ',' local_variable_declarator )* )
            // cs.g:910:2: local_variable_declarator ( ',' local_variable_declarator )*
            {
            	PushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators6697);
            	local_variable_declarator();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:910:28: ( ',' local_variable_declarator )*
            	do 
            	{
            	    int alt246 = 2;
            	    int LA246_0 = input.LA(1);

            	    if ( (LA246_0 == 89) )
            	    {
            	        alt246 = 1;
            	    }


            	    switch (alt246) 
            		{
            			case 1 :
            			    // cs.g:910:29: ',' local_variable_declarator
            			    {
            			    	Match(input,89,FOLLOW_89_in_local_variable_declarators6700); if (state.failed) return ;
            			    	PushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators6702);
            			    	local_variable_declarator();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop246;
            	    }
            	} while (true);

            	loop246:
            		;	// Stops C# compiler whining that label 'loop246' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 256, local_variable_declarators_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_variable_declarators"


    // $ANTLR start "local_variable_declarator"
    // cs.g:911:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? ;
    public void local_variable_declarator() // throws RecognitionException [1]
    {   
        int local_variable_declarator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 257) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:911:26: ( identifier ( '=' local_variable_initializer )? )
            // cs.g:912:2: identifier ( '=' local_variable_initializer )?
            {
            	PushFollow(FOLLOW_identifier_in_local_variable_declarator6712);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:912:13: ( '=' local_variable_initializer )?
            	int alt247 = 2;
            	int LA247_0 = input.LA(1);

            	if ( (LA247_0 == 66) )
            	{
            	    alt247 = 1;
            	}
            	switch (alt247) 
            	{
            	    case 1 :
            	        // cs.g:912:14: '=' local_variable_initializer
            	        {
            	        	Match(input,66,FOLLOW_66_in_local_variable_declarator6715); if (state.failed) return ;
            	        	PushFollow(FOLLOW_local_variable_initializer_in_local_variable_declarator6719);
            	        	local_variable_initializer();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 257, local_variable_declarator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_variable_declarator"


    // $ANTLR start "local_variable_initializer"
    // cs.g:913:1: local_variable_initializer : ( expression | array_initializer | stackalloc_initializer );
    public void local_variable_initializer() // throws RecognitionException [1]
    {   
        int local_variable_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 258) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:913:27: ( expression | array_initializer | stackalloc_initializer )
            int alt248 = 3;
            switch ( input.LA(1) ) 
            {
            case IDENTIFIER:
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            case MINUS:
            case 65:
            case 68:
            case 83:
            case 85:
            case 88:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 117:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 170:
            case 177:
            case 178:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            	{
                alt248 = 1;
                }
                break;
            case 62:
            	{
                alt248 = 2;
                }
                break;
            case 179:
            	{
                alt248 = 3;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d248s0 =
            	        new NoViableAltException("", 248, 0, input);

            	    throw nvae_d248s0;
            }

            switch (alt248) 
            {
                case 1 :
                    // cs.g:914:2: expression
                    {
                    	PushFollow(FOLLOW_expression_in_local_variable_initializer6730);
                    	expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:915:4: array_initializer
                    {
                    	PushFollow(FOLLOW_array_initializer_in_local_variable_initializer6735);
                    	array_initializer();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:916:4: stackalloc_initializer
                    {
                    	PushFollow(FOLLOW_stackalloc_initializer_in_local_variable_initializer6741);
                    	stackalloc_initializer();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 258, local_variable_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_variable_initializer"


    // $ANTLR start "stackalloc_initializer"
    // cs.g:917:1: stackalloc_initializer : 'stackalloc' unmanaged_type '[' expression ']' ;
    public void stackalloc_initializer() // throws RecognitionException [1]
    {   
        int stackalloc_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 259) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:917:23: ( 'stackalloc' unmanaged_type '[' expression ']' )
            // cs.g:918:2: 'stackalloc' unmanaged_type '[' expression ']'
            {
            	Match(input,179,FOLLOW_179_in_stackalloc_initializer6748); if (state.failed) return ;
            	PushFollow(FOLLOW_unmanaged_type_in_stackalloc_initializer6752);
            	unmanaged_type();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,86,FOLLOW_86_in_stackalloc_initializer6756); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_stackalloc_initializer6760);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,87,FOLLOW_87_in_stackalloc_initializer6764); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 259, stackalloc_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "stackalloc_initializer"


    // $ANTLR start "local_constant_declaration"
    // cs.g:919:1: local_constant_declaration : 'const' type constant_declarators ;
    public void local_constant_declaration() // throws RecognitionException [1]
    {   
        int local_constant_declaration_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 260) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:919:27: ( 'const' type constant_declarators )
            // cs.g:920:2: 'const' type constant_declarators
            {
            	Match(input,81,FOLLOW_81_in_local_constant_declaration6772); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_local_constant_declaration6776);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_constant_declarators_in_local_constant_declaration6780);
            	constant_declarators();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 260, local_constant_declaration_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_constant_declaration"


    // $ANTLR start "expression_statement"
    // cs.g:921:1: expression_statement : expression ';' ;
    public void expression_statement() // throws RecognitionException [1]
    {   
        int expression_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 261) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:921:21: ( expression ';' )
            // cs.g:922:2: expression ';'
            {
            	PushFollow(FOLLOW_expression_in_expression_statement6788);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_expression_statement6792); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 261, expression_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "expression_statement"


    // $ANTLR start "statement_expression"
    // cs.g:925:1: statement_expression : expression ;
    public void statement_expression() // throws RecognitionException [1]
    {   
        int statement_expression_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 262) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:925:21: ( expression )
            // cs.g:926:2: expression
            {
            	PushFollow(FOLLOW_expression_in_statement_expression6802);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 262, statement_expression_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "statement_expression"


    // $ANTLR start "selection_statement"
    // cs.g:928:1: selection_statement : ( if_statement | switch_statement );
    public void selection_statement() // throws RecognitionException [1]
    {   
        int selection_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 263) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:928:20: ( if_statement | switch_statement )
            int alt249 = 2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0 == IF) )
            {
                alt249 = 1;
            }
            else if ( (LA249_0 == 181) )
            {
                alt249 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d249s0 =
                    new NoViableAltException("", 249, 0, input);

                throw nvae_d249s0;
            }
            switch (alt249) 
            {
                case 1 :
                    // cs.g:929:2: if_statement
                    {
                    	PushFollow(FOLLOW_if_statement_in_selection_statement6811);
                    	if_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:930:4: switch_statement
                    {
                    	PushFollow(FOLLOW_switch_statement_in_selection_statement6816);
                    	switch_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 263, selection_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "selection_statement"


    // $ANTLR start "if_statement"
    // cs.g:931:1: if_statement : 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? ;
    public void if_statement() // throws RecognitionException [1]
    {   
        int if_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 264) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:931:13: ( 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? )
            // cs.g:933:2: 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )?
            {
            	Match(input,IF,FOLLOW_IF_in_if_statement6826); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_if_statement6830); if (state.failed) return ;
            	PushFollow(FOLLOW_boolean_expression_in_if_statement6834);
            	boolean_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_if_statement6838); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_if_statement6842);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:933:61: ( ( 'else' )=> else_statement )?
            	int alt250 = 2;
            	int LA250_0 = input.LA(1);

            	if ( (LA250_0 == 180) )
            	{
            	    int LA250_1 = input.LA(2);

            	    if ( (synpred37_cs()) )
            	    {
            	        alt250 = 1;
            	    }
            	}
            	switch (alt250) 
            	{
            	    case 1 :
            	        // cs.g:933:62: ( 'else' )=> else_statement
            	        {
            	        	PushFollow(FOLLOW_else_statement_in_if_statement6851);
            	        	else_statement();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 264, if_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "if_statement"


    // $ANTLR start "else_statement"
    // cs.g:935:1: else_statement : 'else' embedded_statement ;
    public void else_statement() // throws RecognitionException [1]
    {   
        int else_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 265) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:935:15: ( 'else' embedded_statement )
            // cs.g:936:2: 'else' embedded_statement
            {
            	Match(input,180,FOLLOW_180_in_else_statement6862); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_else_statement6866);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 265, else_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "else_statement"


    // $ANTLR start "switch_statement"
    // cs.g:937:1: switch_statement : 'switch' '(' expression ')' switch_block ;
    public void switch_statement() // throws RecognitionException [1]
    {   
        int switch_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 266) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:937:17: ( 'switch' '(' expression ')' switch_block )
            // cs.g:938:2: 'switch' '(' expression ')' switch_block
            {
            	Match(input,181,FOLLOW_181_in_switch_statement6874); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_switch_statement6878); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_switch_statement6882);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_switch_statement6886); if (state.failed) return ;
            	PushFollow(FOLLOW_switch_block_in_switch_statement6890);
            	switch_block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 266, switch_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "switch_statement"


    // $ANTLR start "switch_block"
    // cs.g:939:1: switch_block : '{' ( switch_sections )? '}' ;
    public void switch_block() // throws RecognitionException [1]
    {   
        int switch_block_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 267) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:939:13: ( '{' ( switch_sections )? '}' )
            // cs.g:940:2: '{' ( switch_sections )? '}'
            {
            	Match(input,62,FOLLOW_62_in_switch_block6898); if (state.failed) return ;
            	// cs.g:940:8: ( switch_sections )?
            	int alt251 = 2;
            	int LA251_0 = input.LA(1);

            	if ( (LA251_0 == 96 || LA251_0 == 182) )
            	{
            	    alt251 = 1;
            	}
            	switch (alt251) 
            	{
            	    case 1 :
            	        // cs.g:940:8: switch_sections
            	        {
            	        	PushFollow(FOLLOW_switch_sections_in_switch_block6902);
            	        	switch_sections();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,63,FOLLOW_63_in_switch_block6907); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 267, switch_block_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "switch_block"


    // $ANTLR start "switch_sections"
    // cs.g:941:1: switch_sections : ( switch_section )+ ;
    public void switch_sections() // throws RecognitionException [1]
    {   
        int switch_sections_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 268) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:941:16: ( ( switch_section )+ )
            // cs.g:942:2: ( switch_section )+
            {
            	// cs.g:942:2: ( switch_section )+
            	int cnt252 = 0;
            	do 
            	{
            	    int alt252 = 2;
            	    int LA252_0 = input.LA(1);

            	    if ( (LA252_0 == 96 || LA252_0 == 182) )
            	    {
            	        alt252 = 1;
            	    }


            	    switch (alt252) 
            		{
            			case 1 :
            			    // cs.g:942:2: switch_section
            			    {
            			    	PushFollow(FOLLOW_switch_section_in_switch_sections6915);
            			    	switch_section();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt252 >= 1 ) goto loop252;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee252 =
            		                new EarlyExitException(252, input);
            		            throw eee252;
            	    }
            	    cnt252++;
            	} while (true);

            	loop252:
            		;	// Stops C# compiler whining that label 'loop252' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 268, switch_sections_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "switch_sections"


    // $ANTLR start "switch_section"
    // cs.g:943:1: switch_section : switch_labels statement_list ;
    public void switch_section() // throws RecognitionException [1]
    {   
        int switch_section_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 269) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:943:15: ( switch_labels statement_list )
            // cs.g:944:2: switch_labels statement_list
            {
            	PushFollow(FOLLOW_switch_labels_in_switch_section6924);
            	switch_labels();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_statement_list_in_switch_section6928);
            	statement_list();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 269, switch_section_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "switch_section"


    // $ANTLR start "switch_labels"
    // cs.g:945:1: switch_labels : ( switch_label )+ ;
    public void switch_labels() // throws RecognitionException [1]
    {   
        int switch_labels_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 270) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:945:14: ( ( switch_label )+ )
            // cs.g:946:2: ( switch_label )+
            {
            	// cs.g:946:2: ( switch_label )+
            	int cnt253 = 0;
            	do 
            	{
            	    int alt253 = 2;
            	    int LA253_0 = input.LA(1);

            	    if ( (LA253_0 == 96) )
            	    {
            	        int LA253_2 = input.LA(2);

            	        if ( (LA253_2 == 90) )
            	        {
            	            alt253 = 1;
            	        }


            	    }
            	    else if ( (LA253_0 == 182) )
            	    {
            	        alt253 = 1;
            	    }


            	    switch (alt253) 
            		{
            			case 1 :
            			    // cs.g:946:2: switch_label
            			    {
            			    	PushFollow(FOLLOW_switch_label_in_switch_labels6936);
            			    	switch_label();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt253 >= 1 ) goto loop253;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee253 =
            		                new EarlyExitException(253, input);
            		            throw eee253;
            	    }
            	    cnt253++;
            	} while (true);

            	loop253:
            		;	// Stops C# compiler whining that label 'loop253' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 270, switch_labels_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "switch_labels"


    // $ANTLR start "switch_label"
    // cs.g:947:1: switch_label : ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) );
    public void switch_label() // throws RecognitionException [1]
    {   
        int switch_label_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 271) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:947:13: ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) )
            int alt254 = 2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0 == 182) )
            {
                alt254 = 1;
            }
            else if ( (LA254_0 == 96) )
            {
                alt254 = 2;
            }
            else 
            {
                if ( state.backtracking > 0 ) {state.failed = true; return ;}
                NoViableAltException nvae_d254s0 =
                    new NoViableAltException("", 254, 0, input);

                throw nvae_d254s0;
            }
            switch (alt254) 
            {
                case 1 :
                    // cs.g:948:2: ( 'case' constant_expression ':' )
                    {
                    	// cs.g:948:2: ( 'case' constant_expression ':' )
                    	// cs.g:948:3: 'case' constant_expression ':'
                    	{
                    		Match(input,182,FOLLOW_182_in_switch_label6946); if (state.failed) return ;
                    		PushFollow(FOLLOW_constant_expression_in_switch_label6950);
                    		constant_expression();
                    		state._fsp--;
                    		if (state.failed) return ;
                    		Match(input,90,FOLLOW_90_in_switch_label6954); if (state.failed) return ;

                    	}


                    }
                    break;
                case 2 :
                    // cs.g:949:4: ( 'default' ':' )
                    {
                    	// cs.g:949:4: ( 'default' ':' )
                    	// cs.g:949:5: 'default' ':'
                    	{
                    		Match(input,96,FOLLOW_96_in_switch_label6961); if (state.failed) return ;
                    		Match(input,90,FOLLOW_90_in_switch_label6965); if (state.failed) return ;

                    	}


                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 271, switch_label_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "switch_label"


    // $ANTLR start "iteration_statement"
    // cs.g:950:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
    public void iteration_statement() // throws RecognitionException [1]
    {   
        int iteration_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 272) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:950:20: ( while_statement | do_statement | for_statement | foreach_statement )
            int alt255 = 4;
            switch ( input.LA(1) ) 
            {
            case 183:
            	{
                alt255 = 1;
                }
                break;
            case 184:
            	{
                alt255 = 2;
                }
                break;
            case 185:
            	{
                alt255 = 3;
                }
                break;
            case 186:
            	{
                alt255 = 4;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d255s0 =
            	        new NoViableAltException("", 255, 0, input);

            	    throw nvae_d255s0;
            }

            switch (alt255) 
            {
                case 1 :
                    // cs.g:951:2: while_statement
                    {
                    	PushFollow(FOLLOW_while_statement_in_iteration_statement6974);
                    	while_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:952:4: do_statement
                    {
                    	PushFollow(FOLLOW_do_statement_in_iteration_statement6979);
                    	do_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:953:4: for_statement
                    {
                    	PushFollow(FOLLOW_for_statement_in_iteration_statement6984);
                    	for_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:954:4: foreach_statement
                    {
                    	PushFollow(FOLLOW_foreach_statement_in_iteration_statement6989);
                    	foreach_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 272, iteration_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "iteration_statement"


    // $ANTLR start "while_statement"
    // cs.g:955:1: while_statement : 'while' '(' boolean_expression ')' embedded_statement ;
    public void while_statement() // throws RecognitionException [1]
    {   
        int while_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 273) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:955:16: ( 'while' '(' boolean_expression ')' embedded_statement )
            // cs.g:956:2: 'while' '(' boolean_expression ')' embedded_statement
            {
            	Match(input,183,FOLLOW_183_in_while_statement6997); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_while_statement7001); if (state.failed) return ;
            	PushFollow(FOLLOW_boolean_expression_in_while_statement7005);
            	boolean_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_while_statement7009); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_while_statement7013);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 273, while_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "while_statement"


    // $ANTLR start "do_statement"
    // cs.g:957:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' ;
    public void do_statement() // throws RecognitionException [1]
    {   
        int do_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 274) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:957:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' )
            // cs.g:958:2: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
            {
            	Match(input,184,FOLLOW_184_in_do_statement7021); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_do_statement7025);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,183,FOLLOW_183_in_do_statement7029); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_do_statement7033); if (state.failed) return ;
            	PushFollow(FOLLOW_boolean_expression_in_do_statement7037);
            	boolean_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_do_statement7041); if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_do_statement7045); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 274, do_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "do_statement"


    // $ANTLR start "for_statement"
    // cs.g:959:1: for_statement : 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement ;
    public void for_statement() // throws RecognitionException [1]
    {   
        int for_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 275) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:959:14: ( 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement )
            // cs.g:960:2: 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement
            {
            	Match(input,185,FOLLOW_185_in_for_statement7053); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_for_statement7057); if (state.failed) return ;
            	// cs.g:960:16: ( for_initializer )?
            	int alt256 = 2;
            	int LA256_0 = input.LA(1);

            	if ( ((LA256_0 >= IDENTIFIER && LA256_0 <= NULL) || LA256_0 == MINUS || LA256_0 == 65 || LA256_0 == 68 || (LA256_0 >= 82 && LA256_0 <= 83) || LA256_0 == 85 || LA256_0 == 88 || (LA256_0 >= 93 && LA256_0 <= 98) || LA256_0 == 100 || (LA256_0 >= 102 && LA256_0 <= 106) || LA256_0 == 117 || (LA256_0 >= 132 && LA256_0 <= 133) || (LA256_0 >= 135 && LA256_0 <= 148) || (LA256_0 >= 150 && LA256_0 <= 152) || LA256_0 == 154 || (LA256_0 >= 157 && LA256_0 <= 168) || LA256_0 == 170 || (LA256_0 >= 177 && LA256_0 <= 178) || (LA256_0 >= 195 && LA256_0 <= 202)) )
            	{
            	    alt256 = 1;
            	}
            	switch (alt256) 
            	{
            	    case 1 :
            	        // cs.g:960:16: for_initializer
            	        {
            	        	PushFollow(FOLLOW_for_initializer_in_for_statement7061);
            	        	for_initializer();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_for_statement7066); if (state.failed) return ;
            	// cs.g:960:41: ( for_condition )?
            	int alt257 = 2;
            	int LA257_0 = input.LA(1);

            	if ( ((LA257_0 >= IDENTIFIER && LA257_0 <= NULL) || LA257_0 == MINUS || LA257_0 == 65 || LA257_0 == 68 || LA257_0 == 83 || LA257_0 == 85 || LA257_0 == 88 || (LA257_0 >= 93 && LA257_0 <= 98) || LA257_0 == 100 || (LA257_0 >= 102 && LA257_0 <= 106) || LA257_0 == 117 || (LA257_0 >= 132 && LA257_0 <= 133) || (LA257_0 >= 135 && LA257_0 <= 148) || (LA257_0 >= 150 && LA257_0 <= 152) || LA257_0 == 154 || (LA257_0 >= 157 && LA257_0 <= 168) || LA257_0 == 170 || (LA257_0 >= 177 && LA257_0 <= 178) || (LA257_0 >= 195 && LA257_0 <= 202)) )
            	{
            	    alt257 = 1;
            	}
            	switch (alt257) 
            	{
            	    case 1 :
            	        // cs.g:960:41: for_condition
            	        {
            	        	PushFollow(FOLLOW_for_condition_in_for_statement7070);
            	        	for_condition();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_for_statement7075); if (state.failed) return ;
            	// cs.g:960:64: ( for_iterator )?
            	int alt258 = 2;
            	int LA258_0 = input.LA(1);

            	if ( ((LA258_0 >= IDENTIFIER && LA258_0 <= NULL) || LA258_0 == MINUS || LA258_0 == 65 || LA258_0 == 68 || LA258_0 == 83 || LA258_0 == 85 || LA258_0 == 88 || (LA258_0 >= 93 && LA258_0 <= 98) || LA258_0 == 100 || (LA258_0 >= 102 && LA258_0 <= 106) || LA258_0 == 117 || (LA258_0 >= 132 && LA258_0 <= 133) || (LA258_0 >= 135 && LA258_0 <= 148) || (LA258_0 >= 150 && LA258_0 <= 152) || LA258_0 == 154 || (LA258_0 >= 157 && LA258_0 <= 168) || LA258_0 == 170 || (LA258_0 >= 177 && LA258_0 <= 178) || (LA258_0 >= 195 && LA258_0 <= 202)) )
            	{
            	    alt258 = 1;
            	}
            	switch (alt258) 
            	{
            	    case 1 :
            	        // cs.g:960:64: for_iterator
            	        {
            	        	PushFollow(FOLLOW_for_iterator_in_for_statement7079);
            	        	for_iterator();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_for_statement7084); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_for_statement7088);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 275, for_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "for_statement"


    // $ANTLR start "for_initializer"
    // cs.g:961:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
    public void for_initializer() // throws RecognitionException [1]
    {   
        int for_initializer_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 276) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:961:16: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
            int alt259 = 2;
            alt259 = dfa259.Predict(input);
            switch (alt259) 
            {
                case 1 :
                    // cs.g:962:2: ( local_variable_declaration )=> local_variable_declaration
                    {
                    	PushFollow(FOLLOW_local_variable_declaration_in_for_initializer7102);
                    	local_variable_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:963:4: statement_expression_list
                    {
                    	PushFollow(FOLLOW_statement_expression_list_in_for_initializer7107);
                    	statement_expression_list();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 276, for_initializer_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "for_initializer"


    // $ANTLR start "for_condition"
    // cs.g:965:1: for_condition : boolean_expression ;
    public void for_condition() // throws RecognitionException [1]
    {   
        int for_condition_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 277) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:965:14: ( boolean_expression )
            // cs.g:966:2: boolean_expression
            {
            	PushFollow(FOLLOW_boolean_expression_in_for_condition7117);
            	boolean_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 277, for_condition_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "for_condition"


    // $ANTLR start "for_iterator"
    // cs.g:967:1: for_iterator : statement_expression_list ;
    public void for_iterator() // throws RecognitionException [1]
    {   
        int for_iterator_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 278) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:967:13: ( statement_expression_list )
            // cs.g:968:2: statement_expression_list
            {
            	PushFollow(FOLLOW_statement_expression_list_in_for_iterator7125);
            	statement_expression_list();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 278, for_iterator_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "for_iterator"


    // $ANTLR start "statement_expression_list"
    // cs.g:969:1: statement_expression_list : statement_expression ( ',' statement_expression )* ;
    public void statement_expression_list() // throws RecognitionException [1]
    {   
        int statement_expression_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 279) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:969:26: ( statement_expression ( ',' statement_expression )* )
            // cs.g:970:2: statement_expression ( ',' statement_expression )*
            {
            	PushFollow(FOLLOW_statement_expression_in_statement_expression_list7133);
            	statement_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:970:23: ( ',' statement_expression )*
            	do 
            	{
            	    int alt260 = 2;
            	    int LA260_0 = input.LA(1);

            	    if ( (LA260_0 == 89) )
            	    {
            	        alt260 = 1;
            	    }


            	    switch (alt260) 
            		{
            			case 1 :
            			    // cs.g:970:24: ',' statement_expression
            			    {
            			    	Match(input,89,FOLLOW_89_in_statement_expression_list7136); if (state.failed) return ;
            			    	PushFollow(FOLLOW_statement_expression_in_statement_expression_list7138);
            			    	statement_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    goto loop260;
            	    }
            	} while (true);

            	loop260:
            		;	// Stops C# compiler whining that label 'loop260' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 279, statement_expression_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "statement_expression_list"


    // $ANTLR start "foreach_statement"
    // cs.g:971:1: foreach_statement : 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement ;
    public void foreach_statement() // throws RecognitionException [1]
    {   
        int foreach_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 280) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:971:18: ( 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement )
            // cs.g:972:2: 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement
            {
            	Match(input,186,FOLLOW_186_in_foreach_statement7148); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_foreach_statement7152); if (state.failed) return ;
            	PushFollow(FOLLOW_local_variable_type_in_foreach_statement7156);
            	local_variable_type();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_foreach_statement7160);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,134,FOLLOW_134_in_foreach_statement7164); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_foreach_statement7168);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_foreach_statement7172); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_foreach_statement7176);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 280, foreach_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "foreach_statement"


    // $ANTLR start "jump_statement"
    // cs.g:973:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
    public void jump_statement() // throws RecognitionException [1]
    {   
        int jump_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 281) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:973:15: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
            int alt261 = 5;
            switch ( input.LA(1) ) 
            {
            case 187:
            	{
                alt261 = 1;
                }
                break;
            case 188:
            	{
                alt261 = 2;
                }
                break;
            case 189:
            	{
                alt261 = 3;
                }
                break;
            case 153:
            	{
                alt261 = 4;
                }
                break;
            case 190:
            	{
                alt261 = 5;
                }
                break;
            	default:
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d261s0 =
            	        new NoViableAltException("", 261, 0, input);

            	    throw nvae_d261s0;
            }

            switch (alt261) 
            {
                case 1 :
                    // cs.g:974:2: break_statement
                    {
                    	PushFollow(FOLLOW_break_statement_in_jump_statement7184);
                    	break_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:975:4: continue_statement
                    {
                    	PushFollow(FOLLOW_continue_statement_in_jump_statement7189);
                    	continue_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // cs.g:976:4: goto_statement
                    {
                    	PushFollow(FOLLOW_goto_statement_in_jump_statement7194);
                    	goto_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // cs.g:977:4: return_statement
                    {
                    	PushFollow(FOLLOW_return_statement_in_jump_statement7199);
                    	return_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // cs.g:978:4: throw_statement
                    {
                    	PushFollow(FOLLOW_throw_statement_in_jump_statement7204);
                    	throw_statement();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 281, jump_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "jump_statement"


    // $ANTLR start "break_statement"
    // cs.g:979:1: break_statement : 'break' ';' ;
    public void break_statement() // throws RecognitionException [1]
    {   
        int break_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 282) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:979:16: ( 'break' ';' )
            // cs.g:980:2: 'break' ';'
            {
            	Match(input,187,FOLLOW_187_in_break_statement7212); if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_break_statement7216); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 282, break_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "break_statement"


    // $ANTLR start "continue_statement"
    // cs.g:981:1: continue_statement : 'continue' ';' ;
    public void continue_statement() // throws RecognitionException [1]
    {   
        int continue_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 283) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:981:19: ( 'continue' ';' )
            // cs.g:982:2: 'continue' ';'
            {
            	Match(input,188,FOLLOW_188_in_continue_statement7224); if (state.failed) return ;
            	Match(input,SEMI,FOLLOW_SEMI_in_continue_statement7228); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 283, continue_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "continue_statement"


    // $ANTLR start "goto_statement"
    // cs.g:983:1: goto_statement : 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' ;
    public void goto_statement() // throws RecognitionException [1]
    {   
        int goto_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 284) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:983:15: ( 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' )
            // cs.g:984:2: 'goto' ( identifier | 'case' constant_expression | 'default' ) ';'
            {
            	Match(input,189,FOLLOW_189_in_goto_statement7236); if (state.failed) return ;
            	// cs.g:984:11: ( identifier | 'case' constant_expression | 'default' )
            	int alt262 = 3;
            	switch ( input.LA(1) ) 
            	{
            	case IDENTIFIER:
            	case 65:
            	case 132:
            	case 133:
            	case 135:
            	case 136:
            	case 137:
            	case 138:
            	case 139:
            	case 140:
            	case 141:
            	case 142:
            	case 143:
            	case 144:
            	case 145:
            	case 146:
            	case 147:
            	case 148:
            	case 150:
            	case 151:
            	case 152:
            	case 154:
            	case 157:
            	case 158:
            	case 159:
            	case 170:
            	case 177:
            	case 178:
            	case 195:
            	case 202:
            		{
            	    alt262 = 1;
            	    }
            	    break;
            	case 182:
            		{
            	    alt262 = 2;
            	    }
            	    break;
            	case 96:
            		{
            	    alt262 = 3;
            	    }
            	    break;
            		default:
            		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		    NoViableAltException nvae_d262s0 =
            		        new NoViableAltException("", 262, 0, input);

            		    throw nvae_d262s0;
            	}

            	switch (alt262) 
            	{
            	    case 1 :
            	        // cs.g:984:13: identifier
            	        {
            	        	PushFollow(FOLLOW_identifier_in_goto_statement7242);
            	        	identifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:985:7: 'case' constant_expression
            	        {
            	        	Match(input,182,FOLLOW_182_in_goto_statement7250); if (state.failed) return ;
            	        	PushFollow(FOLLOW_constant_expression_in_goto_statement7254);
            	        	constant_expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 3 :
            	        // cs.g:986:7: 'default'
            	        {
            	        	Match(input,96,FOLLOW_96_in_goto_statement7262); if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_goto_statement7267); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 284, goto_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "goto_statement"


    // $ANTLR start "return_statement"
    // cs.g:987:1: return_statement : 'return' ( expression )? ';' ;
    public void return_statement() // throws RecognitionException [1]
    {   
        int return_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 285) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:987:17: ( 'return' ( expression )? ';' )
            // cs.g:988:2: 'return' ( expression )? ';'
            {
            	Match(input,153,FOLLOW_153_in_return_statement7275); if (state.failed) return ;
            	// cs.g:988:13: ( expression )?
            	int alt263 = 2;
            	int LA263_0 = input.LA(1);

            	if ( ((LA263_0 >= IDENTIFIER && LA263_0 <= NULL) || LA263_0 == MINUS || LA263_0 == 65 || LA263_0 == 68 || LA263_0 == 83 || LA263_0 == 85 || LA263_0 == 88 || (LA263_0 >= 93 && LA263_0 <= 98) || LA263_0 == 100 || (LA263_0 >= 102 && LA263_0 <= 106) || LA263_0 == 117 || (LA263_0 >= 132 && LA263_0 <= 133) || (LA263_0 >= 135 && LA263_0 <= 148) || (LA263_0 >= 150 && LA263_0 <= 152) || LA263_0 == 154 || (LA263_0 >= 157 && LA263_0 <= 168) || LA263_0 == 170 || (LA263_0 >= 177 && LA263_0 <= 178) || (LA263_0 >= 195 && LA263_0 <= 202)) )
            	{
            	    alt263 = 1;
            	}
            	switch (alt263) 
            	{
            	    case 1 :
            	        // cs.g:988:13: expression
            	        {
            	        	PushFollow(FOLLOW_expression_in_return_statement7279);
            	        	expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_return_statement7284); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 285, return_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "return_statement"


    // $ANTLR start "throw_statement"
    // cs.g:989:1: throw_statement : 'throw' ( expression )? ';' ;
    public void throw_statement() // throws RecognitionException [1]
    {   
        int throw_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 286) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:989:16: ( 'throw' ( expression )? ';' )
            // cs.g:990:2: 'throw' ( expression )? ';'
            {
            	Match(input,190,FOLLOW_190_in_throw_statement7292); if (state.failed) return ;
            	// cs.g:990:12: ( expression )?
            	int alt264 = 2;
            	int LA264_0 = input.LA(1);

            	if ( ((LA264_0 >= IDENTIFIER && LA264_0 <= NULL) || LA264_0 == MINUS || LA264_0 == 65 || LA264_0 == 68 || LA264_0 == 83 || LA264_0 == 85 || LA264_0 == 88 || (LA264_0 >= 93 && LA264_0 <= 98) || LA264_0 == 100 || (LA264_0 >= 102 && LA264_0 <= 106) || LA264_0 == 117 || (LA264_0 >= 132 && LA264_0 <= 133) || (LA264_0 >= 135 && LA264_0 <= 148) || (LA264_0 >= 150 && LA264_0 <= 152) || LA264_0 == 154 || (LA264_0 >= 157 && LA264_0 <= 168) || LA264_0 == 170 || (LA264_0 >= 177 && LA264_0 <= 178) || (LA264_0 >= 195 && LA264_0 <= 202)) )
            	{
            	    alt264 = 1;
            	}
            	switch (alt264) 
            	{
            	    case 1 :
            	        // cs.g:990:12: expression
            	        {
            	        	PushFollow(FOLLOW_expression_in_throw_statement7296);
            	        	expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,SEMI,FOLLOW_SEMI_in_throw_statement7301); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 286, throw_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "throw_statement"


    // $ANTLR start "try_statement"
    // cs.g:991:1: try_statement : 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) ;
    public void try_statement() // throws RecognitionException [1]
    {   
        int try_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 287) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:991:14: ( 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) )
            // cs.g:992:7: 'try' block ( catch_clauses ( finally_clause )? | finally_clause )
            {
            	Match(input,191,FOLLOW_191_in_try_statement7314); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_try_statement7318);
            	block();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:992:23: ( catch_clauses ( finally_clause )? | finally_clause )
            	int alt266 = 2;
            	int LA266_0 = input.LA(1);

            	if ( (LA266_0 == 192) )
            	{
            	    alt266 = 1;
            	}
            	else if ( (LA266_0 == 193) )
            	{
            	    alt266 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d266s0 =
            	        new NoViableAltException("", 266, 0, input);

            	    throw nvae_d266s0;
            	}
            	switch (alt266) 
            	{
            	    case 1 :
            	        // cs.g:992:25: catch_clauses ( finally_clause )?
            	        {
            	        	PushFollow(FOLLOW_catch_clauses_in_try_statement7324);
            	        	catch_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	// cs.g:992:41: ( finally_clause )?
            	        	int alt265 = 2;
            	        	int LA265_0 = input.LA(1);

            	        	if ( (LA265_0 == 193) )
            	        	{
            	        	    alt265 = 1;
            	        	}
            	        	switch (alt265) 
            	        	{
            	        	    case 1 :
            	        	        // cs.g:992:41: finally_clause
            	        	        {
            	        	        	PushFollow(FOLLOW_finally_clause_in_try_statement7328);
            	        	        	finally_clause();
            	        	        	state._fsp--;
            	        	        	if (state.failed) return ;

            	        	        }
            	        	        break;

            	        	}


            	        }
            	        break;
            	    case 2 :
            	        // cs.g:993:10: finally_clause
            	        {
            	        	PushFollow(FOLLOW_finally_clause_in_try_statement7340);
            	        	finally_clause();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 287, try_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "try_statement"


    // $ANTLR start "catch_clauses"
    // cs.g:995:1: catch_clauses : 'catch' ( specific_catch_clauses | general_catch_clause ) ;
    public void catch_clauses() // throws RecognitionException [1]
    {   
        int catch_clauses_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 288) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:995:14: ( 'catch' ( specific_catch_clauses | general_catch_clause ) )
            // cs.g:996:2: 'catch' ( specific_catch_clauses | general_catch_clause )
            {
            	Match(input,192,FOLLOW_192_in_catch_clauses7349); if (state.failed) return ;
            	// cs.g:996:12: ( specific_catch_clauses | general_catch_clause )
            	int alt267 = 2;
            	int LA267_0 = input.LA(1);

            	if ( (LA267_0 == 88) )
            	{
            	    alt267 = 1;
            	}
            	else if ( (LA267_0 == SEMI || LA267_0 == 62) )
            	{
            	    alt267 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d267s0 =
            	        new NoViableAltException("", 267, 0, input);

            	    throw nvae_d267s0;
            	}
            	switch (alt267) 
            	{
            	    case 1 :
            	        // cs.g:996:13: specific_catch_clauses
            	        {
            	        	PushFollow(FOLLOW_specific_catch_clauses_in_catch_clauses7354);
            	        	specific_catch_clauses();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:996:38: general_catch_clause
            	        {
            	        	PushFollow(FOLLOW_general_catch_clause_in_catch_clauses7358);
            	        	general_catch_clause();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 288, catch_clauses_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "catch_clauses"


    // $ANTLR start "specific_catch_clauses"
    // cs.g:997:1: specific_catch_clauses : specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* ;
    public void specific_catch_clauses() // throws RecognitionException [1]
    {   
        int specific_catch_clauses_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 289) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:997:23: ( specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* )
            // cs.g:998:2: specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
            {
            	PushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses7367);
            	specific_catch_clause();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:998:26: ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
            	do 
            	{
            	    int alt269 = 2;
            	    int LA269_0 = input.LA(1);

            	    if ( (LA269_0 == 192) )
            	    {
            	        alt269 = 1;
            	    }


            	    switch (alt269) 
            		{
            			case 1 :
            			    // cs.g:998:27: 'catch' ( specific_catch_clause | general_catch_clause )
            			    {
            			    	Match(input,192,FOLLOW_192_in_specific_catch_clauses7372); if (state.failed) return ;
            			    	// cs.g:998:37: ( specific_catch_clause | general_catch_clause )
            			    	int alt268 = 2;
            			    	int LA268_0 = input.LA(1);

            			    	if ( (LA268_0 == 88) )
            			    	{
            			    	    alt268 = 1;
            			    	}
            			    	else if ( (LA268_0 == SEMI || LA268_0 == 62) )
            			    	{
            			    	    alt268 = 2;
            			    	}
            			    	else 
            			    	{
            			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    	    NoViableAltException nvae_d268s0 =
            			    	        new NoViableAltException("", 268, 0, input);

            			    	    throw nvae_d268s0;
            			    	}
            			    	switch (alt268) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:998:38: specific_catch_clause
            			    	        {
            			    	        	PushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses7377);
            			    	        	specific_catch_clause();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;
            			    	    case 2 :
            			    	        // cs.g:998:62: general_catch_clause
            			    	        {
            			    	        	PushFollow(FOLLOW_general_catch_clause_in_specific_catch_clauses7381);
            			    	        	general_catch_clause();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}


            			    }
            			    break;

            			default:
            			    goto loop269;
            	    }
            	} while (true);

            	loop269:
            		;	// Stops C# compiler whining that label 'loop269' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 289, specific_catch_clauses_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "specific_catch_clauses"


    // $ANTLR start "specific_catch_clause"
    // cs.g:999:1: specific_catch_clause : '(' class_type ( identifier )? ')' block ;
    public void specific_catch_clause() // throws RecognitionException [1]
    {   
        int specific_catch_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 290) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:999:22: ( '(' class_type ( identifier )? ')' block )
            // cs.g:1000:2: '(' class_type ( identifier )? ')' block
            {
            	Match(input,88,FOLLOW_88_in_specific_catch_clause7391); if (state.failed) return ;
            	PushFollow(FOLLOW_class_type_in_specific_catch_clause7395);
            	class_type();
            	state._fsp--;
            	if (state.failed) return ;
            	// cs.g:1000:21: ( identifier )?
            	int alt270 = 2;
            	int LA270_0 = input.LA(1);

            	if ( (LA270_0 == IDENTIFIER || LA270_0 == 65 || (LA270_0 >= 132 && LA270_0 <= 133) || (LA270_0 >= 135 && LA270_0 <= 148) || (LA270_0 >= 150 && LA270_0 <= 152) || LA270_0 == 154 || (LA270_0 >= 157 && LA270_0 <= 159) || LA270_0 == 170 || (LA270_0 >= 177 && LA270_0 <= 178) || LA270_0 == 195 || LA270_0 == 202) )
            	{
            	    alt270 = 1;
            	}
            	switch (alt270) 
            	{
            	    case 1 :
            	        // cs.g:1000:21: identifier
            	        {
            	        	PushFollow(FOLLOW_identifier_in_specific_catch_clause7399);
            	        	identifier();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,RPAREN,FOLLOW_RPAREN_in_specific_catch_clause7404); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_specific_catch_clause7408);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 290, specific_catch_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "specific_catch_clause"


    // $ANTLR start "general_catch_clause"
    // cs.g:1001:1: general_catch_clause : block ;
    public void general_catch_clause() // throws RecognitionException [1]
    {   
        int general_catch_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 291) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1001:21: ( block )
            // cs.g:1002:2: block
            {
            	PushFollow(FOLLOW_block_in_general_catch_clause7416);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 291, general_catch_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "general_catch_clause"


    // $ANTLR start "finally_clause"
    // cs.g:1003:1: finally_clause : 'finally' block ;
    public void finally_clause() // throws RecognitionException [1]
    {   
        int finally_clause_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 292) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1003:15: ( 'finally' block )
            // cs.g:1004:2: 'finally' block
            {
            	Match(input,193,FOLLOW_193_in_finally_clause7424); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_finally_clause7428);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 292, finally_clause_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "finally_clause"


    // $ANTLR start "checked_statement"
    // cs.g:1005:1: checked_statement : 'checked' block ;
    public void checked_statement() // throws RecognitionException [1]
    {   
        int checked_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 293) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1005:18: ( 'checked' block )
            // cs.g:1006:2: 'checked' block
            {
            	Match(input,94,FOLLOW_94_in_checked_statement7436); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_checked_statement7440);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 293, checked_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "checked_statement"


    // $ANTLR start "unchecked_statement"
    // cs.g:1007:1: unchecked_statement : 'unchecked' block ;
    public void unchecked_statement() // throws RecognitionException [1]
    {   
        int unchecked_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 294) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1007:20: ( 'unchecked' block )
            // cs.g:1008:2: 'unchecked' block
            {
            	Match(input,95,FOLLOW_95_in_unchecked_statement7448); if (state.failed) return ;
            	PushFollow(FOLLOW_block_in_unchecked_statement7452);
            	block();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 294, unchecked_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unchecked_statement"


    // $ANTLR start "lock_statement"
    // cs.g:1009:1: lock_statement : 'lock' '(' expression ')' embedded_statement ;
    public void lock_statement() // throws RecognitionException [1]
    {   
        int lock_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 295) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1009:15: ( 'lock' '(' expression ')' embedded_statement )
            // cs.g:1010:2: 'lock' '(' expression ')' embedded_statement
            {
            	Match(input,194,FOLLOW_194_in_lock_statement7460); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_lock_statement7464); if (state.failed) return ;
            	PushFollow(FOLLOW_expression_in_lock_statement7467);
            	expression();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_lock_statement7471); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_lock_statement7475);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 295, lock_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "lock_statement"


    // $ANTLR start "using_statement"
    // cs.g:1011:1: using_statement : 'using' '(' resource_acquisition ')' embedded_statement ;
    public void using_statement() // throws RecognitionException [1]
    {   
        int using_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 296) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1011:16: ( 'using' '(' resource_acquisition ')' embedded_statement )
            // cs.g:1012:2: 'using' '(' resource_acquisition ')' embedded_statement
            {
            	Match(input,USING,FOLLOW_USING_in_using_statement7483); if (state.failed) return ;
            	Match(input,88,FOLLOW_88_in_using_statement7487); if (state.failed) return ;
            	PushFollow(FOLLOW_resource_acquisition_in_using_statement7492);
            	resource_acquisition();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_using_statement7496); if (state.failed) return ;
            	PushFollow(FOLLOW_embedded_statement_in_using_statement7501);
            	embedded_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 296, using_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "using_statement"


    // $ANTLR start "resource_acquisition"
    // cs.g:1013:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
    public void resource_acquisition() // throws RecognitionException [1]
    {   
        int resource_acquisition_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 297) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1013:21: ( ( local_variable_declaration )=> local_variable_declaration | expression )
            int alt271 = 2;
            alt271 = dfa271.Predict(input);
            switch (alt271) 
            {
                case 1 :
                    // cs.g:1014:2: ( local_variable_declaration )=> local_variable_declaration
                    {
                    	PushFollow(FOLLOW_local_variable_declaration_in_resource_acquisition7515);
                    	local_variable_declaration();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // cs.g:1015:4: expression
                    {
                    	PushFollow(FOLLOW_expression_in_resource_acquisition7520);
                    	expression();
                    	state._fsp--;
                    	if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 297, resource_acquisition_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "resource_acquisition"


    // $ANTLR start "yield_statement"
    // cs.g:1016:1: yield_statement : 'yield' ( 'return' expression ';' | 'break' ';' ) ;
    public void yield_statement() // throws RecognitionException [1]
    {   
        int yield_statement_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 298) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1016:16: ( 'yield' ( 'return' expression ';' | 'break' ';' ) )
            // cs.g:1017:2: 'yield' ( 'return' expression ';' | 'break' ';' )
            {
            	Match(input,195,FOLLOW_195_in_yield_statement7528); if (state.failed) return ;
            	// cs.g:1017:12: ( 'return' expression ';' | 'break' ';' )
            	int alt272 = 2;
            	int LA272_0 = input.LA(1);

            	if ( (LA272_0 == 153) )
            	{
            	    alt272 = 1;
            	}
            	else if ( (LA272_0 == 187) )
            	{
            	    alt272 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d272s0 =
            	        new NoViableAltException("", 272, 0, input);

            	    throw nvae_d272s0;
            	}
            	switch (alt272) 
            	{
            	    case 1 :
            	        // cs.g:1017:13: 'return' expression ';'
            	        {
            	        	Match(input,153,FOLLOW_153_in_yield_statement7533); if (state.failed) return ;
            	        	PushFollow(FOLLOW_expression_in_yield_statement7537);
            	        	expression();
            	        	state._fsp--;
            	        	if (state.failed) return ;
            	        	Match(input,SEMI,FOLLOW_SEMI_in_yield_statement7541); if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // cs.g:1018:14: 'break' ';'
            	        {
            	        	Match(input,187,FOLLOW_187_in_yield_statement7556); if (state.failed) return ;
            	        	Match(input,SEMI,FOLLOW_SEMI_in_yield_statement7560); if (state.failed) return ;

            	        }
            	        break;

            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 298, yield_statement_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "yield_statement"


    // $ANTLR start "predefined_type"
    // cs.g:1024:1: predefined_type : ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' );
    public void predefined_type() // throws RecognitionException [1]
    {   
        int predefined_type_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 299) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1024:16: ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' )
            // cs.g:
            {
            	if ( (input.LA(1) >= 160 && input.LA(1) <= 168) || (input.LA(1) >= 196 && input.LA(1) <= 201) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 299, predefined_type_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "predefined_type"


    // $ANTLR start "identifier"
    // cs.g:1028:1: identifier : ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
    public void identifier() // throws RecognitionException [1]
    {   
        int identifier_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 300) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1028:11: ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
            // cs.g:
            {
            	if ( input.LA(1) == IDENTIFIER || input.LA(1) == 65 || (input.LA(1) >= 132 && input.LA(1) <= 133) || (input.LA(1) >= 135 && input.LA(1) <= 148) || (input.LA(1) >= 150 && input.LA(1) <= 152) || input.LA(1) == 154 || (input.LA(1) >= 157 && input.LA(1) <= 159) || input.LA(1) == 170 || (input.LA(1) >= 177 && input.LA(1) <= 178) || input.LA(1) == 195 || input.LA(1) == 202 ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 300, identifier_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "identifier"


    // $ANTLR start "keyword"
    // cs.g:1032:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
    public void keyword() // throws RecognitionException [1]
    {   
        int keyword_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 301) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1032:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
            // cs.g:
            {
            	if ( (input.LA(1) >= TRUE && input.LA(1) <= NULL) || (input.LA(1) >= USING && input.LA(1) <= IF) || input.LA(1) == 61 || input.LA(1) == 64 || (input.LA(1) >= 68 && input.LA(1) <= 83) || input.LA(1) == 85 || (input.LA(1) >= 91 && input.LA(1) <= 98) || (input.LA(1) >= 122 && input.LA(1) <= 123) || input.LA(1) == 134 || input.LA(1) == 149 || input.LA(1) == 153 || input.LA(1) == 155 || (input.LA(1) >= 160 && input.LA(1) <= 169) || (input.LA(1) >= 171 && input.LA(1) <= 176) || (input.LA(1) >= 179 && input.LA(1) <= 182) || (input.LA(1) >= 184 && input.LA(1) <= 194) || (input.LA(1) >= 196 && input.LA(1) <= 201) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 301, keyword_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "keyword"


    // $ANTLR start "also_keyword"
    // cs.g:1035:1: also_keyword : ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
    public void also_keyword() // throws RecognitionException [1]
    {   
        int also_keyword_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 302) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1035:13: ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
            // cs.g:
            {
            	if ( input.LA(1) == 65 || (input.LA(1) >= 132 && input.LA(1) <= 133) || (input.LA(1) >= 135 && input.LA(1) <= 152) || input.LA(1) == 154 || (input.LA(1) >= 157 && input.LA(1) <= 159) || input.LA(1) == 170 || (input.LA(1) >= 177 && input.LA(1) <= 178) || input.LA(1) == 195 || input.LA(1) == 202 ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 302, also_keyword_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "also_keyword"


    // $ANTLR start "literal"
    // cs.g:1040:1: literal : ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL );
    public void literal() // throws RecognitionException [1]
    {   
        int literal_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 303) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1040:8: ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL )
            // cs.g:
            {
            	if ( (input.LA(1) >= Real_literal && input.LA(1) <= NULL) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 303, literal_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "literal"


    // $ANTLR start "assignment_list"
    // cs.g:1321:1: assignment_list : ( assignment ';' )+ ;
    public void assignment_list() // throws RecognitionException [1]
    {   
        int assignment_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 304) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1321:16: ( ( assignment ';' )+ )
            // cs.g:1322:2: ( assignment ';' )+
            {
            	// cs.g:1322:2: ( assignment ';' )+
            	int cnt273 = 0;
            	do 
            	{
            	    int alt273 = 2;
            	    int LA273_0 = input.LA(1);

            	    if ( ((LA273_0 >= IDENTIFIER && LA273_0 <= NULL) || LA273_0 == MINUS || LA273_0 == 65 || LA273_0 == 68 || LA273_0 == 83 || LA273_0 == 85 || LA273_0 == 88 || (LA273_0 >= 93 && LA273_0 <= 98) || LA273_0 == 100 || (LA273_0 >= 102 && LA273_0 <= 106) || LA273_0 == 117 || (LA273_0 >= 132 && LA273_0 <= 133) || (LA273_0 >= 135 && LA273_0 <= 148) || (LA273_0 >= 150 && LA273_0 <= 152) || LA273_0 == 154 || (LA273_0 >= 157 && LA273_0 <= 168) || LA273_0 == 170 || (LA273_0 >= 177 && LA273_0 <= 178) || (LA273_0 >= 195 && LA273_0 <= 202)) )
            	    {
            	        alt273 = 1;
            	    }


            	    switch (alt273) 
            		{
            			case 1 :
            			    // cs.g:1322:3: assignment ';'
            			    {
            			    	PushFollow(FOLLOW_assignment_in_assignment_list10256);
            			    	assignment();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_assignment_list10258); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt273 >= 1 ) goto loop273;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee273 =
            		                new EarlyExitException(273, input);
            		            throw eee273;
            	    }
            	    cnt273++;
            	} while (true);

            	loop273:
            		;	// Stops C# compiler whining that label 'loop273' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 304, assignment_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "assignment_list"


    // $ANTLR start "field_declarations"
    // cs.g:1323:1: field_declarations : ( ( attributes )? ( modifiers )? type field_declaration )+ ;
    public void field_declarations() // throws RecognitionException [1]
    {   
        int field_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 305) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1323:19: ( ( ( attributes )? ( modifiers )? type field_declaration )+ )
            // cs.g:1324:2: ( ( attributes )? ( modifiers )? type field_declaration )+
            {
            	// cs.g:1324:2: ( ( attributes )? ( modifiers )? type field_declaration )+
            	int cnt276 = 0;
            	do 
            	{
            	    int alt276 = 2;
            	    int LA276_0 = input.LA(1);

            	    if ( (LA276_0 == IDENTIFIER || (LA276_0 >= 64 && LA276_0 <= 65) || (LA276_0 >= 68 && LA276_0 <= 80) || LA276_0 == 82 || LA276_0 == 86 || (LA276_0 >= 132 && LA276_0 <= 133) || (LA276_0 >= 135 && LA276_0 <= 148) || (LA276_0 >= 150 && LA276_0 <= 152) || LA276_0 == 154 || (LA276_0 >= 157 && LA276_0 <= 168) || LA276_0 == 170 || (LA276_0 >= 177 && LA276_0 <= 178) || (LA276_0 >= 195 && LA276_0 <= 202)) )
            	    {
            	        alt276 = 1;
            	    }


            	    switch (alt276) 
            		{
            			case 1 :
            			    // cs.g:1324:3: ( attributes )? ( modifiers )? type field_declaration
            			    {
            			    	// cs.g:1324:3: ( attributes )?
            			    	int alt274 = 2;
            			    	int LA274_0 = input.LA(1);

            			    	if ( (LA274_0 == 86) )
            			    	{
            			    	    alt274 = 1;
            			    	}
            			    	switch (alt274) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1324:3: attributes
            			    	        {
            			    	        	PushFollow(FOLLOW_attributes_in_field_declarations10269);
            			    	        	attributes();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	// cs.g:1324:17: ( modifiers )?
            			    	int alt275 = 2;
            			    	int LA275_0 = input.LA(1);

            			    	if ( (LA275_0 == 64 || (LA275_0 >= 68 && LA275_0 <= 80)) )
            			    	{
            			    	    alt275 = 1;
            			    	}
            			    	switch (alt275) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1324:17: modifiers
            			    	        {
            			    	        	PushFollow(FOLLOW_modifiers_in_field_declarations10274);
            			    	        	modifiers();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	PushFollow(FOLLOW_type_in_field_declarations10279);
            			    	type();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	PushFollow(FOLLOW_field_declaration_in_field_declarations10283);
            			    	field_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt276 >= 1 ) goto loop276;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee276 =
            		                new EarlyExitException(276, input);
            		            throw eee276;
            	    }
            	    cnt276++;
            	} while (true);

            	loop276:
            		;	// Stops C# compiler whining that label 'loop276' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 305, field_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "field_declarations"


    // $ANTLR start "property_declaration_list"
    // cs.g:1325:1: property_declaration_list : ( ( attributes )? ( modifiers )? type property_declaration )+ ;
    public void property_declaration_list() // throws RecognitionException [1]
    {   
        int property_declaration_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 306) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1325:26: ( ( ( attributes )? ( modifiers )? type property_declaration )+ )
            // cs.g:1326:2: ( ( attributes )? ( modifiers )? type property_declaration )+
            {
            	// cs.g:1326:2: ( ( attributes )? ( modifiers )? type property_declaration )+
            	int cnt279 = 0;
            	do 
            	{
            	    int alt279 = 2;
            	    int LA279_0 = input.LA(1);

            	    if ( (LA279_0 == IDENTIFIER || (LA279_0 >= 64 && LA279_0 <= 65) || (LA279_0 >= 68 && LA279_0 <= 80) || LA279_0 == 82 || LA279_0 == 86 || (LA279_0 >= 132 && LA279_0 <= 133) || (LA279_0 >= 135 && LA279_0 <= 148) || (LA279_0 >= 150 && LA279_0 <= 152) || LA279_0 == 154 || (LA279_0 >= 157 && LA279_0 <= 168) || LA279_0 == 170 || (LA279_0 >= 177 && LA279_0 <= 178) || (LA279_0 >= 195 && LA279_0 <= 202)) )
            	    {
            	        alt279 = 1;
            	    }


            	    switch (alt279) 
            		{
            			case 1 :
            			    // cs.g:1326:3: ( attributes )? ( modifiers )? type property_declaration
            			    {
            			    	// cs.g:1326:3: ( attributes )?
            			    	int alt277 = 2;
            			    	int LA277_0 = input.LA(1);

            			    	if ( (LA277_0 == 86) )
            			    	{
            			    	    alt277 = 1;
            			    	}
            			    	switch (alt277) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1326:3: attributes
            			    	        {
            			    	        	PushFollow(FOLLOW_attributes_in_property_declaration_list10294);
            			    	        	attributes();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	// cs.g:1326:17: ( modifiers )?
            			    	int alt278 = 2;
            			    	int LA278_0 = input.LA(1);

            			    	if ( (LA278_0 == 64 || (LA278_0 >= 68 && LA278_0 <= 80)) )
            			    	{
            			    	    alt278 = 1;
            			    	}
            			    	switch (alt278) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1326:17: modifiers
            			    	        {
            			    	        	PushFollow(FOLLOW_modifiers_in_property_declaration_list10299);
            			    	        	modifiers();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	PushFollow(FOLLOW_type_in_property_declaration_list10304);
            			    	type();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	PushFollow(FOLLOW_property_declaration_in_property_declaration_list10308);
            			    	property_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt279 >= 1 ) goto loop279;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee279 =
            		                new EarlyExitException(279, input);
            		            throw eee279;
            	    }
            	    cnt279++;
            	} while (true);

            	loop279:
            		;	// Stops C# compiler whining that label 'loop279' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 306, property_declaration_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "property_declaration_list"


    // $ANTLR start "constant_declarations"
    // cs.g:1327:1: constant_declarations : ( constant_declaration )+ ;
    public void constant_declarations() // throws RecognitionException [1]
    {   
        int constant_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 307) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1327:22: ( ( constant_declaration )+ )
            // cs.g:1328:2: ( constant_declaration )+
            {
            	// cs.g:1328:2: ( constant_declaration )+
            	int cnt280 = 0;
            	do 
            	{
            	    int alt280 = 2;
            	    int LA280_0 = input.LA(1);

            	    if ( (LA280_0 == 81) )
            	    {
            	        alt280 = 1;
            	    }


            	    switch (alt280) 
            		{
            			case 1 :
            			    // cs.g:1328:2: constant_declaration
            			    {
            			    	PushFollow(FOLLOW_constant_declaration_in_constant_declarations10318);
            			    	constant_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt280 >= 1 ) goto loop280;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee280 =
            		                new EarlyExitException(280, input);
            		            throw eee280;
            	    }
            	    cnt280++;
            	} while (true);

            	loop280:
            		;	// Stops C# compiler whining that label 'loop280' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 307, constant_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "constant_declarations"


    // $ANTLR start "literals"
    // cs.g:1329:1: literals : ( literal )+ ;
    public void literals() // throws RecognitionException [1]
    {   
        int literals_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 308) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1329:9: ( ( literal )+ )
            // cs.g:1330:2: ( literal )+
            {
            	// cs.g:1330:2: ( literal )+
            	int cnt281 = 0;
            	do 
            	{
            	    int alt281 = 2;
            	    int LA281_0 = input.LA(1);

            	    if ( ((LA281_0 >= Real_literal && LA281_0 <= NULL)) )
            	    {
            	        alt281 = 1;
            	    }


            	    switch (alt281) 
            		{
            			case 1 :
            			    // cs.g:1330:2: literal
            			    {
            			    	PushFollow(FOLLOW_literal_in_literals10326);
            			    	literal();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt281 >= 1 ) goto loop281;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee281 =
            		                new EarlyExitException(281, input);
            		            throw eee281;
            	    }
            	    cnt281++;
            	} while (true);

            	loop281:
            		;	// Stops C# compiler whining that label 'loop281' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 308, literals_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "literals"


    // $ANTLR start "delegate_declaration_list"
    // cs.g:1331:1: delegate_declaration_list : ( ( attributes )? ( modifiers )? delegate_declaration )+ ;
    public void delegate_declaration_list() // throws RecognitionException [1]
    {   
        int delegate_declaration_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 309) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1331:26: ( ( ( attributes )? ( modifiers )? delegate_declaration )+ )
            // cs.g:1332:2: ( ( attributes )? ( modifiers )? delegate_declaration )+
            {
            	// cs.g:1332:2: ( ( attributes )? ( modifiers )? delegate_declaration )+
            	int cnt284 = 0;
            	do 
            	{
            	    int alt284 = 2;
            	    int LA284_0 = input.LA(1);

            	    if ( (LA284_0 == 64 || (LA284_0 >= 68 && LA284_0 <= 80) || LA284_0 == 86 || LA284_0 == 97) )
            	    {
            	        alt284 = 1;
            	    }


            	    switch (alt284) 
            		{
            			case 1 :
            			    // cs.g:1332:3: ( attributes )? ( modifiers )? delegate_declaration
            			    {
            			    	// cs.g:1332:3: ( attributes )?
            			    	int alt282 = 2;
            			    	int LA282_0 = input.LA(1);

            			    	if ( (LA282_0 == 86) )
            			    	{
            			    	    alt282 = 1;
            			    	}
            			    	switch (alt282) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1332:3: attributes
            			    	        {
            			    	        	PushFollow(FOLLOW_attributes_in_delegate_declaration_list10336);
            			    	        	attributes();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	// cs.g:1332:17: ( modifiers )?
            			    	int alt283 = 2;
            			    	int LA283_0 = input.LA(1);

            			    	if ( (LA283_0 == 64 || (LA283_0 >= 68 && LA283_0 <= 80)) )
            			    	{
            			    	    alt283 = 1;
            			    	}
            			    	switch (alt283) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1332:17: modifiers
            			    	        {
            			    	        	PushFollow(FOLLOW_modifiers_in_delegate_declaration_list10341);
            			    	        	modifiers();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	PushFollow(FOLLOW_delegate_declaration_in_delegate_declaration_list10346);
            			    	delegate_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt284 >= 1 ) goto loop284;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee284 =
            		                new EarlyExitException(284, input);
            		            throw eee284;
            	    }
            	    cnt284++;
            	} while (true);

            	loop284:
            		;	// Stops C# compiler whining that label 'loop284' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 309, delegate_declaration_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "delegate_declaration_list"


    // $ANTLR start "local_variable_declaration_list"
    // cs.g:1333:1: local_variable_declaration_list : ( local_variable_declaration ';' )+ ;
    public void local_variable_declaration_list() // throws RecognitionException [1]
    {   
        int local_variable_declaration_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 310) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1333:32: ( ( local_variable_declaration ';' )+ )
            // cs.g:1334:2: ( local_variable_declaration ';' )+
            {
            	// cs.g:1334:2: ( local_variable_declaration ';' )+
            	int cnt285 = 0;
            	do 
            	{
            	    int alt285 = 2;
            	    int LA285_0 = input.LA(1);

            	    if ( (LA285_0 == IDENTIFIER || LA285_0 == 65 || LA285_0 == 82 || (LA285_0 >= 132 && LA285_0 <= 133) || (LA285_0 >= 135 && LA285_0 <= 148) || (LA285_0 >= 150 && LA285_0 <= 152) || LA285_0 == 154 || (LA285_0 >= 157 && LA285_0 <= 168) || LA285_0 == 170 || (LA285_0 >= 177 && LA285_0 <= 178) || (LA285_0 >= 195 && LA285_0 <= 202)) )
            	    {
            	        alt285 = 1;
            	    }


            	    switch (alt285) 
            		{
            			case 1 :
            			    // cs.g:1334:3: local_variable_declaration ';'
            			    {
            			    	PushFollow(FOLLOW_local_variable_declaration_in_local_variable_declaration_list10357);
            			    	local_variable_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_local_variable_declaration_list10359); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt285 >= 1 ) goto loop285;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee285 =
            		                new EarlyExitException(285, input);
            		            throw eee285;
            	    }
            	    cnt285++;
            	} while (true);

            	loop285:
            		;	// Stops C# compiler whining that label 'loop285' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 310, local_variable_declaration_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_variable_declaration_list"


    // $ANTLR start "local_variable_initializer_list"
    // cs.g:1335:1: local_variable_initializer_list : ( local_variable_initializer ';' )+ ;
    public void local_variable_initializer_list() // throws RecognitionException [1]
    {   
        int local_variable_initializer_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 311) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1335:32: ( ( local_variable_initializer ';' )+ )
            // cs.g:1336:2: ( local_variable_initializer ';' )+
            {
            	// cs.g:1336:2: ( local_variable_initializer ';' )+
            	int cnt286 = 0;
            	do 
            	{
            	    int alt286 = 2;
            	    int LA286_0 = input.LA(1);

            	    if ( ((LA286_0 >= IDENTIFIER && LA286_0 <= NULL) || LA286_0 == MINUS || LA286_0 == 62 || LA286_0 == 65 || LA286_0 == 68 || LA286_0 == 83 || LA286_0 == 85 || LA286_0 == 88 || (LA286_0 >= 93 && LA286_0 <= 98) || LA286_0 == 100 || (LA286_0 >= 102 && LA286_0 <= 106) || LA286_0 == 117 || (LA286_0 >= 132 && LA286_0 <= 133) || (LA286_0 >= 135 && LA286_0 <= 148) || (LA286_0 >= 150 && LA286_0 <= 152) || LA286_0 == 154 || (LA286_0 >= 157 && LA286_0 <= 168) || LA286_0 == 170 || (LA286_0 >= 177 && LA286_0 <= 179) || (LA286_0 >= 195 && LA286_0 <= 202)) )
            	    {
            	        alt286 = 1;
            	    }


            	    switch (alt286) 
            		{
            			case 1 :
            			    // cs.g:1336:3: local_variable_initializer ';'
            			    {
            			    	PushFollow(FOLLOW_local_variable_initializer_in_local_variable_initializer_list10370);
            			    	local_variable_initializer();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_local_variable_initializer_list10372); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt286 >= 1 ) goto loop286;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee286 =
            		                new EarlyExitException(286, input);
            		            throw eee286;
            	    }
            	    cnt286++;
            	} while (true);

            	loop286:
            		;	// Stops C# compiler whining that label 'loop286' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 311, local_variable_initializer_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "local_variable_initializer_list"


    // $ANTLR start "expression_list_test"
    // cs.g:1337:1: expression_list_test : ( expression ';' )+ ;
    public void expression_list_test() // throws RecognitionException [1]
    {   
        int expression_list_test_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 312) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1337:21: ( ( expression ';' )+ )
            // cs.g:1338:2: ( expression ';' )+
            {
            	// cs.g:1338:2: ( expression ';' )+
            	int cnt287 = 0;
            	do 
            	{
            	    int alt287 = 2;
            	    int LA287_0 = input.LA(1);

            	    if ( ((LA287_0 >= IDENTIFIER && LA287_0 <= NULL) || LA287_0 == MINUS || LA287_0 == 65 || LA287_0 == 68 || LA287_0 == 83 || LA287_0 == 85 || LA287_0 == 88 || (LA287_0 >= 93 && LA287_0 <= 98) || LA287_0 == 100 || (LA287_0 >= 102 && LA287_0 <= 106) || LA287_0 == 117 || (LA287_0 >= 132 && LA287_0 <= 133) || (LA287_0 >= 135 && LA287_0 <= 148) || (LA287_0 >= 150 && LA287_0 <= 152) || LA287_0 == 154 || (LA287_0 >= 157 && LA287_0 <= 168) || LA287_0 == 170 || (LA287_0 >= 177 && LA287_0 <= 178) || (LA287_0 >= 195 && LA287_0 <= 202)) )
            	    {
            	        alt287 = 1;
            	    }


            	    switch (alt287) 
            		{
            			case 1 :
            			    // cs.g:1338:3: expression ';'
            			    {
            			    	PushFollow(FOLLOW_expression_in_expression_list_test10383);
            			    	expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_expression_list_test10385); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt287 >= 1 ) goto loop287;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee287 =
            		                new EarlyExitException(287, input);
            		            throw eee287;
            	    }
            	    cnt287++;
            	} while (true);

            	loop287:
            		;	// Stops C# compiler whining that label 'loop287' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 312, expression_list_test_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "expression_list_test"


    // $ANTLR start "unary_expression_list"
    // cs.g:1339:1: unary_expression_list : ( unary_expression ';' )+ ;
    public void unary_expression_list() // throws RecognitionException [1]
    {   
        int unary_expression_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 313) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1339:22: ( ( unary_expression ';' )+ )
            // cs.g:1340:2: ( unary_expression ';' )+
            {
            	// cs.g:1340:2: ( unary_expression ';' )+
            	int cnt288 = 0;
            	do 
            	{
            	    int alt288 = 2;
            	    int LA288_0 = input.LA(1);

            	    if ( ((LA288_0 >= IDENTIFIER && LA288_0 <= NULL) || LA288_0 == MINUS || LA288_0 == 65 || LA288_0 == 68 || LA288_0 == 83 || LA288_0 == 85 || LA288_0 == 88 || (LA288_0 >= 93 && LA288_0 <= 98) || LA288_0 == 100 || (LA288_0 >= 102 && LA288_0 <= 106) || LA288_0 == 117 || (LA288_0 >= 132 && LA288_0 <= 133) || (LA288_0 >= 135 && LA288_0 <= 148) || (LA288_0 >= 150 && LA288_0 <= 152) || LA288_0 == 154 || (LA288_0 >= 157 && LA288_0 <= 168) || LA288_0 == 170 || (LA288_0 >= 177 && LA288_0 <= 178) || (LA288_0 >= 195 && LA288_0 <= 202)) )
            	    {
            	        alt288 = 1;
            	    }


            	    switch (alt288) 
            		{
            			case 1 :
            			    // cs.g:1340:3: unary_expression ';'
            			    {
            			    	PushFollow(FOLLOW_unary_expression_in_unary_expression_list10396);
            			    	unary_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_unary_expression_list10398); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt288 >= 1 ) goto loop288;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee288 =
            		                new EarlyExitException(288, input);
            		            throw eee288;
            	    }
            	    cnt288++;
            	} while (true);

            	loop288:
            		;	// Stops C# compiler whining that label 'loop288' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 313, unary_expression_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "unary_expression_list"


    // $ANTLR start "invocation_expression_list"
    // cs.g:1341:1: invocation_expression_list : ( invocation_expression ';' )+ ;
    public void invocation_expression_list() // throws RecognitionException [1]
    {   
        int invocation_expression_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 314) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1341:27: ( ( invocation_expression ';' )+ )
            // cs.g:1342:2: ( invocation_expression ';' )+
            {
            	// cs.g:1342:2: ( invocation_expression ';' )+
            	int cnt289 = 0;
            	do 
            	{
            	    int alt289 = 2;
            	    int LA289_0 = input.LA(1);

            	    if ( (LA289_0 == IDENTIFIER || LA289_0 == 65 || LA289_0 == 83 || LA289_0 == 85 || LA289_0 == 98 || (LA289_0 >= 132 && LA289_0 <= 133) || (LA289_0 >= 135 && LA289_0 <= 148) || (LA289_0 >= 150 && LA289_0 <= 152) || LA289_0 == 154 || (LA289_0 >= 157 && LA289_0 <= 168) || LA289_0 == 170 || (LA289_0 >= 177 && LA289_0 <= 178) || (LA289_0 >= 195 && LA289_0 <= 202)) )
            	    {
            	        alt289 = 1;
            	    }


            	    switch (alt289) 
            		{
            			case 1 :
            			    // cs.g:1342:3: invocation_expression ';'
            			    {
            			    	PushFollow(FOLLOW_invocation_expression_in_invocation_expression_list10409);
            			    	invocation_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_invocation_expression_list10411); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt289 >= 1 ) goto loop289;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee289 =
            		                new EarlyExitException(289, input);
            		            throw eee289;
            	    }
            	    cnt289++;
            	} while (true);

            	loop289:
            		;	// Stops C# compiler whining that label 'loop289' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 314, invocation_expression_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "invocation_expression_list"


    // $ANTLR start "primary_expression_list"
    // cs.g:1343:1: primary_expression_list : ( primary_expression ';' )+ ;
    public void primary_expression_list() // throws RecognitionException [1]
    {   
        int primary_expression_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 315) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1343:24: ( ( primary_expression ';' )+ )
            // cs.g:1344:2: ( primary_expression ';' )+
            {
            	// cs.g:1344:2: ( primary_expression ';' )+
            	int cnt290 = 0;
            	do 
            	{
            	    int alt290 = 2;
            	    int LA290_0 = input.LA(1);

            	    if ( ((LA290_0 >= IDENTIFIER && LA290_0 <= NULL) || LA290_0 == 65 || LA290_0 == 68 || LA290_0 == 83 || LA290_0 == 85 || LA290_0 == 88 || (LA290_0 >= 93 && LA290_0 <= 98) || (LA290_0 >= 132 && LA290_0 <= 133) || (LA290_0 >= 135 && LA290_0 <= 148) || (LA290_0 >= 150 && LA290_0 <= 152) || LA290_0 == 154 || (LA290_0 >= 157 && LA290_0 <= 168) || LA290_0 == 170 || (LA290_0 >= 177 && LA290_0 <= 178) || (LA290_0 >= 195 && LA290_0 <= 202)) )
            	    {
            	        alt290 = 1;
            	    }


            	    switch (alt290) 
            		{
            			case 1 :
            			    // cs.g:1344:3: primary_expression ';'
            			    {
            			    	PushFollow(FOLLOW_primary_expression_in_primary_expression_list10422);
            			    	primary_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_primary_expression_list10424); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt290 >= 1 ) goto loop290;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee290 =
            		                new EarlyExitException(290, input);
            		            throw eee290;
            	    }
            	    cnt290++;
            	} while (true);

            	loop290:
            		;	// Stops C# compiler whining that label 'loop290' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 315, primary_expression_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "primary_expression_list"


    // $ANTLR start "non_assignment_expression_list"
    // cs.g:1345:1: non_assignment_expression_list : ( non_assignment_expression ';' )+ ;
    public void non_assignment_expression_list() // throws RecognitionException [1]
    {   
        int non_assignment_expression_list_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 316) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1345:31: ( ( non_assignment_expression ';' )+ )
            // cs.g:1346:2: ( non_assignment_expression ';' )+
            {
            	// cs.g:1346:2: ( non_assignment_expression ';' )+
            	int cnt291 = 0;
            	do 
            	{
            	    int alt291 = 2;
            	    int LA291_0 = input.LA(1);

            	    if ( ((LA291_0 >= IDENTIFIER && LA291_0 <= NULL) || LA291_0 == MINUS || LA291_0 == 65 || LA291_0 == 68 || LA291_0 == 83 || LA291_0 == 85 || LA291_0 == 88 || (LA291_0 >= 93 && LA291_0 <= 98) || LA291_0 == 100 || (LA291_0 >= 102 && LA291_0 <= 106) || LA291_0 == 117 || (LA291_0 >= 132 && LA291_0 <= 133) || (LA291_0 >= 135 && LA291_0 <= 148) || (LA291_0 >= 150 && LA291_0 <= 152) || LA291_0 == 154 || (LA291_0 >= 157 && LA291_0 <= 168) || LA291_0 == 170 || (LA291_0 >= 177 && LA291_0 <= 178) || (LA291_0 >= 195 && LA291_0 <= 202)) )
            	    {
            	        alt291 = 1;
            	    }


            	    switch (alt291) 
            		{
            			case 1 :
            			    // cs.g:1346:3: non_assignment_expression ';'
            			    {
            			    	PushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression_list10435);
            			    	non_assignment_expression();
            			    	state._fsp--;
            			    	if (state.failed) return ;
            			    	Match(input,SEMI,FOLLOW_SEMI_in_non_assignment_expression_list10437); if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt291 >= 1 ) goto loop291;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee291 =
            		                new EarlyExitException(291, input);
            		            throw eee291;
            	    }
            	    cnt291++;
            	} while (true);

            	loop291:
            		;	// Stops C# compiler whining that label 'loop291' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 316, non_assignment_expression_list_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "non_assignment_expression_list"


    // $ANTLR start "method_declarations"
    // cs.g:1347:1: method_declarations : ( ( modifiers )? ( 'void' | type ) method_declaration )+ ;
    public void method_declarations() // throws RecognitionException [1]
    {   
        int method_declarations_StartIndex = input.Index;
        try 
    	{
    	    if ( (state.backtracking > 0) && AlreadyParsedRule(input, 317) ) 
    	    {
    	    	return ; 
    	    }
            // cs.g:1347:20: ( ( ( modifiers )? ( 'void' | type ) method_declaration )+ )
            // cs.g:1348:2: ( ( modifiers )? ( 'void' | type ) method_declaration )+
            {
            	// cs.g:1348:2: ( ( modifiers )? ( 'void' | type ) method_declaration )+
            	int cnt294 = 0;
            	do 
            	{
            	    int alt294 = 2;
            	    int LA294_0 = input.LA(1);

            	    if ( (LA294_0 == IDENTIFIER || (LA294_0 >= 64 && LA294_0 <= 65) || (LA294_0 >= 68 && LA294_0 <= 80) || LA294_0 == 82 || (LA294_0 >= 132 && LA294_0 <= 133) || (LA294_0 >= 135 && LA294_0 <= 148) || (LA294_0 >= 150 && LA294_0 <= 152) || LA294_0 == 154 || (LA294_0 >= 157 && LA294_0 <= 168) || LA294_0 == 170 || (LA294_0 >= 177 && LA294_0 <= 178) || (LA294_0 >= 195 && LA294_0 <= 202)) )
            	    {
            	        alt294 = 1;
            	    }


            	    switch (alt294) 
            		{
            			case 1 :
            			    // cs.g:1348:3: ( modifiers )? ( 'void' | type ) method_declaration
            			    {
            			    	// cs.g:1348:3: ( modifiers )?
            			    	int alt292 = 2;
            			    	int LA292_0 = input.LA(1);

            			    	if ( (LA292_0 == 64 || (LA292_0 >= 68 && LA292_0 <= 80)) )
            			    	{
            			    	    alt292 = 1;
            			    	}
            			    	switch (alt292) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1348:3: modifiers
            			    	        {
            			    	        	PushFollow(FOLLOW_modifiers_in_method_declarations10448);
            			    	        	modifiers();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	// cs.g:1348:14: ( 'void' | type )
            			    	int alt293 = 2;
            			    	int LA293_0 = input.LA(1);

            			    	if ( (LA293_0 == 82) )
            			    	{
            			    	    int LA293_1 = input.LA(2);

            			    	    if ( (LA293_1 == 100) )
            			    	    {
            			    	        alt293 = 2;
            			    	    }
            			    	    else if ( ((LA293_1 >= IDENTIFIER && LA293_1 <= NULL) || LA293_1 == 65 || (LA293_1 >= 132 && LA293_1 <= 133) || (LA293_1 >= 135 && LA293_1 <= 148) || (LA293_1 >= 150 && LA293_1 <= 152) || LA293_1 == 154 || (LA293_1 >= 157 && LA293_1 <= 168) || LA293_1 == 170 || (LA293_1 >= 177 && LA293_1 <= 178) || (LA293_1 >= 195 && LA293_1 <= 202)) )
            			    	    {
            			    	        alt293 = 1;
            			    	    }
            			    	    else 
            			    	    {
            			    	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    	        NoViableAltException nvae_d293s1 =
            			    	            new NoViableAltException("", 293, 1, input);

            			    	        throw nvae_d293s1;
            			    	    }
            			    	}
            			    	else if ( (LA293_0 == IDENTIFIER || LA293_0 == 65 || (LA293_0 >= 132 && LA293_0 <= 133) || (LA293_0 >= 135 && LA293_0 <= 148) || (LA293_0 >= 150 && LA293_0 <= 152) || LA293_0 == 154 || (LA293_0 >= 157 && LA293_0 <= 168) || LA293_0 == 170 || (LA293_0 >= 177 && LA293_0 <= 178) || (LA293_0 >= 195 && LA293_0 <= 202)) )
            			    	{
            			    	    alt293 = 2;
            			    	}
            			    	else 
            			    	{
            			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            			    	    NoViableAltException nvae_d293s0 =
            			    	        new NoViableAltException("", 293, 0, input);

            			    	    throw nvae_d293s0;
            			    	}
            			    	switch (alt293) 
            			    	{
            			    	    case 1 :
            			    	        // cs.g:1348:15: 'void'
            			    	        {
            			    	        	Match(input,82,FOLLOW_82_in_method_declarations10452); if (state.failed) return ;

            			    	        }
            			    	        break;
            			    	    case 2 :
            			    	        // cs.g:1348:24: type
            			    	        {
            			    	        	PushFollow(FOLLOW_type_in_method_declarations10456);
            			    	        	type();
            			    	        	state._fsp--;
            			    	        	if (state.failed) return ;

            			    	        }
            			    	        break;

            			    	}

            			    	PushFollow(FOLLOW_method_declaration_in_method_declarations10459);
            			    	method_declaration();
            			    	state._fsp--;
            			    	if (state.failed) return ;

            			    }
            			    break;

            			default:
            			    if ( cnt294 >= 1 ) goto loop294;
            			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            		            EarlyExitException eee294 =
            		                new EarlyExitException(294, input);
            		            throw eee294;
            	    }
            	    cnt294++;
            	} while (true);

            	loop294:
            		;	// Stops C# compiler whining that label 'loop294' has no statements


            }

        }
        catch (RecognitionException re) 
    	{
            ReportError(re);
            Recover(input,re);
        }
        finally 
    	{
            if ( state.backtracking > 0 ) 
            {
            	Memoize(input, 317, method_declarations_StartIndex); 
            }
        }
        return ;
    }
    // $ANTLR end "method_declarations"

    // $ANTLR start "synpred1_cs"
    public void synpred1_cs_fragment() {
        // cs.g:59:2: ( 'partial' )
        // cs.g:59:3: 'partial'
        {
        	Match(input,67,FOLLOW_67_in_synpred1_cs261); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred1_cs"

    // $ANTLR start "synpred2_cs"
    public void synpred2_cs_fragment() {
        // cs.g:90:11: ( member_name '(' )
        // cs.g:90:12: member_name '('
        {
        	PushFollow(FOLLOW_member_name_in_synpred2_cs525);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,88,FOLLOW_88_in_synpred2_cs529); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred2_cs"

    // $ANTLR start "synpred3_cs"
    public void synpred3_cs_fragment() {
        // cs.g:91:8: ( member_name '{' )
        // cs.g:91:9: member_name '{'
        {
        	PushFollow(FOLLOW_member_name_in_synpred3_cs544);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,62,FOLLOW_62_in_synpred3_cs548); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred3_cs"

    // $ANTLR start "synpred4_cs"
    public void synpred4_cs_fragment() {
        // cs.g:92:8: ( member_name '.' 'this' )
        // cs.g:92:9: member_name '.' 'this'
        {
        	PushFollow(FOLLOW_member_name_in_synpred4_cs563);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,DOT,FOLLOW_DOT_in_synpred4_cs567); if (state.failed) return ;
        	Match(input,83,FOLLOW_83_in_synpred4_cs571); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred4_cs"

    // $ANTLR start "synpred5_cs"
    public void synpred5_cs_fragment() {
        // cs.g:110:2: ( 'this' brackets )
        // cs.g:110:3: 'this' brackets
        {
        	Match(input,83,FOLLOW_83_in_synpred5_cs691); if (state.failed) return ;
        	PushFollow(FOLLOW_brackets_in_synpred5_cs696);
        	brackets();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred5_cs"

    // $ANTLR start "synpred6_cs"
    public void synpred6_cs_fragment() {
        // cs.g:111:4: ( 'base' brackets )
        // cs.g:111:5: 'base' brackets
        {
        	Match(input,85,FOLLOW_85_in_synpred6_cs716); if (state.failed) return ;
        	PushFollow(FOLLOW_brackets_in_synpred6_cs720);
        	brackets();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred6_cs"

    // $ANTLR start "synpred7_cs"
    public void synpred7_cs_fragment() {
        // cs.g:113:14: ( object_creation_expression ( '.' | '->' | '[' ) )
        // cs.g:113:15: object_creation_expression ( '.' | '->' | '[' )
        {
        	PushFollow(FOLLOW_object_creation_expression_in_synpred7_cs756);
        	object_creation_expression();
        	state._fsp--;
        	if (state.failed) return ;
        	if ( (input.LA(1) >= DOT && input.LA(1) <= PTR) || input.LA(1) == 86 ) 
        	{
        	    input.Consume();
        	    state.errorRecovery = false;state.failed = false;
        	}
        	else 
        	{
        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
        	    MismatchedSetException mse = new MismatchedSetException(null,input);
        	    throw mse;
        	}


        }
    }
    // $ANTLR end "synpred7_cs"

    // $ANTLR start "synpred8_cs"
    public void synpred8_cs_fragment() {
        // cs.g:117:7: ( delegate_creation_expression )
        // cs.g:117:8: delegate_creation_expression
        {
        	PushFollow(FOLLOW_delegate_creation_expression_in_synpred8_cs804);
        	delegate_creation_expression();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred8_cs"

    // $ANTLR start "synpred9_cs"
    public void synpred9_cs_fragment() {
        // cs.g:129:4: ( identifier '<' )
        // cs.g:129:5: identifier '<'
        {
        	PushFollow(FOLLOW_identifier_in_synpred9_cs929);
        	identifier();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,99,FOLLOW_99_in_synpred9_cs934); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred9_cs"

    // $ANTLR start "synpred10_cs"
    public void synpred10_cs_fragment() {
        // cs.g:167:4: ( '(' type ')' )
        // cs.g:167:5: '(' type ')'
        {
        	Match(input,88,FOLLOW_88_in_synpred10_cs1186); if (state.failed) return ;
        	PushFollow(FOLLOW_type_in_synpred10_cs1190);
        	type();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,RPAREN,FOLLOW_RPAREN_in_synpred10_cs1194); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred10_cs"

    // $ANTLR start "synpred11_cs"
    public void synpred11_cs_fragment() {
        // cs.g:195:2: ( array_creation_expression )
        // cs.g:195:3: array_creation_expression
        {
        	PushFollow(FOLLOW_array_creation_expression_in_synpred11_cs1436);
        	array_creation_expression();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred11_cs"

    // $ANTLR start "synpred12_cs"
    public void synpred12_cs_fragment() {
        // cs.g:204:11: ( arguments ( '[' | '.' | '->' ) )
        // cs.g:204:12: arguments ( '[' | '.' | '->' )
        {
        	PushFollow(FOLLOW_arguments_in_synpred12_cs1516);
        	arguments();
        	state._fsp--;
        	if (state.failed) return ;
        	if ( (input.LA(1) >= DOT && input.LA(1) <= PTR) || input.LA(1) == 86 ) 
        	{
        	    input.Consume();
        	    state.errorRecovery = false;state.failed = false;
        	}
        	else 
        	{
        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
        	    MismatchedSetException mse = new MismatchedSetException(null,input);
        	    throw mse;
        	}


        }
    }
    // $ANTLR end "synpred12_cs"

    // $ANTLR start "synpred13_cs"
    public void synpred13_cs_fragment() {
        // cs.g:275:20: ( unbound_type_name )
        // cs.g:275:21: unbound_type_name
        {
        	PushFollow(FOLLOW_unbound_type_name_in_synpred13_cs2046);
        	unbound_type_name();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred13_cs"

    // $ANTLR start "synpred14_cs"
    public void synpred14_cs_fragment() {
        // cs.g:285:5: ( generic_dimension_specifier '.' )
        // cs.g:285:6: generic_dimension_specifier '.'
        {
        	PushFollow(FOLLOW_generic_dimension_specifier_in_synpred14_cs2104);
        	generic_dimension_specifier();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,DOT,FOLLOW_DOT_in_synpred14_cs2108); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred14_cs"

    // $ANTLR start "synpred15_cs"
    public void synpred15_cs_fragment() {
        // cs.g:308:2: ( identifier '<' )
        // cs.g:308:3: identifier '<'
        {
        	PushFollow(FOLLOW_identifier_in_synpred15_cs2240);
        	identifier();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,99,FOLLOW_99_in_synpred15_cs2244); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred15_cs"

    // $ANTLR start "synpred16_cs"
    public void synpred16_cs_fragment() {
        // cs.g:316:4: ( identifier '<' )
        // cs.g:316:5: identifier '<'
        {
        	PushFollow(FOLLOW_identifier_in_synpred16_cs2289);
        	identifier();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,99,FOLLOW_99_in_synpred16_cs2294); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred16_cs"

    // $ANTLR start "synpred17_cs"
    public void synpred17_cs_fragment() {
        // cs.g:333:4: ( ( predefined_type | type_name ) rank_specifiers )
        // cs.g:333:5: ( predefined_type | type_name ) rank_specifiers
        {
        	// cs.g:333:5: ( predefined_type | type_name )
        	int alt295 = 2;
        	int LA295_0 = input.LA(1);

        	if ( ((LA295_0 >= 160 && LA295_0 <= 168) || (LA295_0 >= 196 && LA295_0 <= 201)) )
        	{
        	    alt295 = 1;
        	}
        	else if ( (LA295_0 == IDENTIFIER || LA295_0 == 65 || (LA295_0 >= 132 && LA295_0 <= 133) || (LA295_0 >= 135 && LA295_0 <= 148) || (LA295_0 >= 150 && LA295_0 <= 152) || LA295_0 == 154 || (LA295_0 >= 157 && LA295_0 <= 159) || LA295_0 == 170 || (LA295_0 >= 177 && LA295_0 <= 178) || LA295_0 == 195 || LA295_0 == 202) )
        	{
        	    alt295 = 2;
        	}
        	else 
        	{
        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
        	    NoViableAltException nvae_d295s0 =
        	        new NoViableAltException("", 295, 0, input);

        	    throw nvae_d295s0;
        	}
        	switch (alt295) 
        	{
        	    case 1 :
        	        // cs.g:333:6: predefined_type
        	        {
        	        	PushFollow(FOLLOW_predefined_type_in_synpred17_cs2387);
        	        	predefined_type();
        	        	state._fsp--;
        	        	if (state.failed) return ;

        	        }
        	        break;
        	    case 2 :
        	        // cs.g:333:24: type_name
        	        {
        	        	PushFollow(FOLLOW_type_name_in_synpred17_cs2391);
        	        	type_name();
        	        	state._fsp--;
        	        	if (state.failed) return ;

        	        }
        	        break;

        	}

        	PushFollow(FOLLOW_rank_specifiers_in_synpred17_cs2395);
        	rank_specifiers();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred17_cs"

    // $ANTLR start "synpred18_cs"
    public void synpred18_cs_fragment() {
        // cs.g:334:4: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )
        // cs.g:334:5: ( predefined_type | type_name ) ( ( '*' )+ | '?' )
        {
        	// cs.g:334:5: ( predefined_type | type_name )
        	int alt296 = 2;
        	int LA296_0 = input.LA(1);

        	if ( ((LA296_0 >= 160 && LA296_0 <= 168) || (LA296_0 >= 196 && LA296_0 <= 201)) )
        	{
        	    alt296 = 1;
        	}
        	else if ( (LA296_0 == IDENTIFIER || LA296_0 == 65 || (LA296_0 >= 132 && LA296_0 <= 133) || (LA296_0 >= 135 && LA296_0 <= 148) || (LA296_0 >= 150 && LA296_0 <= 152) || LA296_0 == 154 || (LA296_0 >= 157 && LA296_0 <= 159) || LA296_0 == 170 || (LA296_0 >= 177 && LA296_0 <= 178) || LA296_0 == 195 || LA296_0 == 202) )
        	{
        	    alt296 = 2;
        	}
        	else 
        	{
        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
        	    NoViableAltException nvae_d296s0 =
        	        new NoViableAltException("", 296, 0, input);

        	    throw nvae_d296s0;
        	}
        	switch (alt296) 
        	{
        	    case 1 :
        	        // cs.g:334:6: predefined_type
        	        {
        	        	PushFollow(FOLLOW_predefined_type_in_synpred18_cs2422);
        	        	predefined_type();
        	        	state._fsp--;
        	        	if (state.failed) return ;

        	        }
        	        break;
        	    case 2 :
        	        // cs.g:334:24: type_name
        	        {
        	        	PushFollow(FOLLOW_type_name_in_synpred18_cs2426);
        	        	type_name();
        	        	state._fsp--;
        	        	if (state.failed) return ;

        	        }
        	        break;

        	}

        	// cs.g:334:36: ( ( '*' )+ | '?' )
        	int alt298 = 2;
        	int LA298_0 = input.LA(1);

        	if ( (LA298_0 == 100) )
        	{
        	    alt298 = 1;
        	}
        	else if ( (LA298_0 == 101) )
        	{
        	    alt298 = 2;
        	}
        	else 
        	{
        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
        	    NoViableAltException nvae_d298s0 =
        	        new NoViableAltException("", 298, 0, input);

        	    throw nvae_d298s0;
        	}
        	switch (alt298) 
        	{
        	    case 1 :
        	        // cs.g:334:37: ( '*' )+
        	        {
        	        	// cs.g:334:37: ( '*' )+
        	        	int cnt297 = 0;
        	        	do 
        	        	{
        	        	    int alt297 = 2;
        	        	    int LA297_0 = input.LA(1);

        	        	    if ( (LA297_0 == 100) )
        	        	    {
        	        	        alt297 = 1;
        	        	    }


        	        	    switch (alt297) 
        	        		{
        	        			case 1 :
        	        			    // cs.g:334:37: '*'
        	        			    {
        	        			    	Match(input,100,FOLLOW_100_in_synpred18_cs2431); if (state.failed) return ;

        	        			    }
        	        			    break;

        	        			default:
        	        			    if ( cnt297 >= 1 ) goto loop297;
        	        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
        	        		            EarlyExitException eee297 =
        	        		                new EarlyExitException(297, input);
        	        		            throw eee297;
        	        	    }
        	        	    cnt297++;
        	        	} while (true);

        	        	loop297:
        	        		;	// Stops C# compiler whining that label 'loop297' has no statements


        	        }
        	        break;
        	    case 2 :
        	        // cs.g:334:44: '?'
        	        {
        	        	Match(input,101,FOLLOW_101_in_synpred18_cs2436); if (state.failed) return ;

        	        }
        	        break;

        	}


        }
    }
    // $ANTLR end "synpred18_cs"

    // $ANTLR start "synpred19_cs"
    public void synpred19_cs_fragment() {
        // cs.g:370:2: ( unary_expression assignment_operator )
        // cs.g:370:3: unary_expression assignment_operator
        {
        	PushFollow(FOLLOW_unary_expression_in_synpred19_cs2618);
        	unary_expression();
        	state._fsp--;
        	if (state.failed) return ;
        	PushFollow(FOLLOW_assignment_operator_in_synpred19_cs2622);
        	assignment_operator();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred19_cs"

    // $ANTLR start "synpred20_cs"
    public void synpred20_cs_fragment() {
        // cs.g:379:2: ( cast_expression )
        // cs.g:379:3: cast_expression
        {
        	PushFollow(FOLLOW_cast_expression_in_synpred20_cs2680);
        	cast_expression();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred20_cs"

    // $ANTLR start "synpred21_cs"
    public void synpred21_cs_fragment() {
        // cs.g:405:2: ( anonymous_function_signature '=>' )
        // cs.g:405:3: anonymous_function_signature '=>'
        {
        	PushFollow(FOLLOW_anonymous_function_signature_in_synpred21_cs2896);
        	anonymous_function_signature();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,131,FOLLOW_131_in_synpred21_cs2900); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred21_cs"

    // $ANTLR start "synpred22_cs"
    public void synpred22_cs_fragment() {
        // cs.g:406:4: ( query_expression )
        // cs.g:406:5: query_expression
        {
        	PushFollow(FOLLOW_query_expression_in_synpred22_cs2911);
        	query_expression();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred22_cs"

    // $ANTLR start "synpred23_cs"
    public void synpred23_cs_fragment() {
        // cs.g:470:50: ( 'into' )
        // cs.g:470:51: 'into'
        {
        	Match(input,132,FOLLOW_132_in_synpred23_cs3334); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred23_cs"

    // $ANTLR start "synpred24_cs"
    public void synpred24_cs_fragment() {
        // cs.g:537:32: ( ',' identifier '=' )
        // cs.g:537:33: ',' identifier '='
        {
        	Match(input,89,FOLLOW_89_in_synpred24_cs3836); if (state.failed) return ;
        	PushFollow(FOLLOW_identifier_in_synpred24_cs3840);
        	identifier();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,66,FOLLOW_66_in_synpred24_cs3844); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred24_cs"

    // $ANTLR start "synpred25_cs"
    public void synpred25_cs_fragment() {
        // cs.g:618:4: ( member_name '{' )
        // cs.g:618:5: member_name '{'
        {
        	PushFollow(FOLLOW_member_name_in_synpred25_cs4362);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,62,FOLLOW_62_in_synpred25_cs4366); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred25_cs"

    // $ANTLR start "synpred26_cs"
    public void synpred26_cs_fragment() {
        // cs.g:725:14: ( member_name '(' )
        // cs.g:725:15: member_name '('
        {
        	PushFollow(FOLLOW_member_name_in_synpred26_cs5227);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,88,FOLLOW_88_in_synpred26_cs5231); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred26_cs"

    // $ANTLR start "synpred27_cs"
    public void synpred27_cs_fragment() {
        // cs.g:726:14: ( member_name '{' )
        // cs.g:726:15: member_name '{'
        {
        	PushFollow(FOLLOW_member_name_in_synpred27_cs5252);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,62,FOLLOW_62_in_synpred27_cs5256); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred27_cs"

    // $ANTLR start "synpred28_cs"
    public void synpred28_cs_fragment() {
        // cs.g:777:11: ( member_name '(' )
        // cs.g:777:12: member_name '('
        {
        	PushFollow(FOLLOW_member_name_in_synpred28_cs5700);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,88,FOLLOW_88_in_synpred28_cs5704); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred28_cs"

    // $ANTLR start "synpred29_cs"
    public void synpred29_cs_fragment() {
        // cs.g:778:8: ( member_name '{' )
        // cs.g:778:9: member_name '{'
        {
        	PushFollow(FOLLOW_member_name_in_synpred29_cs5719);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,62,FOLLOW_62_in_synpred29_cs5723); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred29_cs"

    // $ANTLR start "synpred30_cs"
    public void synpred30_cs_fragment() {
        // cs.g:779:8: ( member_name '.' 'this' )
        // cs.g:779:9: member_name '.' 'this'
        {
        	PushFollow(FOLLOW_member_name_in_synpred30_cs5738);
        	member_name();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,DOT,FOLLOW_DOT_in_synpred30_cs5742); if (state.failed) return ;
        	Match(input,83,FOLLOW_83_in_synpred30_cs5746); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred30_cs"

    // $ANTLR start "synpred31_cs"
    public void synpred31_cs_fragment() {
        // cs.g:851:23: ( arguments ( '[' | '.' | '->' ) )
        // cs.g:851:24: arguments ( '[' | '.' | '->' )
        {
        	PushFollow(FOLLOW_arguments_in_synpred31_cs6292);
        	arguments();
        	state._fsp--;
        	if (state.failed) return ;
        	if ( (input.LA(1) >= DOT && input.LA(1) <= PTR) || input.LA(1) == 86 ) 
        	{
        	    input.Consume();
        	    state.errorRecovery = false;state.failed = false;
        	}
        	else 
        	{
        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
        	    MismatchedSetException mse = new MismatchedSetException(null,input);
        	    throw mse;
        	}


        }
    }
    // $ANTLR end "synpred31_cs"

    // $ANTLR start "synpred32_cs"
    public void synpred32_cs_fragment() {
        // cs.g:855:4: ( identifier '<' )
        // cs.g:855:5: identifier '<'
        {
        	PushFollow(FOLLOW_identifier_in_synpred32_cs6343);
        	identifier();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,99,FOLLOW_99_in_synpred32_cs6348); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred32_cs"

    // $ANTLR start "synpred33_cs"
    public void synpred33_cs_fragment() {
        // cs.g:868:2: ( declaration_statement )
        // cs.g:868:3: declaration_statement
        {
        	PushFollow(FOLLOW_declaration_statement_in_synpred33_cs6429);
        	declaration_statement();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred33_cs"

    // $ANTLR start "synpred34_cs"
    public void synpred34_cs_fragment() {
        // cs.g:869:4: ( identifier ':' )
        // cs.g:869:5: identifier ':'
        {
        	PushFollow(FOLLOW_identifier_in_synpred34_cs6440);
        	identifier();
        	state._fsp--;
        	if (state.failed) return ;
        	Match(input,90,FOLLOW_90_in_synpred34_cs6444); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred34_cs"

    // $ANTLR start "synpred35_cs"
    public void synpred35_cs_fragment() {
        // cs.g:906:2: ( 'var' )
        // cs.g:906:3: 'var'
        {
        	Match(input,177,FOLLOW_177_in_synpred35_cs6668); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred35_cs"

    // $ANTLR start "synpred36_cs"
    public void synpred36_cs_fragment() {
        // cs.g:907:4: ( 'dynamic' )
        // cs.g:907:5: 'dynamic'
        {
        	Match(input,178,FOLLOW_178_in_synpred36_cs6679); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred36_cs"

    // $ANTLR start "synpred37_cs"
    public void synpred37_cs_fragment() {
        // cs.g:933:62: ( 'else' )
        // cs.g:933:63: 'else'
        {
        	Match(input,180,FOLLOW_180_in_synpred37_cs6846); if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred37_cs"

    // $ANTLR start "synpred38_cs"
    public void synpred38_cs_fragment() {
        // cs.g:962:2: ( local_variable_declaration )
        // cs.g:962:3: local_variable_declaration
        {
        	PushFollow(FOLLOW_local_variable_declaration_in_synpred38_cs7097);
        	local_variable_declaration();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred38_cs"

    // $ANTLR start "synpred39_cs"
    public void synpred39_cs_fragment() {
        // cs.g:1014:2: ( local_variable_declaration )
        // cs.g:1014:3: local_variable_declaration
        {
        	PushFollow(FOLLOW_local_variable_declaration_in_synpred39_cs7510);
        	local_variable_declaration();
        	state._fsp--;
        	if (state.failed) return ;

        }
    }
    // $ANTLR end "synpred39_cs"

    // Delegated rules

   	public bool synpred24_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred24_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred9_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred9_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred19_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred19_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred15_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred15_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred2_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred2_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred4_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred4_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred12_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred12_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred18_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred18_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred32_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred32_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred29_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred29_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred16_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred16_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred10_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred10_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred5_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred5_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred17_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred17_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred28_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred28_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred14_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred14_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred6_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred6_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred25_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred25_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred37_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred37_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred31_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred31_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred22_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred22_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred11_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred11_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred7_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred7_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred23_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred23_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred34_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred34_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred36_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred36_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred21_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred21_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred13_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred13_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred8_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred8_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred33_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred33_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred26_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred26_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred30_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred30_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred3_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred3_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred35_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred35_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred38_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred38_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred1_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred1_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred39_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred39_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred27_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred27_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}
   	public bool synpred20_cs() 
   	{
   	    state.backtracking++;
   	    int start = input.Mark();
   	    try 
   	    {
   	        synpred20_cs_fragment(); // can never throw exception
   	    }
   	    catch (RecognitionException re) 
   	    {
   	        Console.Error.WriteLine("impossible: "+re);
   	    }
   	    bool success = !state.failed;
   	    input.Rewind(start);
   	    state.backtracking--;
   	    state.failed = false;
   	    return success;
   	}


   	protected DFA21 dfa21;
   	protected DFA20 dfa20;
   	protected DFA27 dfa27;
   	protected DFA29 dfa29;
   	protected DFA38 dfa38;
   	protected DFA46 dfa46;
   	protected DFA50 dfa50;
   	protected DFA71 dfa71;
   	protected DFA72 dfa72;
   	protected DFA101 dfa101;
   	protected DFA105 dfa105;
   	protected DFA106 dfa106;
   	protected DFA107 dfa107;
   	protected DFA230 dfa230;
   	protected DFA229 dfa229;
   	protected DFA233 dfa233;
   	protected DFA241 dfa241;
   	protected DFA242 dfa242;
   	protected DFA259 dfa259;
   	protected DFA271 dfa271;
	private void InitializeCyclicDFAs()
	{
    	this.dfa21 = new DFA21(this);
    	this.dfa20 = new DFA20(this);
    	this.dfa27 = new DFA27(this);
    	this.dfa29 = new DFA29(this);
    	this.dfa38 = new DFA38(this);
    	this.dfa46 = new DFA46(this);
    	this.dfa50 = new DFA50(this);
    	this.dfa71 = new DFA71(this);
    	this.dfa72 = new DFA72(this);
    	this.dfa101 = new DFA101(this);
    	this.dfa105 = new DFA105(this);
    	this.dfa106 = new DFA106(this);
    	this.dfa107 = new DFA107(this);
    	this.dfa230 = new DFA230(this);
    	this.dfa229 = new DFA229(this);
    	this.dfa233 = new DFA233(this);
    	this.dfa241 = new DFA241(this);
    	this.dfa242 = new DFA242(this);
    	this.dfa259 = new DFA259(this);
    	this.dfa271 = new DFA271(this);
	    this.dfa20.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA20_SpecialStateTransition);
	    this.dfa27.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA27_SpecialStateTransition);
	    this.dfa29.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA29_SpecialStateTransition);
	    this.dfa38.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA38_SpecialStateTransition);
	    this.dfa46.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA46_SpecialStateTransition);
	    this.dfa71.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA71_SpecialStateTransition);
	    this.dfa72.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA72_SpecialStateTransition);
	    this.dfa101.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA101_SpecialStateTransition);
	    this.dfa105.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA105_SpecialStateTransition);
	    this.dfa107.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA107_SpecialStateTransition);
	    this.dfa229.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA229_SpecialStateTransition);
	    this.dfa241.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA241_SpecialStateTransition);
	    this.dfa259.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA259_SpecialStateTransition);
	    this.dfa271.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA271_SpecialStateTransition);
	}

    const string DFA21_eotS =
        "\x10\uffff";
    const string DFA21_eofS =
        "\x10\uffff";
    const string DFA21_minS =
        "\x01\x04\x04\uffff\x01\x04\x01\uffff\x01\x04\x08\uffff";
    const string DFA21_maxS =
        "\x01\u00ca\x04\uffff\x01\u00ca\x01\uffff\x01\u00ca\x08\uffff";
    const string DFA21_acceptS =
        "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\uffff\x01\x06\x01"+
        "\uffff\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0d\x01\x05\x01"+
        "\x0c";
    const string DFA21_specialS =
        "\x10\uffff}>";
    static readonly string[] DFA21_transitionS = {
            "\x01\x07\x0e\uffff\x01\x0a\x2d\uffff\x01\x07\x01\uffff\x01"+
            "\x03\x0d\uffff\x01\x01\x01\x05\x0e\uffff\x01\x0b\x08\uffff\x01"+
            "\x0d\x19\uffff\x02\x07\x01\uffff\x0e\x07\x01\x02\x03\x07\x01"+
            "\uffff\x01\x07\x01\x08\x01\uffff\x03\x07\x09\x06\x01\x09\x01"+
            "\x07\x01\uffff\x01\x04\x01\uffff\x02\x0c\x01\uffff\x02\x07\x10"+
            "\uffff\x01\x07\x06\x06\x01\x07",
            "",
            "",
            "",
            "",
            "\x0a\x0e\x33\uffff\x01\x0e\x22\uffff\x01\x06\x1f\uffff\x02"+
            "\x0e\x01\uffff\x0e\x0e\x01\uffff\x03\x0e\x01\uffff\x01\x0e\x02"+
            "\uffff\x0c\x0e\x01\uffff\x01\x0e\x06\uffff\x02\x0e\x10\uffff"+
            "\x08\x0e",
            "",
            "\x0b\x06\x32\uffff\x01\x06\x11\uffff\x02\x06\x01\uffff\x01"+
            "\x06\x01\uffff\x01\x0f\x0a\uffff\x03\x06\x1e\uffff\x02\x06\x01"+
            "\uffff\x0e\x06\x01\uffff\x03\x06\x01\uffff\x01\x06\x02\uffff"+
            "\x0c\x06\x01\uffff\x01\x06\x02\uffff\x01\x06\x03\uffff\x02\x06"+
            "\x10\uffff\x08\x06",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA21_eot = DFA.UnpackEncodedString(DFA21_eotS);
    static readonly short[] DFA21_eof = DFA.UnpackEncodedString(DFA21_eofS);
    static readonly char[] DFA21_min = DFA.UnpackEncodedStringToUnsignedChars(DFA21_minS);
    static readonly char[] DFA21_max = DFA.UnpackEncodedStringToUnsignedChars(DFA21_maxS);
    static readonly short[] DFA21_accept = DFA.UnpackEncodedString(DFA21_acceptS);
    static readonly short[] DFA21_special = DFA.UnpackEncodedString(DFA21_specialS);
    static readonly short[][] DFA21_transition = DFA.UnpackEncodedStringArray(DFA21_transitionS);

    protected class DFA21 : DFA
    {
        public DFA21(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = DFA21_eot;
            this.eof = DFA21_eof;
            this.min = DFA21_min;
            this.max = DFA21_max;
            this.accept = DFA21_accept;
            this.special = DFA21_special;
            this.transition = DFA21_transition;

        }

        override public string Description
        {
            get { return "82:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )"; }
        }

    }

    const string DFA20_eotS =
        "\x0a\uffff";
    const string DFA20_eofS =
        "\x0a\uffff";
    const string DFA20_minS =
        "\x01\x04\x03\x00\x06\uffff";
    const string DFA20_maxS =
        "\x01\u00ca\x03\x00\x06\uffff";
    const string DFA20_acceptS =
        "\x04\uffff\x01\x04\x01\x06\x01\x01\x01\x02\x01\x03\x01\x05";
    const string DFA20_specialS =
        "\x01\uffff\x01\x00\x01\x01\x01\x02\x06\uffff}>";
    static readonly string[] DFA20_transitionS = {
            "\x01\x02\x09\x03\x33\uffff\x01\x02\x11\uffff\x01\x04\x30\uffff"+
            "\x02\x02\x01\uffff\x0e\x02\x01\uffff\x03\x02\x01\uffff\x01\x02"+
            "\x02\uffff\x03\x02\x09\x01\x01\uffff\x01\x02\x02\uffff\x01\x05"+
            "\x03\uffff\x02\x02\x10\uffff\x01\x02\x06\x01\x01\x02",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA20_eot = DFA.UnpackEncodedString(DFA20_eotS);
    static readonly short[] DFA20_eof = DFA.UnpackEncodedString(DFA20_eofS);
    static readonly char[] DFA20_min = DFA.UnpackEncodedStringToUnsignedChars(DFA20_minS);
    static readonly char[] DFA20_max = DFA.UnpackEncodedStringToUnsignedChars(DFA20_maxS);
    static readonly short[] DFA20_accept = DFA.UnpackEncodedString(DFA20_acceptS);
    static readonly short[] DFA20_special = DFA.UnpackEncodedString(DFA20_specialS);
    static readonly short[][] DFA20_transition = DFA.UnpackEncodedStringArray(DFA20_transitionS);

    protected class DFA20 : DFA
    {
        public DFA20(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = DFA20_eot;
            this.eof = DFA20_eof;
            this.min = DFA20_min;
            this.max = DFA20_max;
            this.accept = DFA20_accept;
            this.special = DFA20_special;
            this.transition = DFA20_transition;

        }

        override public string Description
        {
            get { return "90:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )"; }
        }

    }


    protected internal int DFA20_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA20_1 = input.LA(1);

                   	 
                   	int index20_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred2_cs()) ) { s = 6; }

                   	else if ( (synpred3_cs()) ) { s = 7; }

                   	 
                   	input.Seek(index20_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA20_2 = input.LA(1);

                   	 
                   	int index20_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred2_cs()) ) { s = 6; }

                   	else if ( (synpred3_cs()) ) { s = 7; }

                   	else if ( (synpred4_cs()) ) { s = 8; }

                   	else if ( (true) ) { s = 9; }

                   	 
                   	input.Seek(index20_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA20_3 = input.LA(1);

                   	 
                   	int index20_3 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred2_cs()) ) { s = 6; }

                   	else if ( (synpred3_cs()) ) { s = 7; }

                   	 
                   	input.Seek(index20_3);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae20 =
            new NoViableAltException(dfa.Description, 20, _s, input);
        dfa.Error(nvae20);
        throw nvae20;
    }
    const string DFA27_eotS =
        "\x10\uffff";
    const string DFA27_eofS =
        "\x10\uffff";
    const string DFA27_minS =
        "\x01\x04\x01\x00\x0e\uffff";
    const string DFA27_maxS =
        "\x01\u00ca\x01\x00\x0e\uffff";
    const string DFA27_acceptS =
        "\x02\uffff\x01\x03\x05\uffff\x01\x04\x01\x05\x01\x06\x01\x07\x01"+
        "\x08\x01\x09\x01\x01\x01\x02";
    const string DFA27_specialS =
        "\x01\uffff\x01\x00\x0e\uffff}>";
    static readonly string[] DFA27_transitionS = {
            "\x0a\x02\x33\uffff\x01\x02\x02\uffff\x01\x08\x0e\uffff\x01"+
            "\x01\x01\uffff\x01\x02\x02\uffff\x01\x02\x04\uffff\x01\x09\x01"+
            "\x0a\x01\x0b\x01\x0c\x01\x0d\x01\x02\x21\uffff\x02\x02\x01\uffff"+
            "\x0e\x02\x01\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff\x0c\x02"+
            "\x01\uffff\x01\x02\x06\uffff\x02\x02\x10\uffff\x08\x02",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA27_eot = DFA.UnpackEncodedString(DFA27_eotS);
    static readonly short[] DFA27_eof = DFA.UnpackEncodedString(DFA27_eofS);
    static readonly char[] DFA27_min = DFA.UnpackEncodedStringToUnsignedChars(DFA27_minS);
    static readonly char[] DFA27_max = DFA.UnpackEncodedStringToUnsignedChars(DFA27_maxS);
    static readonly short[] DFA27_accept = DFA.UnpackEncodedString(DFA27_acceptS);
    static readonly short[] DFA27_special = DFA.UnpackEncodedString(DFA27_specialS);
    static readonly short[][] DFA27_transition = DFA.UnpackEncodedStringArray(DFA27_transitionS);

    protected class DFA27 : DFA
    {
        public DFA27(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;

        }

        override public string Description
        {
            get { return "109:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );"; }
        }

    }


    protected internal int DFA27_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA27_1 = input.LA(1);

                   	 
                   	int index27_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred5_cs()) ) { s = 14; }

                   	else if ( (synpred6_cs()) ) { s = 15; }

                   	else if ( (true) ) { s = 2; }

                   	 
                   	input.Seek(index27_1);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae27 =
            new NoViableAltException(dfa.Description, 27, _s, input);
        dfa.Error(nvae27);
        throw nvae27;
    }
    const string DFA29_eotS =
        "\x0a\uffff";
    const string DFA29_eofS =
        "\x0a\uffff";
    const string DFA29_minS =
        "\x01\x04\x01\uffff\x01\x00\x07\uffff";
    const string DFA29_maxS =
        "\x01\u00ca\x01\uffff\x01\x00\x07\uffff";
    const string DFA29_acceptS =
        "\x01\uffff\x01\x01\x01\uffff\x01\x04\x01\x05\x01\x06\x01\x07\x01"+
        "\x08\x01\x02\x01\x03";
    const string DFA29_specialS =
        "\x02\uffff\x01\x00\x07\uffff}>";
    static readonly string[] DFA29_transitionS = {
            "\x01\x02\x09\x07\x33\uffff\x01\x02\x11\uffff\x01\x03\x01\uffff"+
            "\x01\x04\x02\uffff\x01\x05\x09\uffff\x01\x06\x21\uffff\x02\x02"+
            "\x01\uffff\x0e\x02\x01\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff"+
            "\x03\x02\x09\x01\x01\uffff\x01\x02\x06\uffff\x02\x02\x10\uffff"+
            "\x01\x02\x06\x01\x01\x02",
            "",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA29_eot = DFA.UnpackEncodedString(DFA29_eotS);
    static readonly short[] DFA29_eof = DFA.UnpackEncodedString(DFA29_eofS);
    static readonly char[] DFA29_min = DFA.UnpackEncodedStringToUnsignedChars(DFA29_minS);
    static readonly char[] DFA29_max = DFA.UnpackEncodedStringToUnsignedChars(DFA29_maxS);
    static readonly short[] DFA29_accept = DFA.UnpackEncodedString(DFA29_acceptS);
    static readonly short[] DFA29_special = DFA.UnpackEncodedString(DFA29_specialS);
    static readonly short[][] DFA29_transition = DFA.UnpackEncodedStringArray(DFA29_transitionS);

    protected class DFA29 : DFA
    {
        public DFA29(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;

        }

        override public string Description
        {
            get { return "127:1: primary_expression_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );"; }
        }

    }


    protected internal int DFA29_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA29_2 = input.LA(1);

                   	 
                   	int index29_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred9_cs()) ) { s = 8; }

                   	else if ( (true) ) { s = 9; }

                   	 
                   	input.Seek(index29_2);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae29 =
            new NoViableAltException(dfa.Description, 29, _s, input);
        dfa.Error(nvae29);
        throw nvae29;
    }
    const string DFA38_eotS =
        "\x18\uffff";
    const string DFA38_eofS =
        "\x18\uffff";
    const string DFA38_minS =
        "\x01\x04\x01\x00\x16\uffff";
    const string DFA38_maxS =
        "\x01\u00ca\x01\x00\x16\uffff";
    const string DFA38_acceptS =
        "\x02\uffff\x01\x02\x14\uffff\x01\x01";
    const string DFA38_specialS =
        "\x01\uffff\x01\x00\x16\uffff}>";
    static readonly string[] DFA38_transitionS = {
            "\x0a\x02\x02\uffff\x01\x02\x30\uffff\x01\x02\x02\uffff\x01"+
            "\x02\x0e\uffff\x01\x02\x01\uffff\x01\x02\x02\uffff\x01\x01\x04"+
            "\uffff\x06\x02\x01\uffff\x01\x02\x01\uffff\x05\x02\x0a\uffff"+
            "\x01\x02\x0e\uffff\x02\x02\x01\uffff\x0e\x02\x01\uffff\x03\x02"+
            "\x01\uffff\x01\x02\x02\uffff\x0c\x02\x01\uffff\x01\x02\x06\uffff"+
            "\x02\x02\x10\uffff\x08\x02",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA38_eot = DFA.UnpackEncodedString(DFA38_eotS);
    static readonly short[] DFA38_eof = DFA.UnpackEncodedString(DFA38_eofS);
    static readonly char[] DFA38_min = DFA.UnpackEncodedStringToUnsignedChars(DFA38_minS);
    static readonly char[] DFA38_max = DFA.UnpackEncodedStringToUnsignedChars(DFA38_maxS);
    static readonly short[] DFA38_accept = DFA.UnpackEncodedString(DFA38_acceptS);
    static readonly short[] DFA38_special = DFA.UnpackEncodedString(DFA38_specialS);
    static readonly short[][] DFA38_transition = DFA.UnpackEncodedStringArray(DFA38_transitionS);

    protected class DFA38 : DFA
    {
        public DFA38(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = DFA38_eot;
            this.eof = DFA38_eof;
            this.min = DFA38_min;
            this.max = DFA38_max;
            this.accept = DFA38_accept;
            this.special = DFA38_special;
            this.transition = DFA38_transition;

        }

        override public string Description
        {
            get { return "167:3: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )"; }
        }

    }


    protected internal int DFA38_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA38_1 = input.LA(1);

                   	 
                   	int index38_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred10_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 2; }

                   	 
                   	input.Seek(index38_1);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae38 =
            new NoViableAltException(dfa.Description, 38, _s, input);
        dfa.Error(nvae38);
        throw nvae38;
    }
    const string DFA46_eotS =
        "\x0f\uffff";
    const string DFA46_eofS =
        "\x0f\uffff";
    const string DFA46_minS =
        "\x01\x04\x01\x00\x0d\uffff";
    const string DFA46_maxS =
        "\x01\u00ca\x01\x00\x0d\uffff";
    const string DFA46_acceptS =
        "\x02\uffff\x01\x02\x0b\uffff\x01\x01";
    const string DFA46_specialS =
        "\x01\uffff\x01\x00\x0d\uffff}>";
    static readonly string[] DFA46_transitionS = {
            "\x0a\x02\x33\uffff\x01\x02\x02\uffff\x01\x01\x0e\uffff\x01"+
            "\x02\x01\uffff\x01\x02\x02\uffff\x01\x02\x04\uffff\x06\x02\x21"+
            "\uffff\x02\x02\x01\uffff\x0e\x02\x01\uffff\x03\x02\x01\uffff"+
            "\x01\x02\x02\uffff\x0c\x02\x01\uffff\x01\x02\x06\uffff\x02\x02"+
            "\x10\uffff\x08\x02",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA46_eot = DFA.UnpackEncodedString(DFA46_eotS);
    static readonly short[] DFA46_eof = DFA.UnpackEncodedString(DFA46_eofS);
    static readonly char[] DFA46_min = DFA.UnpackEncodedStringToUnsignedChars(DFA46_minS);
    static readonly char[] DFA46_max = DFA.UnpackEncodedStringToUnsignedChars(DFA46_maxS);
    static readonly short[] DFA46_accept = DFA.UnpackEncodedString(DFA46_acceptS);
    static readonly short[] DFA46_special = DFA.UnpackEncodedString(DFA46_specialS);
    static readonly short[][] DFA46_transition = DFA.UnpackEncodedStringArray(DFA46_transitionS);

    protected class DFA46 : DFA
    {
        public DFA46(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;

        }

        override public string Description
        {
            get { return "194:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );"; }
        }

    }


    protected internal int DFA46_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA46_1 = input.LA(1);

                   	 
                   	int index46_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred11_cs()) ) { s = 14; }

                   	else if ( (true) ) { s = 2; }

                   	 
                   	input.Seek(index46_1);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae46 =
            new NoViableAltException(dfa.Description, 46, _s, input);
        dfa.Error(nvae46);
        throw nvae46;
    }
    const string DFA50_eotS =
        "\x05\uffff";
    const string DFA50_eofS =
        "\x01\x02\x03\uffff\x01\x02";
    const string DFA50_minS =
        "\x02\x04\x02\uffff\x01\x04";
    const string DFA50_maxS =
        "\x02\u00ca\x02\uffff\x01\u00ca";
    const string DFA50_acceptS =
        "\x02\uffff\x01\x01\x01\x02\x01\uffff";
    const string DFA50_specialS =
        "\x05\uffff}>";
    static readonly string[] DFA50_transitionS = {
            "\x01\x02\x09\uffff\x02\x03\x02\x02\x07\uffff\x02\x02\x23\uffff"+
            "\x02\x02\x01\uffff\x02\x02\x13\uffff\x01\x01\x01\x02\x01\x03"+
            "\x02\x02\x08\uffff\x06\x02\x02\uffff\x18\x02\x01\uffff\x02\x02"+
            "\x01\uffff\x0e\x02\x01\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff"+
            "\x03\x02\x0a\uffff\x01\x02\x06\uffff\x02\x02\x10\uffff\x01\x02"+
            "\x06\uffff\x01\x02",
            "\x0a\x03\x02\uffff\x01\x03\x30\uffff\x01\x03\x02\uffff\x01"+
            "\x03\x0e\uffff\x01\x03\x01\uffff\x01\x03\x01\uffff\x01\x04\x01"+
            "\x03\x01\x02\x03\uffff\x06\x03\x01\uffff\x01\x03\x01\uffff\x05"+
            "\x03\x0a\uffff\x01\x03\x0e\uffff\x02\x03\x01\uffff\x0e\x03\x01"+
            "\uffff\x03\x03\x01\uffff\x01\x03\x02\uffff\x0c\x03\x01\uffff"+
            "\x01\x03\x06\uffff\x02\x03\x10\uffff\x08\x03",
            "",
            "",
            "\x01\x02\x09\uffff\x02\x03\x02\x02\x07\uffff\x02\x02\x23\uffff"+
            "\x02\x02\x01\uffff\x02\x02\x13\uffff\x01\x01\x01\x02\x01\x03"+
            "\x02\x02\x08\uffff\x06\x02\x02\uffff\x18\x02\x01\uffff\x02\x02"+
            "\x01\uffff\x0e\x02\x01\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff"+
            "\x03\x02\x0a\uffff\x01\x02\x06\uffff\x02\x02\x10\uffff\x01\x02"+
            "\x06\uffff\x01\x02"
    };

    static readonly short[] DFA50_eot = DFA.UnpackEncodedString(DFA50_eotS);
    static readonly short[] DFA50_eof = DFA.UnpackEncodedString(DFA50_eofS);
    static readonly char[] DFA50_min = DFA.UnpackEncodedStringToUnsignedChars(DFA50_minS);
    static readonly char[] DFA50_max = DFA.UnpackEncodedStringToUnsignedChars(DFA50_maxS);
    static readonly short[] DFA50_accept = DFA.UnpackEncodedString(DFA50_acceptS);
    static readonly short[] DFA50_special = DFA.UnpackEncodedString(DFA50_specialS);
    static readonly short[][] DFA50_transition = DFA.UnpackEncodedStringArray(DFA50_transitionS);

    protected class DFA50 : DFA
    {
        public DFA50(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = DFA50_eot;
            this.eof = DFA50_eof;
            this.min = DFA50_min;
            this.max = DFA50_max;
            this.accept = DFA50_accept;
            this.special = DFA50_special;
            this.transition = DFA50_transition;

        }

        override public string Description
        {
            get { return "202:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )"; }
        }

    }

    const string DFA71_eotS =
        "\x0e\uffff";
    const string DFA71_eofS =
        "\x0e\uffff";
    const string DFA71_minS =
        "\x01\x04\x01\x0e\x01\uffff\x01\x1a\x03\x04\x01\uffff\x02\x0e\x02"+
        "\uffff\x02\x04";
    const string DFA71_maxS =
        "\x01\u00ca\x01\x65\x01\uffff\x01\x64\x03\u00ca\x01\uffff\x02\x65"+
        "\x02\uffff\x02\u00ca";
    const string DFA71_acceptS =
        "\x02\uffff\x01\x02\x04\uffff\x01\x03\x02\uffff\x02\x01\x02\uffff";
    const string DFA71_specialS =
        "\x06\uffff\x01\x02\x05\uffff\x01\x01\x01\x00}>";
    static readonly string[] DFA71_transitionS = {
            "\x01\x01\x3c\uffff\x01\x01\x10\uffff\x01\x03\x31\uffff\x02"+
            "\x01\x01\uffff\x0e\x01\x01\uffff\x03\x01\x01\uffff\x01\x01\x02"+
            "\uffff\x03\x01\x09\x02\x01\uffff\x01\x01\x06\uffff\x02\x01\x10"+
            "\uffff\x01\x01\x06\x02\x01\x01",
            "\x01\x05\x0b\uffff\x01\x02\x39\uffff\x01\x04\x01\uffff\x01"+
            "\x02\x0c\uffff\x01\x06\x02\x02",
            "",
            "\x01\x07\x49\uffff\x01\x02",
            "\x01\x08\x3c\uffff\x01\x08\x42\uffff\x02\x08\x01\uffff\x0e"+
            "\x08\x01\uffff\x03\x08\x01\uffff\x01\x08\x02\uffff\x03\x08\x0a"+
            "\uffff\x01\x08\x06\uffff\x02\x08\x10\uffff\x01\x08\x06\uffff"+
            "\x01\x08",
            "\x01\x09\x3c\uffff\x01\x09\x42\uffff\x02\x09\x01\uffff\x0e"+
            "\x09\x01\uffff\x03\x09\x01\uffff\x01\x09\x02\uffff\x03\x09\x0a"+
            "\uffff\x01\x09\x06\uffff\x02\x09\x10\uffff\x01\x09\x06\uffff"+
            "\x01\x09",
            "\x01\x02\x0c\uffff\x01\x0b\x2f\uffff\x01\x02\x10\uffff\x01"+
            "\x02\x06\uffff\x01\x0a\x2a\uffff\x02\x02\x01\uffff\x0e\x02\x01"+
            "\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff\x0c\x02\x01\uffff"+
            "\x01\x02\x06\uffff\x02\x02\x10\uffff\x08\x02",
            "",
            "\x01\x05\x0b\uffff\x01\x02\x3b\uffff\x01\x02\x0c\uffff\x01"+
            "\x0c\x02\x02",
            "\x01\x05\x0b\uffff\x01\x02\x3b\uffff\x01\x02\x0c\uffff\x01"+
            "\x0d\x02\x02",
            "",
            "",
            "\x01\x02\x0c\uffff\x01\x0b\x2f\uffff\x01\x02\x10\uffff\x01"+
            "\x02\x06\uffff\x01\x0a\x2a\uffff\x02\x02\x01\uffff\x0e\x02\x01"+
            "\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff\x0c\x02\x01\uffff"+
            "\x01\x02\x06\uffff\x02\x02\x10\uffff\x08\x02",
            "\x01\x02\x0c\uffff\x01\x0b\x2f\uffff\x01\x02\x10\uffff\x01"+
            "\x02\x06\uffff\x01\x0a\x2a\uffff\x02\x02\x01\uffff\x0e\x02\x01"+
            "\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff\x0c\x02\x01\uffff"+
            "\x01\x02\x06\uffff\x02\x02\x10\uffff\x08\x02"
    };

    static readonly short[] DFA71_eot = DFA.UnpackEncodedString(DFA71_eotS);
    static readonly short[] DFA71_eof = DFA.UnpackEncodedString(DFA71_eofS);
    static readonly char[] DFA71_min = DFA.UnpackEncodedStringToUnsignedChars(DFA71_minS);
    static readonly char[] DFA71_max = DFA.UnpackEncodedStringToUnsignedChars(DFA71_maxS);
    static readonly short[] DFA71_accept = DFA.UnpackEncodedString(DFA71_acceptS);
    static readonly short[] DFA71_special = DFA.UnpackEncodedString(DFA71_specialS);
    static readonly short[][] DFA71_transition = DFA.UnpackEncodedStringArray(DFA71_transitionS);

    protected class DFA71 : DFA
    {
        public DFA71(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;

        }

        override public string Description
        {
            get { return "275:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )"; }
        }

    }


    protected internal int DFA71_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA71_13 = input.LA(1);

                   	 
                   	int index71_13 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (LA71_13 == 89) && (synpred13_cs()) ) { s = 10; }

                   	else if ( (LA71_13 == GT) && (synpred13_cs()) ) { s = 11; }

                   	else if ( (LA71_13 == IDENTIFIER || LA71_13 == 65 || LA71_13 == 82 || (LA71_13 >= 132 && LA71_13 <= 133) || (LA71_13 >= 135 && LA71_13 <= 148) || (LA71_13 >= 150 && LA71_13 <= 152) || LA71_13 == 154 || (LA71_13 >= 157 && LA71_13 <= 168) || LA71_13 == 170 || (LA71_13 >= 177 && LA71_13 <= 178) || (LA71_13 >= 195 && LA71_13 <= 202)) ) { s = 2; }

                   	 
                   	input.Seek(index71_13);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA71_12 = input.LA(1);

                   	 
                   	int index71_12 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (LA71_12 == 89) && (synpred13_cs()) ) { s = 10; }

                   	else if ( (LA71_12 == GT) && (synpred13_cs()) ) { s = 11; }

                   	else if ( (LA71_12 == IDENTIFIER || LA71_12 == 65 || LA71_12 == 82 || (LA71_12 >= 132 && LA71_12 <= 133) || (LA71_12 >= 135 && LA71_12 <= 148) || (LA71_12 >= 150 && LA71_12 <= 152) || LA71_12 == 154 || (LA71_12 >= 157 && LA71_12 <= 168) || LA71_12 == 170 || (LA71_12 >= 177 && LA71_12 <= 178) || (LA71_12 >= 195 && LA71_12 <= 202)) ) { s = 2; }

                   	 
                   	input.Seek(index71_12);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA71_6 = input.LA(1);

                   	 
                   	int index71_6 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (LA71_6 == 89) && (synpred13_cs()) ) { s = 10; }

                   	else if ( (LA71_6 == GT) && (synpred13_cs()) ) { s = 11; }

                   	else if ( (LA71_6 == IDENTIFIER || LA71_6 == 65 || LA71_6 == 82 || (LA71_6 >= 132 && LA71_6 <= 133) || (LA71_6 >= 135 && LA71_6 <= 148) || (LA71_6 >= 150 && LA71_6 <= 152) || LA71_6 == 154 || (LA71_6 >= 157 && LA71_6 <= 168) || LA71_6 == 170 || (LA71_6 >= 177 && LA71_6 <= 178) || (LA71_6 >= 195 && LA71_6 <= 202)) ) { s = 2; }

                   	 
                   	input.Seek(index71_6);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae71 =
            new NoViableAltException(dfa.Description, 71, _s, input);
        dfa.Error(nvae71);
        throw nvae71;
    }
    const string DFA72_eotS =
        "\x07\uffff";
    const string DFA72_eofS =
        "\x04\uffff\x01\x06\x02\uffff";
    const string DFA72_minS =
        "\x01\x0e\x01\x11\x01\uffff\x01\x11\x01\x0e\x02\uffff";
    const string DFA72_maxS =
        "\x01\x63\x01\x59\x01\uffff\x01\x59\x01\x1a\x02\uffff";
    const string DFA72_acceptS =
        "\x02\uffff\x01\x02\x02\uffff\x01\x01\x01\x03";
    const string DFA72_specialS =
        "\x04\uffff\x01\x00\x02\uffff}>";
    static readonly string[] DFA72_transitionS = {
            "\x01\x02\x54\uffff\x01\x01",
            "\x01\x04\x47\uffff\x01\x03",
            "",
            "\x01\x04\x47\uffff\x01\x03",
            "\x01\x05\x0b\uffff\x01\x06",
            "",
            ""
    };

    static readonly short[] DFA72_eot = DFA.UnpackEncodedString(DFA72_eotS);
    static readonly short[] DFA72_eof = DFA.UnpackEncodedString(DFA72_eofS);
    static readonly char[] DFA72_min = DFA.UnpackEncodedStringToUnsignedChars(DFA72_minS);
    static readonly char[] DFA72_max = DFA.UnpackEncodedStringToUnsignedChars(DFA72_maxS);
    static readonly short[] DFA72_accept = DFA.UnpackEncodedString(DFA72_acceptS);
    static readonly short[] DFA72_special = DFA.UnpackEncodedString(DFA72_specialS);
    static readonly short[][] DFA72_transition = DFA.UnpackEncodedStringArray(DFA72_transitionS);

    protected class DFA72 : DFA
    {
        public DFA72(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;

        }

        override public string Description
        {
            get { return "()* loopback of 285:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*"; }
        }

    }


    protected internal int DFA72_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA72_4 = input.LA(1);

                   	 
                   	int index72_4 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (LA72_4 == DOT) && (synpred14_cs()) ) { s = 5; }

                   	else if ( (LA72_4 == EOF || LA72_4 == RPAREN) ) { s = 6; }

                   	 
                   	input.Seek(index72_4);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae72 =
            new NoViableAltException(dfa.Description, 72, _s, input);
        dfa.Error(nvae72);
        throw nvae72;
    }
    const string DFA101_eotS =
        "\x19\uffff";
    const string DFA101_eofS =
        "\x19\uffff";
    const string DFA101_minS =
        "\x01\x04\x16\x00\x02\uffff";
    const string DFA101_maxS =
        "\x01\u00ca\x16\x00\x02\uffff";
    const string DFA101_acceptS =
        "\x17\uffff\x01\x01\x01\x02";
    const string DFA101_specialS =
        "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01"+
        "\x06\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d\x01"+
        "\x0e\x01\x0f\x01\x10\x01\x11\x01\x12\x01\x13\x01\x14\x01\x15\x02"+
        "\uffff}>";
    static readonly string[] DFA101_transitionS = {
            "\x01\x16\x09\x08\x02\uffff\x01\x0f\x30\uffff\x01\x16\x02\uffff"+
            "\x01\x02\x0e\uffff\x01\x03\x01\uffff\x01\x06\x02\uffff\x01\x01"+
            "\x04\uffff\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d\x01\x07\x01"+
            "\uffff\x01\x14\x01\uffff\x01\x12\x01\x13\x01\x0e\x01\x10\x01"+
            "\x11\x0a\uffff\x01\x15\x0e\uffff\x01\x16\x01\x05\x01\uffff\x0e"+
            "\x16\x01\uffff\x03\x16\x01\uffff\x01\x16\x02\uffff\x03\x16\x09"+
            "\x04\x01\uffff\x01\x16\x06\uffff\x02\x16\x10\uffff\x01\x16\x06"+
            "\x04\x01\x16",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "",
            ""
    };

    static readonly short[] DFA101_eot = DFA.UnpackEncodedString(DFA101_eotS);
    static readonly short[] DFA101_eof = DFA.UnpackEncodedString(DFA101_eofS);
    static readonly char[] DFA101_min = DFA.UnpackEncodedStringToUnsignedChars(DFA101_minS);
    static readonly char[] DFA101_max = DFA.UnpackEncodedStringToUnsignedChars(DFA101_maxS);
    static readonly short[] DFA101_accept = DFA.UnpackEncodedString(DFA101_acceptS);
    static readonly short[] DFA101_special = DFA.UnpackEncodedString(DFA101_specialS);
    static readonly short[][] DFA101_transition = DFA.UnpackEncodedStringArray(DFA101_transitionS);

    protected class DFA101 : DFA
    {
        public DFA101(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = DFA101_eot;
            this.eof = DFA101_eof;
            this.min = DFA101_min;
            this.max = DFA101_max;
            this.accept = DFA101_accept;
            this.special = DFA101_special;
            this.transition = DFA101_transition;

        }

        override public string Description
        {
            get { return "369:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );"; }
        }

    }


    protected internal int DFA101_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA101_1 = input.LA(1);

                   	 
                   	int index101_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA101_2 = input.LA(1);

                   	 
                   	int index101_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA101_3 = input.LA(1);

                   	 
                   	int index101_3 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_3);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 3 : 
                   	int LA101_4 = input.LA(1);

                   	 
                   	int index101_4 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_4);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 4 : 
                   	int LA101_5 = input.LA(1);

                   	 
                   	int index101_5 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_5);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 5 : 
                   	int LA101_6 = input.LA(1);

                   	 
                   	int index101_6 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_6);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 6 : 
                   	int LA101_7 = input.LA(1);

                   	 
                   	int index101_7 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_7);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 7 : 
                   	int LA101_8 = input.LA(1);

                   	 
                   	int index101_8 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_8);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 8 : 
                   	int LA101_9 = input.LA(1);

                   	 
                   	int index101_9 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_9);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 9 : 
                   	int LA101_10 = input.LA(1);

                   	 
                   	int index101_10 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_10);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 10 : 
                   	int LA101_11 = input.LA(1);

                   	 
                   	int index101_11 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_11);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 11 : 
                   	int LA101_12 = input.LA(1);

                   	 
                   	int index101_12 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_12);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 12 : 
                   	int LA101_13 = input.LA(1);

                   	 
                   	int index101_13 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_13);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 13 : 
                   	int LA101_14 = input.LA(1);

                   	 
                   	int index101_14 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_14);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 14 : 
                   	int LA101_15 = input.LA(1);

                   	 
                   	int index101_15 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_15);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 15 : 
                   	int LA101_16 = input.LA(1);

                   	 
                   	int index101_16 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_16);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 16 : 
                   	int LA101_17 = input.LA(1);

                   	 
                   	int index101_17 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_17);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 17 : 
                   	int LA101_18 = input.LA(1);

                   	 
                   	int index101_18 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_18);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 18 : 
                   	int LA101_19 = input.LA(1);

                   	 
                   	int index101_19 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_19);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 19 : 
                   	int LA101_20 = input.LA(1);

                   	 
                   	int index101_20 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_20);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 20 : 
                   	int LA101_21 = input.LA(1);

                   	 
                   	int index101_21 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_21);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 21 : 
                   	int LA101_22 = input.LA(1);

                   	 
                   	int index101_22 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred19_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 24; }

                   	 
                   	input.Seek(index101_22);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae101 =
            new NoViableAltException(dfa.Description, 101, _s, input);
        dfa.Error(nvae101);
        throw nvae101;
    }
    const string DFA105_eotS =
        "\x17\uffff";
    const string DFA105_eofS =
        "\x17\uffff";
    const string DFA105_minS =
        "\x01\x04\x01\x00\x15\uffff";
    const string DFA105_maxS =
        "\x01\u00ca\x01\x00\x15\uffff";
    const string DFA105_acceptS =
        "\x02\uffff\x01\x02\x0b\uffff\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
        "\x07\x01\x08\x01\x09\x01\x0a\x01\x01";
    const string DFA105_specialS =
        "\x01\uffff\x01\x00\x15\uffff}>";
    static readonly string[] DFA105_transitionS = {
            "\x0a\x02\x02\uffff\x01\x0f\x30\uffff\x01\x02\x02\uffff\x01"+
            "\x02\x0e\uffff\x01\x02\x01\uffff\x01\x02\x02\uffff\x01\x01\x04"+
            "\uffff\x06\x02\x01\uffff\x01\x14\x01\uffff\x01\x12\x01\x13\x01"+
            "\x0e\x01\x10\x01\x11\x0a\uffff\x01\x15\x0e\uffff\x02\x02\x01"+
            "\uffff\x0e\x02\x01\uffff\x03\x02\x01\uffff\x01\x02\x02\uffff"+
            "\x0c\x02\x01\uffff\x01\x02\x06\uffff\x02\x02\x10\uffff\x08\x02",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA105_eot = DFA.UnpackEncodedString(DFA105_eotS);
    static readonly short[] DFA105_eof = DFA.UnpackEncodedString(DFA105_eofS);
    static readonly char[] DFA105_min = DFA.UnpackEncodedStringToUnsignedChars(DFA105_minS);
    static readonly char[] DFA105_max = DFA.UnpackEncodedStringToUnsignedChars(DFA105_maxS);
    static readonly short[] DFA105_accept = DFA.UnpackEncodedString(DFA105_acceptS);
    static readonly short[] DFA105_special = DFA.UnpackEncodedString(DFA105_specialS);
    static readonly short[][] DFA105_transition = DFA.UnpackEncodedStringArray(DFA105_transitionS);

    protected class DFA105 : DFA
    {
        public DFA105(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = DFA105_eot;
            this.eof = DFA105_eof;
            this.min = DFA105_min;
            this.max = DFA105_max;
            this.accept = DFA105_accept;
            this.special = DFA105_special;
            this.transition = DFA105_transition;

        }

        override public string Description
        {
            get { return "377:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );"; }
        }

    }


    protected internal int DFA105_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA105_1 = input.LA(1);

                   	 
                   	int index105_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred20_cs()) ) { s = 22; }

                   	else if ( (true) ) { s = 2; }

                   	 
                   	input.Seek(index105_1);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae105 =
            new NoViableAltException(dfa.Description, 105, _s, input);
        dfa.Error(nvae105);
        throw nvae105;
    }
    const string DFA106_eotS =
        "\x0c\uffff";
    const string DFA106_eofS =
        "\x0c\uffff";
    const string DFA106_minS =
        "\x01\x11\x0b\uffff";
    const string DFA106_maxS =
        "\x01\x73\x0b\uffff";
    const string DFA106_acceptS =
        "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
        "\x07\x01\x08\x01\x09\x01\x0a\x01\x0b";
    const string DFA106_specialS =
        "\x0c\uffff}>";
    static readonly string[] DFA106_transitionS = {
            "\x01\x0b\x30\uffff\x01\x01\x28\uffff\x01\x02\x01\x03\x01\x04"+
            "\x01\x05\x01\x06\x01\x07\x01\x08\x01\x09\x01\x0a",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA106_eot = DFA.UnpackEncodedString(DFA106_eotS);
    static readonly short[] DFA106_eof = DFA.UnpackEncodedString(DFA106_eofS);
    static readonly char[] DFA106_min = DFA.UnpackEncodedStringToUnsignedChars(DFA106_minS);
    static readonly char[] DFA106_max = DFA.UnpackEncodedStringToUnsignedChars(DFA106_maxS);
    static readonly short[] DFA106_accept = DFA.UnpackEncodedString(DFA106_acceptS);
    static readonly short[] DFA106_special = DFA.UnpackEncodedString(DFA106_specialS);
    static readonly short[][] DFA106_transition = DFA.UnpackEncodedStringArray(DFA106_transitionS);

    protected class DFA106 : DFA
    {
        public DFA106(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = DFA106_eot;
            this.eof = DFA106_eof;
            this.min = DFA106_min;
            this.max = DFA106_max;
            this.accept = DFA106_accept;
            this.special = DFA106_special;
            this.transition = DFA106_transition;

        }

        override public string Description
        {
            get { return "392:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );"; }
        }

    }

    const string DFA107_eotS =
        "\x19\uffff";
    const string DFA107_eofS =
        "\x19\uffff";
    const string DFA107_minS =
        "\x01\x04\x03\x00\x15\uffff";
    const string DFA107_maxS =
        "\x01\u00ca\x03\x00\x15\uffff";
    const string DFA107_acceptS =
        "\x04\uffff\x01\x03\x12\uffff\x01\x01\x01\x02";
    const string DFA107_specialS =
        "\x01\uffff\x01\x00\x01\x01\x01\x02\x15\uffff}>";
    static readonly string[] DFA107_transitionS = {
            "\x01\x03\x09\x04\x02\uffff\x01\x04\x30\uffff\x01\x03\x02\uffff"+
            "\x01\x04\x0e\uffff\x01\x04\x01\uffff\x01\x04\x02\uffff\x01\x01"+
            "\x04\uffff\x06\x04\x01\uffff\x01\x04\x01\uffff\x05\x04\x0a\uffff"+
            "\x01\x04\x0e\uffff\x01\x03\x01\x02\x01\uffff\x0e\x03\x01\uffff"+
            "\x03\x03\x01\uffff\x01\x03\x02\uffff\x03\x03\x09\x04\x01\uffff"+
            "\x01\x03\x06\uffff\x02\x03\x10\uffff\x01\x03\x06\x04\x01\x03",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA107_eot = DFA.UnpackEncodedString(DFA107_eotS);
    static readonly short[] DFA107_eof = DFA.UnpackEncodedString(DFA107_eofS);
    static readonly char[] DFA107_min = DFA.UnpackEncodedStringToUnsignedChars(DFA107_minS);
    static readonly char[] DFA107_max = DFA.UnpackEncodedStringToUnsignedChars(DFA107_maxS);
    static readonly short[] DFA107_accept = DFA.UnpackEncodedString(DFA107_acceptS);
    static readonly short[] DFA107_special = DFA.UnpackEncodedString(DFA107_specialS);
    static readonly short[][] DFA107_transition = DFA.UnpackEncodedStringArray(DFA107_transitionS);

    protected class DFA107 : DFA
    {
        public DFA107(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = DFA107_eot;
            this.eof = DFA107_eof;
            this.min = DFA107_min;
            this.max = DFA107_max;
            this.accept = DFA107_accept;
            this.special = DFA107_special;
            this.transition = DFA107_transition;

        }

        override public string Description
        {
            get { return "403:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );"; }
        }

    }


    protected internal int DFA107_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA107_1 = input.LA(1);

                   	 
                   	int index107_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred21_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 4; }

                   	 
                   	input.Seek(index107_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA107_2 = input.LA(1);

                   	 
                   	int index107_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred21_cs()) ) { s = 23; }

                   	else if ( (synpred22_cs()) ) { s = 24; }

                   	else if ( (true) ) { s = 4; }

                   	 
                   	input.Seek(index107_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA107_3 = input.LA(1);

                   	 
                   	int index107_3 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred21_cs()) ) { s = 23; }

                   	else if ( (true) ) { s = 4; }

                   	 
                   	input.Seek(index107_3);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae107 =
            new NoViableAltException(dfa.Description, 107, _s, input);
        dfa.Error(nvae107);
        throw nvae107;
    }
    const string DFA230_eotS =
        "\x0f\uffff";
    const string DFA230_eofS =
        "\x0f\uffff";
    const string DFA230_minS =
        "\x01\x04\x05\uffff\x01\x04\x01\uffff\x01\x04\x06\uffff";
    const string DFA230_maxS =
        "\x01\u00ca\x05\uffff\x01\u00ca\x01\uffff\x01\u00ca\x06\uffff";
    const string DFA230_acceptS =
        "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\uffff\x01"+
        "\x07\x01\uffff\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x06\x01\x0c";
    const string DFA230_specialS =
        "\x0f\uffff}>";
    static readonly string[] DFA230_transitionS = {
            "\x01\x08\x0e\uffff\x01\x0a\x2d\uffff\x01\x08\x01\uffff\x01"+
            "\x03\x0d\uffff\x01\x01\x01\x06\x0e\uffff\x01\x0b\x22\uffff\x02"+
            "\x08\x01\uffff\x0e\x08\x01\x02\x03\x08\x01\uffff\x01\x08\x01"+
            "\x05\x01\uffff\x03\x08\x09\x07\x01\x09\x01\x08\x01\uffff\x01"+
            "\x04\x01\uffff\x02\x0c\x01\uffff\x02\x08\x10\uffff\x01\x08\x06"+
            "\x07\x01\x08",
            "",
            "",
            "",
            "",
            "",
            "\x0a\x0d\x33\uffff\x01\x0d\x22\uffff\x01\x07\x1f\uffff\x02"+
            "\x0d\x01\uffff\x0e\x0d\x01\uffff\x03\x0d\x01\uffff\x01\x0d\x02"+
            "\uffff\x0c\x0d\x01\uffff\x01\x0d\x06\uffff\x02\x0d\x10\uffff"+
            "\x08\x0d",
            "",
            "\x0b\x07\x32\uffff\x01\x07\x11\uffff\x02\x07\x01\uffff\x01"+
            "\x07\x01\uffff\x01\x0e\x0a\uffff\x03\x07\x1e\uffff\x02\x07\x01"+
            "\uffff\x0e\x07\x01\uffff\x03\x07\x01\uffff\x01\x07\x02\uffff"+
            "\x0c\x07\x01\uffff\x01\x07\x02\uffff\x01\x07\x03\uffff\x02\x07"+
            "\x10\uffff\x08\x07",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA230_eot = DFA.UnpackEncodedString(DFA230_eotS);
    static readonly short[] DFA230_eof = DFA.UnpackEncodedString(DFA230_eofS);
    static readonly char[] DFA230_min = DFA.UnpackEncodedStringToUnsignedChars(DFA230_minS);
    static readonly char[] DFA230_max = DFA.UnpackEncodedStringToUnsignedChars(DFA230_maxS);
    static readonly short[] DFA230_accept = DFA.UnpackEncodedString(DFA230_acceptS);
    static readonly short[] DFA230_special = DFA.UnpackEncodedString(DFA230_specialS);
    static readonly short[][] DFA230_transition = DFA.UnpackEncodedStringArray(DFA230_transitionS);

    protected class DFA230 : DFA
    {
        public DFA230(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 230;
            this.eot = DFA230_eot;
            this.eof = DFA230_eof;
            this.min = DFA230_min;
            this.max = DFA230_max;
            this.accept = DFA230_accept;
            this.special = DFA230_special;
            this.transition = DFA230_transition;

        }

        override public string Description
        {
            get { return "767:2: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )"; }
        }

    }

    const string DFA229_eotS =
        "\x0a\uffff";
    const string DFA229_eofS =
        "\x0a\uffff";
    const string DFA229_minS =
        "\x01\x04\x03\x00\x06\uffff";
    const string DFA229_maxS =
        "\x01\u00ca\x03\x00\x06\uffff";
    const string DFA229_acceptS =
        "\x04\uffff\x01\x04\x01\x06\x01\x01\x01\x02\x01\x03\x01\x05";
    const string DFA229_specialS =
        "\x01\uffff\x01\x00\x01\x01\x01\x02\x06\uffff}>";
    static readonly string[] DFA229_transitionS = {
            "\x01\x02\x09\x03\x33\uffff\x01\x02\x11\uffff\x01\x04\x30\uffff"+
            "\x02\x02\x01\uffff\x0e\x02\x01\uffff\x03\x02\x01\uffff\x01\x02"+
            "\x02\uffff\x03\x02\x09\x01\x01\uffff\x01\x02\x02\uffff\x01\x05"+
            "\x03\uffff\x02\x02\x10\uffff\x01\x02\x06\x01\x01\x02",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA229_eot = DFA.UnpackEncodedString(DFA229_eotS);
    static readonly short[] DFA229_eof = DFA.UnpackEncodedString(DFA229_eofS);
    static readonly char[] DFA229_min = DFA.UnpackEncodedStringToUnsignedChars(DFA229_minS);
    static readonly char[] DFA229_max = DFA.UnpackEncodedStringToUnsignedChars(DFA229_maxS);
    static readonly short[] DFA229_accept = DFA.UnpackEncodedString(DFA229_acceptS);
    static readonly short[] DFA229_special = DFA.UnpackEncodedString(DFA229_specialS);
    static readonly short[][] DFA229_transition = DFA.UnpackEncodedStringArray(DFA229_transitionS);

    protected class DFA229 : DFA
    {
        public DFA229(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 229;
            this.eot = DFA229_eot;
            this.eof = DFA229_eof;
            this.min = DFA229_min;
            this.max = DFA229_max;
            this.accept = DFA229_accept;
            this.special = DFA229_special;
            this.transition = DFA229_transition;

        }

        override public string Description
        {
            get { return "777:9: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )"; }
        }

    }


    protected internal int DFA229_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA229_1 = input.LA(1);

                   	 
                   	int index229_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred28_cs()) ) { s = 6; }

                   	else if ( (synpred29_cs()) ) { s = 7; }

                   	 
                   	input.Seek(index229_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA229_2 = input.LA(1);

                   	 
                   	int index229_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred28_cs()) ) { s = 6; }

                   	else if ( (synpred29_cs()) ) { s = 7; }

                   	else if ( (synpred30_cs()) ) { s = 8; }

                   	else if ( (true) ) { s = 9; }

                   	 
                   	input.Seek(index229_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA229_3 = input.LA(1);

                   	 
                   	int index229_3 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred28_cs()) ) { s = 6; }

                   	else if ( (synpred29_cs()) ) { s = 7; }

                   	 
                   	input.Seek(index229_3);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae229 =
            new NoViableAltException(dfa.Description, 229, _s, input);
        dfa.Error(nvae229);
        throw nvae229;
    }
    const string DFA233_eotS =
        "\x10\uffff";
    const string DFA233_eofS =
        "\x10\uffff";
    const string DFA233_minS =
        "\x01\x11\x07\uffff\x01\x11\x07\uffff";
    const string DFA233_maxS =
        "\x01\x7f\x07\uffff\x01\x59\x07\uffff";
    const string DFA233_acceptS =
        "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
        "\x07\x01\uffff\x01\x09\x01\x0a\x01\x0c\x01\x0d\x01\x0e\x01\x08\x01"+
        "\x0b";
    const string DFA233_specialS =
        "\x10\uffff}>";
    static readonly string[] DFA233_transitionS = {
            "\x01\x08\x51\uffff\x01\x0b\x01\x01\x0f\uffff\x01\x0c\x01\x04"+
            "\x01\x02\x01\x03\x01\x07\x01\x0d\x02\uffff\x01\x09\x01\x0a\x01"+
            "\x06\x01\x05",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\x01\x0e\x47\uffff\x01\x0f",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA233_eot = DFA.UnpackEncodedString(DFA233_eotS);
    static readonly short[] DFA233_eof = DFA.UnpackEncodedString(DFA233_eofS);
    static readonly char[] DFA233_min = DFA.UnpackEncodedStringToUnsignedChars(DFA233_minS);
    static readonly char[] DFA233_max = DFA.UnpackEncodedStringToUnsignedChars(DFA233_maxS);
    static readonly short[] DFA233_accept = DFA.UnpackEncodedString(DFA233_acceptS);
    static readonly short[] DFA233_special = DFA.UnpackEncodedString(DFA233_specialS);
    static readonly short[][] DFA233_transition = DFA.UnpackEncodedStringArray(DFA233_transitionS);

    protected class DFA233 : DFA
    {
        public DFA233(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 233;
            this.eot = DFA233_eot;
            this.eof = DFA233_eof;
            this.min = DFA233_min;
            this.max = DFA233_max;
            this.accept = DFA233_accept;
            this.special = DFA233_special;
            this.transition = DFA233_transition;

        }

        override public string Description
        {
            get { return "817:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );"; }
        }

    }

    const string DFA241_eotS =
        "\x2f\uffff";
    const string DFA241_eofS =
        "\x2f\uffff";
    const string DFA241_minS =
        "\x01\x04\x04\x00\x14\uffff\x01\x00\x13\uffff\x01\x00\x01\uffff";
    const string DFA241_maxS =
        "\x01\u00ca\x04\x00\x14\uffff\x01\x00\x13\uffff\x01\x00\x01\uffff";
    const string DFA241_acceptS =
        "\x05\uffff\x02\x01\x01\x03\x26\uffff\x01\x02";
    const string DFA241_specialS =
        "\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x14\uffff\x01\x05\x13"+
        "\uffff\x01\x06\x01\uffff}>";
    static readonly string[] DFA241_transitionS = {
            "\x01\x2d\x09\x07\x02\uffff\x01\x07\x01\uffff\x01\x07\x01\uffff"+
            "\x01\x07\x04\uffff\x01\x07\x24\uffff\x01\x07\x02\uffff\x01\x2d"+
            "\x02\uffff\x01\x07\x04\uffff\x01\x07\x07\uffff\x01\x06\x01\x05"+
            "\x01\x07\x01\uffff\x01\x07\x02\uffff\x01\x07\x04\uffff\x06\x07"+
            "\x01\uffff\x01\x07\x01\uffff\x05\x07\x0a\uffff\x01\x07\x0e\uffff"+
            "\x01\x2d\x01\x19\x01\uffff\x0e\x2d\x01\uffff\x03\x2d\x01\x07"+
            "\x01\x2d\x02\uffff\x03\x2d\x09\x03\x01\uffff\x01\x2d\x05\uffff"+
            "\x01\x07\x01\x01\x01\x02\x02\uffff\x01\x07\x01\uffff\x09\x07"+
            "\x02\uffff\x01\x07\x01\x04\x06\x03\x01\x2d",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\x01\uffff",
            ""
    };

    static readonly short[] DFA241_eot = DFA.UnpackEncodedString(DFA241_eotS);
    static readonly short[] DFA241_eof = DFA.UnpackEncodedString(DFA241_eofS);
    static readonly char[] DFA241_min = DFA.UnpackEncodedStringToUnsignedChars(DFA241_minS);
    static readonly char[] DFA241_max = DFA.UnpackEncodedStringToUnsignedChars(DFA241_maxS);
    static readonly short[] DFA241_accept = DFA.UnpackEncodedString(DFA241_acceptS);
    static readonly short[] DFA241_special = DFA.UnpackEncodedString(DFA241_specialS);
    static readonly short[][] DFA241_transition = DFA.UnpackEncodedStringArray(DFA241_transitionS);

    protected class DFA241 : DFA
    {
        public DFA241(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = DFA241_eot;
            this.eof = DFA241_eof;
            this.min = DFA241_min;
            this.max = DFA241_max;
            this.accept = DFA241_accept;
            this.special = DFA241_special;
            this.transition = DFA241_transition;

        }

        override public string Description
        {
            get { return "867:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );"; }
        }

    }


    protected internal int DFA241_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA241_0 = input.LA(1);

                   	 
                   	int index241_0 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (LA241_0 == 177) ) { s = 1; }

                   	else if ( (LA241_0 == 178) ) { s = 2; }

                   	else if ( ((LA241_0 >= 160 && LA241_0 <= 168) || (LA241_0 >= 196 && LA241_0 <= 201)) ) { s = 3; }

                   	else if ( (LA241_0 == 195) ) { s = 4; }

                   	else if ( (LA241_0 == 82) && (synpred33_cs()) ) { s = 5; }

                   	else if ( (LA241_0 == 81) && (synpred33_cs()) ) { s = 6; }

                   	else if ( ((LA241_0 >= Real_literal && LA241_0 <= NULL) || LA241_0 == MINUS || LA241_0 == USING || LA241_0 == IF || LA241_0 == SEMI || LA241_0 == 62 || LA241_0 == 68 || LA241_0 == 73 || LA241_0 == 83 || LA241_0 == 85 || LA241_0 == 88 || (LA241_0 >= 93 && LA241_0 <= 98) || LA241_0 == 100 || (LA241_0 >= 102 && LA241_0 <= 106) || LA241_0 == 117 || LA241_0 == 153 || LA241_0 == 176 || LA241_0 == 181 || (LA241_0 >= 183 && LA241_0 <= 191) || LA241_0 == 194) ) { s = 7; }

                   	else if ( (LA241_0 == 133) ) { s = 25; }

                   	else if ( (LA241_0 == IDENTIFIER || LA241_0 == 65 || LA241_0 == 132 || (LA241_0 >= 135 && LA241_0 <= 148) || (LA241_0 >= 150 && LA241_0 <= 152) || LA241_0 == 154 || (LA241_0 >= 157 && LA241_0 <= 159) || LA241_0 == 170 || LA241_0 == 202) ) { s = 45; }

                   	 
                   	input.Seek(index241_0);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA241_1 = input.LA(1);

                   	 
                   	int index241_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred33_cs()) ) { s = 6; }

                   	else if ( (synpred34_cs()) ) { s = 46; }

                   	else if ( (true) ) { s = 7; }

                   	 
                   	input.Seek(index241_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA241_2 = input.LA(1);

                   	 
                   	int index241_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred33_cs()) ) { s = 6; }

                   	else if ( (synpred34_cs()) ) { s = 46; }

                   	else if ( (true) ) { s = 7; }

                   	 
                   	input.Seek(index241_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 3 : 
                   	int LA241_3 = input.LA(1);

                   	 
                   	int index241_3 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred33_cs()) ) { s = 6; }

                   	else if ( (true) ) { s = 7; }

                   	 
                   	input.Seek(index241_3);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 4 : 
                   	int LA241_4 = input.LA(1);

                   	 
                   	int index241_4 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred33_cs()) ) { s = 6; }

                   	else if ( (synpred34_cs()) ) { s = 46; }

                   	else if ( (true) ) { s = 7; }

                   	 
                   	input.Seek(index241_4);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 5 : 
                   	int LA241_25 = input.LA(1);

                   	 
                   	int index241_25 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred33_cs()) ) { s = 6; }

                   	else if ( (synpred34_cs()) ) { s = 46; }

                   	else if ( (true) ) { s = 7; }

                   	 
                   	input.Seek(index241_25);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 6 : 
                   	int LA241_45 = input.LA(1);

                   	 
                   	int index241_45 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred33_cs()) ) { s = 6; }

                   	else if ( (synpred34_cs()) ) { s = 46; }

                   	else if ( (true) ) { s = 7; }

                   	 
                   	input.Seek(index241_45);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae241 =
            new NoViableAltException(dfa.Description, 241, _s, input);
        dfa.Error(nvae241);
        throw nvae241;
    }
    const string DFA242_eotS =
        "\x11\uffff";
    const string DFA242_eofS =
        "\x11\uffff";
    const string DFA242_minS =
        "\x01\x04\x05\uffff\x02\x19\x02\uffff\x01\x0e\x06\uffff";
    const string DFA242_maxS =
        "\x01\u00ca\x05\uffff\x02\x58\x02\uffff\x01\u00bb\x06\uffff";
    const string DFA242_acceptS =
        "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x02\uffff\x01"+
        "\x08\x01\x09\x01\uffff\x01\x0b\x01\x0c\x01\x0d\x01\x06\x01\x07\x01"+
        "\x0a";
    const string DFA242_specialS =
        "\x11\uffff}>";
    static readonly string[] DFA242_transitionS = {
            "\x0a\x0d\x02\uffff\x01\x0d\x01\uffff\x01\x09\x01\uffff\x01"+
            "\x02\x04\uffff\x01\x01\x24\uffff\x01\x01\x02\uffff\x01\x0d\x02"+
            "\uffff\x01\x0d\x04\uffff\x01\x0b\x09\uffff\x01\x0d\x01\uffff"+
            "\x01\x0d\x02\uffff\x01\x0d\x04\uffff\x01\x0d\x01\x06\x01\x07"+
            "\x03\x0d\x01\uffff\x01\x0d\x01\uffff\x05\x0d\x0a\uffff\x01\x0d"+
            "\x0e\uffff\x02\x0d\x01\uffff\x0e\x0d\x01\uffff\x03\x0d\x01\x04"+
            "\x01\x0d\x02\uffff\x0c\x0d\x01\uffff\x01\x0d\x05\uffff\x01\x0c"+
            "\x02\x0d\x02\uffff\x01\x02\x01\uffff\x04\x03\x04\x04\x01\x05"+
            "\x02\uffff\x01\x08\x01\x0a\x07\x0d",
            "",
            "",
            "",
            "",
            "",
            "\x01\x0e\x24\uffff\x01\x0e\x19\uffff\x01\x0d",
            "\x01\x0f\x24\uffff\x01\x0f\x19\uffff\x01\x0d",
            "",
            "",
            "\x04\x0d\x07\uffff\x01\x0d\x28\uffff\x01\x0d\x11\uffff\x01"+
            "\x0d\x01\uffff\x01\x0d\x01\uffff\x02\x0d\x09\uffff\x06\x0d\x02"+
            "\uffff\x19\x0d\x15\uffff\x01\x10\x21\uffff\x01\x10",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static readonly short[] DFA242_eot = DFA.UnpackEncodedString(DFA242_eotS);
    static readonly short[] DFA242_eof = DFA.UnpackEncodedString(DFA242_eofS);
    static readonly char[] DFA242_min = DFA.UnpackEncodedStringToUnsignedChars(DFA242_minS);
    static readonly char[] DFA242_max = DFA.UnpackEncodedStringToUnsignedChars(DFA242_maxS);
    static readonly short[] DFA242_accept = DFA.UnpackEncodedString(DFA242_acceptS);
    static readonly short[] DFA242_special = DFA.UnpackEncodedString(DFA242_specialS);
    static readonly short[][] DFA242_transition = DFA.UnpackEncodedStringArray(DFA242_transitionS);

    protected class DFA242 : DFA
    {
        public DFA242(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 242;
            this.eot = DFA242_eot;
            this.eof = DFA242_eof;
            this.min = DFA242_min;
            this.max = DFA242_max;
            this.accept = DFA242_accept;
            this.special = DFA242_special;
            this.transition = DFA242_transition;

        }

        override public string Description
        {
            get { return "872:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );"; }
        }

    }

    const string DFA259_eotS =
        "\x1a\uffff";
    const string DFA259_eofS =
        "\x1a\uffff";
    const string DFA259_minS =
        "\x01\x04\x04\x00\x14\uffff\x01\x00";
    const string DFA259_maxS =
        "\x01\u00ca\x04\x00\x14\uffff\x01\x00";
    const string DFA259_acceptS =
        "\x05\uffff\x01\x01\x01\x02\x13\uffff";
    const string DFA259_specialS =
        "\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x14\uffff\x01\x05}>";
    static readonly string[] DFA259_transitionS = {
            "\x01\x19\x09\x06\x02\uffff\x01\x06\x30\uffff\x01\x19\x02\uffff"+
            "\x01\x06\x0d\uffff\x01\x05\x01\x06\x01\uffff\x01\x06\x02\uffff"+
            "\x01\x06\x04\uffff\x06\x06\x01\uffff\x01\x06\x01\uffff\x05\x06"+
            "\x0a\uffff\x01\x06\x0e\uffff\x01\x19\x01\x04\x01\uffff\x0e\x19"+
            "\x01\uffff\x03\x19\x01\uffff\x01\x19\x02\uffff\x03\x19\x09\x03"+
            "\x01\uffff\x01\x19\x06\uffff\x01\x01\x01\x02\x10\uffff\x01\x19"+
            "\x06\x03\x01\x19",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\x01\uffff"
    };

    static readonly short[] DFA259_eot = DFA.UnpackEncodedString(DFA259_eotS);
    static readonly short[] DFA259_eof = DFA.UnpackEncodedString(DFA259_eofS);
    static readonly char[] DFA259_min = DFA.UnpackEncodedStringToUnsignedChars(DFA259_minS);
    static readonly char[] DFA259_max = DFA.UnpackEncodedStringToUnsignedChars(DFA259_maxS);
    static readonly short[] DFA259_accept = DFA.UnpackEncodedString(DFA259_acceptS);
    static readonly short[] DFA259_special = DFA.UnpackEncodedString(DFA259_specialS);
    static readonly short[][] DFA259_transition = DFA.UnpackEncodedStringArray(DFA259_transitionS);

    protected class DFA259 : DFA
    {
        public DFA259(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = DFA259_eot;
            this.eof = DFA259_eof;
            this.min = DFA259_min;
            this.max = DFA259_max;
            this.accept = DFA259_accept;
            this.special = DFA259_special;
            this.transition = DFA259_transition;

        }

        override public string Description
        {
            get { return "961:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );"; }
        }

    }


    protected internal int DFA259_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA259_0 = input.LA(1);

                   	 
                   	int index259_0 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (LA259_0 == 177) ) { s = 1; }

                   	else if ( (LA259_0 == 178) ) { s = 2; }

                   	else if ( ((LA259_0 >= 160 && LA259_0 <= 168) || (LA259_0 >= 196 && LA259_0 <= 201)) ) { s = 3; }

                   	else if ( (LA259_0 == 133) ) { s = 4; }

                   	else if ( (LA259_0 == 82) && (synpred38_cs()) ) { s = 5; }

                   	else if ( ((LA259_0 >= Real_literal && LA259_0 <= NULL) || LA259_0 == MINUS || LA259_0 == 68 || LA259_0 == 83 || LA259_0 == 85 || LA259_0 == 88 || (LA259_0 >= 93 && LA259_0 <= 98) || LA259_0 == 100 || (LA259_0 >= 102 && LA259_0 <= 106) || LA259_0 == 117) ) { s = 6; }

                   	else if ( (LA259_0 == IDENTIFIER || LA259_0 == 65 || LA259_0 == 132 || (LA259_0 >= 135 && LA259_0 <= 148) || (LA259_0 >= 150 && LA259_0 <= 152) || LA259_0 == 154 || (LA259_0 >= 157 && LA259_0 <= 159) || LA259_0 == 170 || LA259_0 == 195 || LA259_0 == 202) ) { s = 25; }

                   	 
                   	input.Seek(index259_0);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA259_1 = input.LA(1);

                   	 
                   	int index259_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred38_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index259_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA259_2 = input.LA(1);

                   	 
                   	int index259_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred38_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index259_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 3 : 
                   	int LA259_3 = input.LA(1);

                   	 
                   	int index259_3 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred38_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index259_3);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 4 : 
                   	int LA259_4 = input.LA(1);

                   	 
                   	int index259_4 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred38_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index259_4);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 5 : 
                   	int LA259_25 = input.LA(1);

                   	 
                   	int index259_25 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred38_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index259_25);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae259 =
            new NoViableAltException(dfa.Description, 259, _s, input);
        dfa.Error(nvae259);
        throw nvae259;
    }
    const string DFA271_eotS =
        "\x1a\uffff";
    const string DFA271_eofS =
        "\x1a\uffff";
    const string DFA271_minS =
        "\x01\x04\x04\x00\x14\uffff\x01\x00";
    const string DFA271_maxS =
        "\x01\u00ca\x04\x00\x14\uffff\x01\x00";
    const string DFA271_acceptS =
        "\x05\uffff\x01\x01\x01\x02\x13\uffff";
    const string DFA271_specialS =
        "\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x14\uffff\x01\x05}>";
    static readonly string[] DFA271_transitionS = {
            "\x01\x19\x09\x06\x02\uffff\x01\x06\x30\uffff\x01\x19\x02\uffff"+
            "\x01\x06\x0d\uffff\x01\x05\x01\x06\x01\uffff\x01\x06\x02\uffff"+
            "\x01\x06\x04\uffff\x06\x06\x01\uffff\x01\x06\x01\uffff\x05\x06"+
            "\x0a\uffff\x01\x06\x0e\uffff\x01\x19\x01\x04\x01\uffff\x0e\x19"+
            "\x01\uffff\x03\x19\x01\uffff\x01\x19\x02\uffff\x03\x19\x09\x03"+
            "\x01\uffff\x01\x19\x06\uffff\x01\x01\x01\x02\x10\uffff\x01\x19"+
            "\x06\x03\x01\x19",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "\x01\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\x01\uffff"
    };

    static readonly short[] DFA271_eot = DFA.UnpackEncodedString(DFA271_eotS);
    static readonly short[] DFA271_eof = DFA.UnpackEncodedString(DFA271_eofS);
    static readonly char[] DFA271_min = DFA.UnpackEncodedStringToUnsignedChars(DFA271_minS);
    static readonly char[] DFA271_max = DFA.UnpackEncodedStringToUnsignedChars(DFA271_maxS);
    static readonly short[] DFA271_accept = DFA.UnpackEncodedString(DFA271_acceptS);
    static readonly short[] DFA271_special = DFA.UnpackEncodedString(DFA271_specialS);
    static readonly short[][] DFA271_transition = DFA.UnpackEncodedStringArray(DFA271_transitionS);

    protected class DFA271 : DFA
    {
        public DFA271(BaseRecognizer recognizer)
        {
            this.recognizer = recognizer;
            this.decisionNumber = 271;
            this.eot = DFA271_eot;
            this.eof = DFA271_eof;
            this.min = DFA271_min;
            this.max = DFA271_max;
            this.accept = DFA271_accept;
            this.special = DFA271_special;
            this.transition = DFA271_transition;

        }

        override public string Description
        {
            get { return "1013:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );"; }
        }

    }


    protected internal int DFA271_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 : 
                   	int LA271_0 = input.LA(1);

                   	 
                   	int index271_0 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (LA271_0 == 177) ) { s = 1; }

                   	else if ( (LA271_0 == 178) ) { s = 2; }

                   	else if ( ((LA271_0 >= 160 && LA271_0 <= 168) || (LA271_0 >= 196 && LA271_0 <= 201)) ) { s = 3; }

                   	else if ( (LA271_0 == 133) ) { s = 4; }

                   	else if ( (LA271_0 == 82) && (synpred39_cs()) ) { s = 5; }

                   	else if ( ((LA271_0 >= Real_literal && LA271_0 <= NULL) || LA271_0 == MINUS || LA271_0 == 68 || LA271_0 == 83 || LA271_0 == 85 || LA271_0 == 88 || (LA271_0 >= 93 && LA271_0 <= 98) || LA271_0 == 100 || (LA271_0 >= 102 && LA271_0 <= 106) || LA271_0 == 117) ) { s = 6; }

                   	else if ( (LA271_0 == IDENTIFIER || LA271_0 == 65 || LA271_0 == 132 || (LA271_0 >= 135 && LA271_0 <= 148) || (LA271_0 >= 150 && LA271_0 <= 152) || LA271_0 == 154 || (LA271_0 >= 157 && LA271_0 <= 159) || LA271_0 == 170 || LA271_0 == 195 || LA271_0 == 202) ) { s = 25; }

                   	 
                   	input.Seek(index271_0);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 : 
                   	int LA271_1 = input.LA(1);

                   	 
                   	int index271_1 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred39_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index271_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 : 
                   	int LA271_2 = input.LA(1);

                   	 
                   	int index271_2 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred39_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index271_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 3 : 
                   	int LA271_3 = input.LA(1);

                   	 
                   	int index271_3 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred39_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index271_3);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 4 : 
                   	int LA271_4 = input.LA(1);

                   	 
                   	int index271_4 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred39_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index271_4);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 5 : 
                   	int LA271_25 = input.LA(1);

                   	 
                   	int index271_25 = input.Index;
                   	input.Rewind();
                   	s = -1;
                   	if ( (synpred39_cs()) ) { s = 5; }

                   	else if ( (true) ) { s = 6; }

                   	 
                   	input.Seek(index271_25);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae271 =
            new NoViableAltException(dfa.Description, 271, _s, input);
        dfa.Error(nvae271);
        throw nvae271;
    }
 

    public static readonly BitSet FOLLOW_namespace_body_in_compilation_unit64 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_61_in_namespace_declaration73 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_qualified_identifier_in_namespace_declaration77 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_namespace_block_in_namespace_declaration81 = new BitSet(new ulong[]{0x0000000002000002UL});
    public static readonly BitSet FOLLOW_SEMI_in_namespace_declaration85 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_namespace_block94 = new BitSet(new ulong[]{0xA0000000000C0000UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_namespace_body_in_namespace_block98 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_namespace_block103 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_extern_alias_directives_in_namespace_body112 = new BitSet(new ulong[]{0x20000000000C0002UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_using_directives_in_namespace_body117 = new BitSet(new ulong[]{0x2000000000080002UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_global_attributes_in_namespace_body122 = new BitSet(new ulong[]{0x2000000000080002UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_namespace_member_declarations_in_namespace_body127 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_extern_alias_directive_in_extern_alias_directives136 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000001UL});
    public static readonly BitSet FOLLOW_64_in_extern_alias_directive145 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL});
    public static readonly BitSet FOLLOW_65_in_extern_alias_directive149 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_extern_alias_directive153 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_extern_alias_directive156 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_using_directive_in_using_directives164 = new BitSet(new ulong[]{0x0000000000040002UL});
    public static readonly BitSet FOLLOW_using_alias_directive_in_using_directive174 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_using_namespace_directive_in_using_directive179 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_USING_in_using_alias_directive188 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_using_alias_directive192 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_using_alias_directive196 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_namespace_or_type_name_in_using_alias_directive200 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_using_alias_directive204 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_USING_in_using_namespace_directive212 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_namespace_name_in_using_namespace_directive216 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_using_namespace_directive220 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_namespace_member_declaration_in_namespace_member_declarations228 = new BitSet(new ulong[]{0x2000000000080002UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_namespace_declaration_in_namespace_member_declaration237 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attributes_in_namespace_member_declaration242 = new BitSet(new ulong[]{0x2000000000080000UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_modifiers_in_namespace_member_declaration247 = new BitSet(new ulong[]{0x2000000000080000UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_type_declaration_in_namespace_member_declaration252 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_67_in_type_declaration266 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_class_declaration_in_type_declaration271 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_declaration_in_type_declaration283 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_declaration_in_type_declaration295 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_class_declaration_in_type_declaration301 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_declaration_in_type_declaration306 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_declaration_in_type_declaration311 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_enum_declaration_in_type_declaration316 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_delegate_declaration_in_type_declaration321 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_qualified_identifier330 = new BitSet(new ulong[]{0x0000000000004002UL});
    public static readonly BitSet FOLLOW_DOT_in_qualified_identifier333 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_qualified_identifier335 = new BitSet(new ulong[]{0x0000000000004002UL});
    public static readonly BitSet FOLLOW_namespace_or_type_name_in_namespace_name346 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_modifier_in_modifiers355 = new BitSet(new ulong[]{0x0000000000000002UL,0x000000000001FFF1UL});
    public static readonly BitSet FOLLOW_set_in_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attributes_in_class_member_declaration427 = new BitSet(new ulong[]{0x2000000000080010UL,0x000004020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration433 = new BitSet(new ulong[]{0x2000000000080010UL,0x000004020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_81_in_class_member_declaration439 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_class_member_declaration443 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_constant_declarators_in_class_member_declaration447 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_class_member_declaration451 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_event_declaration_in_class_member_declaration456 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_67_in_class_member_declaration463 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000617FFEDDFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_method_declaration_in_class_member_declaration466 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_declaration_in_class_member_declaration477 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_class_declaration_in_class_member_declaration488 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_declaration_in_class_member_declaration499 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_declaration_in_class_member_declaration505 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_82_in_class_member_declaration511 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_method_declaration_in_class_member_declaration515 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_class_member_declaration520 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000080002UL,0x000625FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_method_declaration_in_class_member_declaration534 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_property_declaration_in_class_member_declaration553 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_name_in_class_member_declaration576 = new BitSet(new ulong[]{0x0000000000004000UL});
    public static readonly BitSet FOLLOW_DOT_in_class_member_declaration578 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000080000UL});
    public static readonly BitSet FOLLOW_indexer_declaration_in_class_member_declaration580 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_indexer_declaration_in_class_member_declaration589 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_field_declaration_in_class_member_declaration602 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_operator_declaration_in_class_member_declaration620 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_class_declaration_in_class_member_declaration638 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_declaration_in_class_member_declaration645 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_enum_declaration_in_class_member_declaration651 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_delegate_declaration_in_class_member_declaration658 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_conversion_operator_declaration_in_class_member_declaration664 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_constructor_declaration_in_class_member_declaration669 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_destructor_declaration_in_class_member_declaration675 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_83_in_primary_expression701 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_brackets_in_primary_expression705 = new BitSet(new ulong[]{0x000000000000C002UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression709 = new BitSet(new ulong[]{0x000000000000C002UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_83_in_primary_expression725 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_brackets_in_primary_expression729 = new BitSet(new ulong[]{0x000000000000C002UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression733 = new BitSet(new ulong[]{0x000000000000C002UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_primary_expression_start_in_primary_expression739 = new BitSet(new ulong[]{0x000000000000C002UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression743 = new BitSet(new ulong[]{0x000000000000C002UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_68_in_primary_expression749 = new BitSet(new ulong[]{0x4000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_object_creation_expression_in_primary_expression777 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression781 = new BitSet(new ulong[]{0x000000000000C002UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_delegate_creation_expression_in_primary_expression809 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_object_creation_expression_in_primary_expression817 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_anonymous_object_creation_expression_in_primary_expression825 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_sizeof_expression_in_primary_expression838 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_checked_expression_in_primary_expression849 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unchecked_expression_in_primary_expression868 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_default_value_expression_in_primary_expression885 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_anonymous_method_expression_in_primary_expression898 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_predefined_type_in_primary_expression_start911 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_primary_expression_start939 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_generic_argument_list_in_primary_expression_start943 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_primary_expression_start948 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000100000UL});
    public static readonly BitSet FOLLOW_84_in_primary_expression_start951 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_primary_expression_start955 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_83_in_primary_expression_start962 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_85_in_primary_expression_start968 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_paren_expression_in_primary_expression_start973 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_typeof_expression_in_primary_expression_start978 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_literal_in_primary_expression_start996 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_access_identifier_in_primary_expression_part1007 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_brackets_or_arguments_in_primary_expression_part1012 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_access_operator_in_access_identifier1020 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_type_or_generic_in_access_identifier1024 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_access_operator0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_brackets_in_brackets_or_arguments1046 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_arguments_in_brackets_or_arguments1050 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_86_in_brackets1058 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1A80012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_list_in_brackets1062 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_brackets1067 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_88_in_paren_expression1077 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_paren_expression1081 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_paren_expression1085 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_88_in_arguments1094 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7F9280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_argument_list_in_arguments1098 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_arguments1103 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_argument_in_argument_list1112 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_argument_list1115 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7F9280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_argument_in_argument_list1117 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_argument_name_in_argument1127 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7F9280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_argument_value_in_argument1131 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_argument_value_in_argument1136 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_argument_name1143 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_argument_name1147 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_argument_value1155 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_ref_variable_reference_in_argument_value1161 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_91_in_argument_value1167 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_variable_reference_in_argument_value1171 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_92_in_ref_variable_reference1179 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_88_in_ref_variable_reference1201 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_ref_variable_reference1205 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_ref_variable_reference1209 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7F1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_ref_variable_reference_in_ref_variable_reference1214 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_variable_reference_in_ref_variable_reference1218 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_variable_reference_in_ref_variable_reference1254 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_variable_reference1264 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_rank_specifier_in_rank_specifiers1272 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_86_in_rank_specifier1290 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000002800000UL});
    public static readonly BitSet FOLLOW_dim_separators_in_rank_specifier1294 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_rank_specifier1299 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_89_in_dim_separators1308 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_type_name_in_delegate_creation_expression1321 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_delegate_creation_expression1325 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_name_in_delegate_creation_expression1329 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_delegate_creation_expression1333 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1344 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_anonymous_object_initializer1353 = new BitSet(new ulong[]{0x8000000000000010UL,0x0000000002000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_member_declarator_list_in_anonymous_object_initializer1357 = new BitSet(new ulong[]{0x8000000000000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_anonymous_object_initializer1362 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_anonymous_object_initializer1367 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_declarator_in_member_declarator_list1375 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_member_declarator_list1379 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_member_declarator_in_member_declarator_list1381 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_identifier_in_member_declarator1393 = new BitSet(new ulong[]{0x0000000000004000UL,0x0000000800000004UL});
    public static readonly BitSet FOLLOW_generic_argument_list_in_member_declarator1398 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_DOT_in_member_declarator1408 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x00000007E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_primary_or_array_creation_expression_in_member_declarator1412 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_66_in_member_declarator1422 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_member_declarator1426 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_array_creation_expression_in_primary_or_array_creation_expression1441 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_primary_expression_in_primary_or_array_creation_expression1446 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_68_in_array_creation_expression1457 = new BitSet(new ulong[]{0x4000000000000010UL,0x0000000000440002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_array_creation_expression1465 = new BitSet(new ulong[]{0x4000000000000010UL,0x0000000000440002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_86_in_array_creation_expression1470 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_list_in_array_creation_expression1474 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_array_creation_expression1478 = new BitSet(new ulong[]{0x400000000000C012UL,0x0000000001440002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_rank_specifiers_in_array_creation_expression1490 = new BitSet(new ulong[]{0x4000000000000012UL,0x0000000000440002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression1495 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_arguments_in_array_creation_expression1531 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_invocation_part_in_array_creation_expression1535 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_invocation_part_in_array_creation_expression1547 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_arguments_in_array_creation_expression1553 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression1575 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_rank_specifier_in_array_creation_expression1589 = new BitSet(new ulong[]{0x4000000000000010UL,0x0000000000440002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression1598 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_array_initializer1619 = new BitSet(new ulong[]{0xC000000000013FF0UL,0x002007D7E36C0012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_variable_initializer_list_in_array_initializer1623 = new BitSet(new ulong[]{0x8000000000000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_array_initializer1628 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_array_initializer1633 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_variable_initializer_in_variable_initializer_list1641 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_variable_initializer_list1644 = new BitSet(new ulong[]{0x4000000000013FF0UL,0x002007D7E16C0012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_variable_initializer_in_variable_initializer_list1646 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_expression_in_variable_initializer1656 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_array_initializer_in_variable_initializer1660 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_93_in_sizeof_expression1668 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_sizeof_expression1672 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unmanaged_type_in_sizeof_expression1676 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_sizeof_expression1680 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_94_in_checked_expression1688 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_checked_expression1692 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_checked_expression1696 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_checked_expression1700 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_95_in_unchecked_expression1709 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_unchecked_expression1713 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_unchecked_expression1717 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_unchecked_expression1721 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_96_in_default_value_expression1730 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_default_value_expression1734 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_default_value_expression1738 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_default_value_expression1742 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_97_in_anonymous_method_expression1750 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression1754 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_anonymous_method_expression1759 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_88_in_explicit_anonymous_function_signature1766 = new BitSet(new ulong[]{0x0000000004000010UL,0x0000000018040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature1770 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_explicit_anonymous_function_signature1775 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1783 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_explicit_anonymous_function_parameter_list1788 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000018040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list1792 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter1803 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_explicit_anonymous_function_parameter1808 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_explicit_anonymous_function_parameter1812 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_anonymous_function_parameter_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_object_creation_expression1836 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_object_creation_expression1845 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7F9280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_argument_list_in_object_creation_expression1849 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_object_creation_expression1854 = new BitSet(new ulong[]{0x4000000000000002UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression1858 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression1869 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_object_or_collection_initializer1881 = new BitSet(new ulong[]{0xC000000000013FF0UL,0x002007D7E3280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_object_initializer_in_object_or_collection_initializer1885 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_collection_initializer_in_object_or_collection_initializer1892 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_element_initializer_list_in_collection_initializer1902 = new BitSet(new ulong[]{0x8000000000000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_collection_initializer1906 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_collection_initializer1911 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_element_initializer_in_element_initializer_list1920 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_element_initializer_list1924 = new BitSet(new ulong[]{0xC000000000013FF0UL,0x002007D7E3280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_element_initializer_in_element_initializer_list1926 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_non_assignment_expression_in_element_initializer1937 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_element_initializer1943 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_list_in_element_initializer1947 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_element_initializer1951 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_initializer_list_in_object_initializer1966 = new BitSet(new ulong[]{0x8000000000000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_object_initializer1971 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_object_initializer1976 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_initializer_in_member_initializer_list1985 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_member_initializer_list1989 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_member_initializer_in_member_initializer_list1991 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_member_initializer2001 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_member_initializer2005 = new BitSet(new ulong[]{0x4000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_initializer_value_in_member_initializer2009 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_initializer_value2018 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_object_or_collection_initializer_in_initializer_value2024 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_98_in_typeof_expression2036 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_typeof_expression2040 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unbound_type_name_in_typeof_expression2051 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_type_in_typeof_expression2062 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_82_in_typeof_expression2074 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_typeof_expression2079 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unbound_type_name_start_in_unbound_type_name2094 = new BitSet(new ulong[]{0x0000000000004000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name2113 = new BitSet(new ulong[]{0x0000000000004000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name2117 = new BitSet(new ulong[]{0x0000000000004000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name2124 = new BitSet(new ulong[]{0x0000000000004000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name2134 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_start2144 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000100000UL});
    public static readonly BitSet FOLLOW_84_in_unbound_type_name_start2147 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_start2149 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_DOT_in_unbound_type_name_part2158 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_part2162 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_99_in_generic_dimension_specifier2170 = new BitSet(new ulong[]{0x0000000000020000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_commas_in_generic_dimension_specifier2174 = new BitSet(new ulong[]{0x0000000000020000UL});
    public static readonly BitSet FOLLOW_GT_in_generic_dimension_specifier2179 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_89_in_commas2188 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_namespace_or_type_name_in_type_name2204 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2213 = new BitSet(new ulong[]{0x0000000000004002UL,0x0000000000100000UL});
    public static readonly BitSet FOLLOW_84_in_namespace_or_type_name2218 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2220 = new BitSet(new ulong[]{0x0000000000004002UL});
    public static readonly BitSet FOLLOW_DOT_in_namespace_or_type_name2225 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2229 = new BitSet(new ulong[]{0x0000000000004002UL});
    public static readonly BitSet FOLLOW_identifier_in_type_or_generic2249 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_generic_argument_list_in_type_or_generic2253 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_type_or_generic2258 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_qid_start_in_qid2269 = new BitSet(new ulong[]{0x000000000000C002UL});
    public static readonly BitSet FOLLOW_qid_part_in_qid2273 = new BitSet(new ulong[]{0x000000000000C002UL});
    public static readonly BitSet FOLLOW_predefined_type_in_qid_start2283 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_qid_start2299 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_generic_argument_list_in_qid_start2303 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_qid_start2310 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000100000UL});
    public static readonly BitSet FOLLOW_84_in_qid_start2315 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_qid_start2319 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_literal_in_qid_start2326 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_access_identifier_in_qid_part2340 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_99_in_generic_argument_list2350 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_arguments_in_generic_argument_list2354 = new BitSet(new ulong[]{0x0000000000020000UL});
    public static readonly BitSet FOLLOW_GT_in_generic_argument_list2358 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_type_arguments2367 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_type_arguments2370 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_type_arguments2372 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_predefined_type_in_type2401 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_type_name_in_type2405 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_rank_specifiers_in_type2410 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_100_in_type2414 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_predefined_type_in_type2443 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000003000000000UL});
    public static readonly BitSet FOLLOW_type_name_in_type2447 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000003000000000UL});
    public static readonly BitSet FOLLOW_100_in_type2453 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_101_in_type2458 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_predefined_type_in_type2465 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_name_in_type2469 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_82_in_type2475 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_100_in_type2477 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_predefined_type_in_non_nullable_type2488 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000400000UL});
    public static readonly BitSet FOLLOW_type_name_in_non_nullable_type2492 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000400000UL});
    public static readonly BitSet FOLLOW_rank_specifiers_in_non_nullable_type2501 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_100_in_non_nullable_type2505 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_100_in_non_nullable_type2514 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_82_in_non_nullable_type2526 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_100_in_non_nullable_type2530 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_type_in_non_array_type2541 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_array_type2548 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_unmanaged_type2555 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_class_type2562 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_pointer_type2569 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_SEMI_in_block2581 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_block2586 = new BitSet(new ulong[]{0xC000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_statement_list_in_block2590 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_block2595 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_statement_in_statement_list2602 = new BitSet(new ulong[]{0x4000000002153FF2UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_assignment_in_expression2627 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_non_assignment_expression_in_expression2633 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_expression_list2642 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_expression_list2646 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_expression_list2650 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_unary_expression_in_assignment2660 = new BitSet(new ulong[]{0x0000000000020000UL,0x000FF80000000004UL});
    public static readonly BitSet FOLLOW_assignment_operator_in_assignment2664 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_assignment2668 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_cast_expression_in_unary_expression2685 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_primary_or_array_creation_expression_in_unary_expression2690 = new BitSet(new ulong[]{0x0000000000000002UL,0x000000C000000000UL});
    public static readonly BitSet FOLLOW_102_in_unary_expression2694 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000008000000000UL});
    public static readonly BitSet FOLLOW_103_in_unary_expression2699 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_104_in_unary_expression2705 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_unary_expression2709 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_MINUS_in_unary_expression2715 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_unary_expression2719 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_105_in_unary_expression2725 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_unary_expression2729 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_106_in_unary_expression2735 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_unary_expression2739 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_pre_increment_expression_in_unary_expression2745 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_pre_decrement_expression_in_unary_expression2751 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_pointer_indirection_expression_in_unary_expression2757 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_addressof_expression_in_unary_expression2762 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_88_in_cast_expression2772 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_cast_expression2776 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_cast_expression2780 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_cast_expression2784 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_66_in_assignment_operator2792 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_107_in_assignment_operator2796 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_108_in_assignment_operator2800 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_109_in_assignment_operator2804 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_110_in_assignment_operator2808 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_111_in_assignment_operator2812 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_112_in_assignment_operator2816 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_113_in_assignment_operator2820 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_114_in_assignment_operator2824 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_115_in_assignment_operator2828 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_GT_in_assignment_operator2832 = new BitSet(new ulong[]{0x0000000000000000UL,0x0010000000000000UL});
    public static readonly BitSet FOLLOW_116_in_assignment_operator2834 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_102_in_pre_increment_expression2843 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_pre_increment_expression2847 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_103_in_pre_decrement_expression2856 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_pre_decrement_expression2860 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_100_in_pointer_indirection_expression2868 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_pointer_indirection_expression2872 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_117_in_addressof_expression2880 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_addressof_expression2884 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_lambda_expression_in_non_assignment_expression2905 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_query_expression_in_non_assignment_expression2916 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_conditional_expression_in_non_assignment_expression2922 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unary_expression_in_multiplicative_expression2936 = new BitSet(new ulong[]{0x0000000000000002UL,0x00C0001000000000UL});
    public static readonly BitSet FOLLOW_set_in_multiplicative_expression2941 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_multiplicative_expression2951 = new BitSet(new ulong[]{0x0000000000000002UL,0x00C0001000000000UL});
    public static readonly BitSet FOLLOW_multiplicative_expression_in_additive_expression2961 = new BitSet(new ulong[]{0x0000000000010002UL,0x0000010000000000UL});
    public static readonly BitSet FOLLOW_set_in_additive_expression2964 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_multiplicative_expression_in_additive_expression2972 = new BitSet(new ulong[]{0x0000000000010002UL,0x0000010000000000UL});
    public static readonly BitSet FOLLOW_additive_expression_in_shift_expression2983 = new BitSet(new ulong[]{0x0000000000020002UL,0x0100000000000000UL});
    public static readonly BitSet FOLLOW_120_in_shift_expression2987 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_GT_in_shift_expression2989 = new BitSet(new ulong[]{0x0000000000020000UL});
    public static readonly BitSet FOLLOW_GT_in_shift_expression2991 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_additive_expression_in_shift_expression2994 = new BitSet(new ulong[]{0x0000000000020002UL,0x0100000000000000UL});
    public static readonly BitSet FOLLOW_shift_expression_in_relational_expression3004 = new BitSet(new ulong[]{0x0000000000020002UL,0x0E10000800000000UL});
    public static readonly BitSet FOLLOW_set_in_relational_expression3011 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_shift_expression_in_relational_expression3021 = new BitSet(new ulong[]{0x0000000000020002UL,0x0E10000800000000UL});
    public static readonly BitSet FOLLOW_set_in_relational_expression3030 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_non_nullable_type_in_relational_expression3038 = new BitSet(new ulong[]{0x0000000000020002UL,0x0E10000800000000UL});
    public static readonly BitSet FOLLOW_relational_expression_in_equality_expression3052 = new BitSet(new ulong[]{0x0000000000000002UL,0x3000000000000000UL});
    public static readonly BitSet FOLLOW_set_in_equality_expression3059 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_relational_expression_in_equality_expression3067 = new BitSet(new ulong[]{0x0000000000000002UL,0x3000000000000000UL});
    public static readonly BitSet FOLLOW_equality_expression_in_and_expression3077 = new BitSet(new ulong[]{0x0000000000000002UL,0x0020000000000000UL});
    public static readonly BitSet FOLLOW_117_in_and_expression3080 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_equality_expression_in_and_expression3084 = new BitSet(new ulong[]{0x0000000000000002UL,0x0020000000000000UL});
    public static readonly BitSet FOLLOW_and_expression_in_exclusive_or_expression3094 = new BitSet(new ulong[]{0x0000000000000002UL,0x4000000000000000UL});
    public static readonly BitSet FOLLOW_126_in_exclusive_or_expression3097 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_and_expression_in_exclusive_or_expression3101 = new BitSet(new ulong[]{0x0000000000000002UL,0x4000000000000000UL});
    public static readonly BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression3111 = new BitSet(new ulong[]{0x0000000000000002UL,0x8000000000000000UL});
    public static readonly BitSet FOLLOW_127_in_inclusive_or_expression3116 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression3120 = new BitSet(new ulong[]{0x0000000000000002UL,0x8000000000000000UL});
    public static readonly BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression3130 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000001UL});
    public static readonly BitSet FOLLOW_128_in_conditional_and_expression3135 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression3139 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000001UL});
    public static readonly BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression3149 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000002UL});
    public static readonly BitSet FOLLOW_129_in_conditional_or_expression3153 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression3157 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000002UL});
    public static readonly BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression3168 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_130_in_null_coalescing_expression3173 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression3177 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_null_coalescing_expression_in_conditional_expression3187 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL});
    public static readonly BitSet FOLLOW_101_in_conditional_expression3192 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_conditional_expression3196 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_conditional_expression3200 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_conditional_expression3204 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_anonymous_function_signature_in_lambda_expression3224 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000008UL});
    public static readonly BitSet FOLLOW_131_in_lambda_expression3228 = new BitSet(new ulong[]{0x4000000002013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_anonymous_function_body_in_lambda_expression3232 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_88_in_anonymous_function_signature3239 = new BitSet(new ulong[]{0x0000000004000010UL,0x0000000019040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature3242 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3248 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_anonymous_function_signature3252 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3257 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3266 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_implicit_anonymous_function_parameter_list3271 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000001000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3275 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_identifier_in_implicit_anonymous_function_parameter3285 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_anonymous_function_body3292 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_anonymous_function_body3297 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_from_clause_in_query_expression3309 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000002CCA0UL});
    public static readonly BitSet FOLLOW_query_body_in_query_expression3313 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_query_body_clauses_in_query_body3323 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000002CCA0UL});
    public static readonly BitSet FOLLOW_select_or_group_clause_in_query_body3328 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000010UL});
    public static readonly BitSet FOLLOW_query_continuation_in_query_body3339 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_132_in_query_continuation3349 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_query_continuation3353 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000002CCA0UL});
    public static readonly BitSet FOLLOW_query_body_in_query_continuation3357 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_query_body_clause_in_query_body_clauses3364 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000020CA0UL});
    public static readonly BitSet FOLLOW_from_clause_in_query_body_clause3373 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_let_clause_in_query_body_clause3378 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_where_clause_in_query_body_clause3383 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_join_clause_in_query_body_clause3388 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_orderby_clause_in_query_body_clause3393 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_133_in_from_clause3400 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_from_clause3404 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_from_clause3409 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000040UL});
    public static readonly BitSet FOLLOW_134_in_from_clause3413 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_from_clause3417 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_135_in_join_clause3425 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_join_clause3429 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_join_clause3434 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000040UL});
    public static readonly BitSet FOLLOW_134_in_join_clause3438 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_join_clause3442 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000100UL});
    public static readonly BitSet FOLLOW_136_in_join_clause3446 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_join_clause3450 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000200UL});
    public static readonly BitSet FOLLOW_137_in_join_clause3454 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_join_clause3458 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000010UL});
    public static readonly BitSet FOLLOW_132_in_join_clause3461 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_join_clause3463 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_138_in_let_clause3473 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_let_clause3477 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_let_clause3481 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_let_clause3485 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_139_in_orderby_clause3492 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_ordering_list_in_orderby_clause3496 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_ordering_in_ordering_list3504 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_ordering_list3509 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_ordering_in_ordering_list3513 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_expression_in_ordering3523 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000003000UL});
    public static readonly BitSet FOLLOW_ordering_direction_in_ordering3528 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_ordering_direction0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_select_clause_in_select_or_group_clause3550 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_group_clause_in_select_or_group_clause3555 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_142_in_select_clause3563 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_select_clause3567 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_143_in_group_clause3575 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_group_clause3579 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
    public static readonly BitSet FOLLOW_144_in_group_clause3583 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_group_clause3587 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_145_in_where_clause3595 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_boolean_expression_in_where_clause3599 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_boolean_expression3607 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_global_attribute_in_global_attributes3619 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_86_in_global_attribute3629 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x00000000000C0000UL});
    public static readonly BitSet FOLLOW_global_attribute_target_specifier_in_global_attribute3633 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attribute_list_in_global_attribute3637 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000002800000UL});
    public static readonly BitSet FOLLOW_89_in_global_attribute3641 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_global_attribute3646 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_global_attribute_target_in_global_attribute_target_specifier3655 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_global_attribute_target_specifier3659 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_global_attribute_target0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attribute_sections_in_attributes3681 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attribute_section_in_attribute_sections3690 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_86_in_attribute_section3700 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE7FFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attribute_target_specifier_in_attribute_section3704 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attribute_list_in_attribute_section3709 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000002800000UL});
    public static readonly BitSet FOLLOW_89_in_attribute_section3713 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_attribute_section3718 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attribute_target_in_attribute_target_specifier3727 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_attribute_target_specifier3731 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_attribute_target0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attribute_in_attribute_list3773 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_attribute_list3776 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attribute_in_attribute_list3778 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_type_name_in_attribute3790 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_attribute_arguments_in_attribute3794 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_88_in_attribute_arguments3805 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_RPAREN_in_attribute_arguments3810 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_positional_argument_in_attribute_arguments3830 = new BitSet(new ulong[]{0x0000000004000010UL,0x0000000002000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_named_argument_in_attribute_arguments3849 = new BitSet(new ulong[]{0x0000000004000010UL,0x0000000002000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_89_in_attribute_arguments3865 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_positional_argument_in_attribute_arguments3867 = new BitSet(new ulong[]{0x0000000004000010UL,0x0000000002000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_RPAREN_in_attribute_arguments3878 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_positional_argument_in_positional_argument_list3892 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_positional_argument_list3895 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_positional_argument_in_positional_argument_list3897 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_attribute_argument_expression_in_positional_argument3908 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_named_argument_in_named_argument_list3917 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_named_argument_list3920 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_named_argument_in_named_argument_list3922 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_identifier_in_named_argument3933 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_named_argument3937 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attribute_argument_expression_in_named_argument3941 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_attribute_argument_expression3950 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_155_in_class_declaration3963 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_type_or_generic_in_class_declaration3966 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_class_base_in_class_declaration3970 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_class_declaration3975 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_class_body_in_class_declaration3980 = new BitSet(new ulong[]{0x0000000002000002UL});
    public static readonly BitSet FOLLOW_SEMI_in_class_declaration3984 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_90_in_class_base3997 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_interface_type_list_in_class_base4001 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_interface_type_list4011 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_interface_type_list4014 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_interface_type_list4018 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_62_in_class_body4029 = new BitSet(new ulong[]{0xA000000000080010UL,0x000004020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_class_member_declarations_in_class_body4033 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_class_body4038 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_class_member_declaration_in_class_member_declarations4046 = new BitSet(new ulong[]{0x2000000000080012UL,0x000004020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_81_in_constant_declaration4057 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_constant_declaration4061 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_constant_declarators_in_constant_declaration4065 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_constant_declaration4069 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_constant_declarator_in_constant_declarators4077 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_constant_declarators4080 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_constant_declarator_in_constant_declarators4082 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_identifier_in_constant_declarator4092 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_constant_declarator4097 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_constant_expression_in_constant_declarator4101 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_constant_expression4111 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_variable_declarators_in_field_declaration4120 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_field_declaration4124 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_variable_declarator_in_variable_declarators4132 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_variable_declarators4135 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_variable_declarator_in_variable_declarators4139 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_type_name_in_variable_declarator4149 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_variable_declarator4152 = new BitSet(new ulong[]{0x4000000000013FF0UL,0x002007D7E16C0012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_variable_initializer_in_variable_declarator4156 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_method_header_in_method_declaration4170 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_method_body_in_method_declaration4174 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_method_header4182 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_method_header4185 = new BitSet(new ulong[]{0x0000000004000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_formal_parameter_list_in_method_header4189 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_method_header4194 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_method_header4198 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_method_body4207 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_qid_in_member_name4215 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_property_declaration4227 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_property_declaration4231 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000004001E0UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_accessor_declarations_in_property_declaration4235 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_property_declaration4239 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attributes_in_accessor_declarations4247 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000004001E0UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations4253 = new BitSet(new ulong[]{0x0000000000000002UL,0x00000000004001E0UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_attributes_in_accessor_declarations4257 = new BitSet(new ulong[]{0x0000000000000002UL,0x00000000004001E0UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations4262 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations4269 = new BitSet(new ulong[]{0x0000000000000002UL,0x00000000004001E0UL,0x0000000010000000UL});
    public static readonly BitSet FOLLOW_attributes_in_accessor_declarations4273 = new BitSet(new ulong[]{0x0000000000000002UL,0x00000000000001E0UL,0x0000000010000000UL});
    public static readonly BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations4278 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_accessor_modifier_in_get_accessor_declaration4288 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
    public static readonly BitSet FOLLOW_156_in_get_accessor_declaration4293 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_accessor_body_in_get_accessor_declaration4297 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_accessor_modifier_in_set_accessor_declaration4305 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
    public static readonly BitSet FOLLOW_157_in_set_accessor_declaration4310 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_accessor_body_in_set_accessor_declaration4314 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_accessor_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_accessor_body4342 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_149_in_event_declaration4352 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_event_declaration4356 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_member_name_in_event_declaration4371 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_event_declaration4375 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x00000000C0000000UL});
    public static readonly BitSet FOLLOW_event_accessor_declarations_in_event_declaration4379 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_event_declaration4383 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_variable_declarators_in_event_declaration4389 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_event_declaration4393 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_modifier_in_event_modifiers4405 = new BitSet(new ulong[]{0x0000000000000002UL,0x000000000001FFF1UL});
    public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations4414 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x00000000C0000000UL});
    public static readonly BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations4421 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x00000000C0000000UL});
    public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations4425 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x00000000C0000000UL});
    public static readonly BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations4430 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations4451 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x0000000040000000UL});
    public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations4455 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000040000000UL});
    public static readonly BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations4460 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_158_in_add_accessor_declaration4470 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_add_accessor_declaration4474 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_159_in_remove_accessor_declaration4482 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_remove_accessor_declaration4486 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_ENUM_in_enum_declaration4498 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_enum_declaration4502 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_enum_base_in_enum_declaration4506 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_enum_body_in_enum_declaration4511 = new BitSet(new ulong[]{0x0000000002000002UL});
    public static readonly BitSet FOLLOW_SEMI_in_enum_declaration4515 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_90_in_enum_base4524 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000001FF00000000UL});
    public static readonly BitSet FOLLOW_integral_type_in_enum_base4528 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_enum_body4536 = new BitSet(new ulong[]{0x8000000000000010UL,0x0000000000400002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_enum_member_declarations_in_enum_body4539 = new BitSet(new ulong[]{0x8000000000000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_enum_body4541 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_enum_body4548 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations4556 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_enum_member_declarations4559 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000400002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations4561 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_attributes_in_enum_member_declaration4571 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_enum_member_declaration4576 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_enum_member_declaration4581 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_enum_member_declaration4585 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_integral_type0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_97_in_delegate_declaration4642 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_return_type_in_delegate_declaration4646 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_delegate_declaration4650 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000801000000UL});
    public static readonly BitSet FOLLOW_variant_generic_parameter_list_in_delegate_declaration4653 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_delegate_declaration4661 = new BitSet(new ulong[]{0x0000000004000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_formal_parameter_list_in_delegate_declaration4665 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_delegate_declaration4670 = new BitSet(new ulong[]{0x0000000002000000UL,0x0000000000000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration4674 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_delegate_declaration4679 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_modifier_in_delegate_modifiers4687 = new BitSet(new ulong[]{0x0000000000000002UL,0x000000000001FFF1UL});
    public static readonly BitSet FOLLOW_99_in_variant_generic_parameter_list4697 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000008400002UL,0x00060400E5DFFFF0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_variant_type_parameters_in_variant_generic_parameter_list4701 = new BitSet(new ulong[]{0x0000000000020000UL});
    public static readonly BitSet FOLLOW_GT_in_variant_generic_parameter_list4705 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters4713 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_variant_type_parameters4716 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000008400002UL,0x00060400E5DFFFF0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters4718 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_attributes_in_variant_type_variable_name4728 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000008400002UL,0x00060400E5DFFFF0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_variance_annotation_in_variant_type_variable_name4733 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000008400002UL,0x00060400E5DFFFF0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_type_variable_name_in_variant_type_variable_name4738 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_variance_annotation0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses4759 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_type_parameter_constraints_clauses4764 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses4768 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_145_in_type_parameter_constraints_clause4778 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000008400002UL,0x00060400E5DFFFF0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_type_variable_name_in_type_parameter_constraints_clause4782 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_type_parameter_constraints_clause4786 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000012UL,0x000607FFEDDFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause4790 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_type_parameter_constraint_list4853 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_type_parameter_constraint_list4864 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list4868 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_type_parameter_constraint_list4875 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000012UL,0x000607FFEDDFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list4879 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list4886 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_type_parameter_constraint_list4891 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000012UL,0x000607FFEDDFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list4895 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list4902 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list4914 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_secondary_constraint_list4917 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list4919 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_type_name_in_secondary_constraint4929 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_type_variable_name4939 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_68_in_constructor_constraint4947 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_constructor_constraint4951 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_constructor_constraint4955 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_return_type4963 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_82_in_return_type4969 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_formal_parameter_in_formal_parameter_list4976 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_formal_parameter_list4979 = new BitSet(new ulong[]{0x0000000000000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_formal_parameter_in_formal_parameter_list4981 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_attributes_in_formal_parameter4991 = new BitSet(new ulong[]{0x0000000000000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_fixed_parameter_in_formal_parameter4997 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_parameter_array_in_formal_parameter5001 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_170_in_formal_parameter5008 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_fixed_parameter_in_fixed_parameters5016 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_fixed_parameters5021 = new BitSet(new ulong[]{0x0000000000000010UL,0x00000000180C0002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_fixed_parameter_in_fixed_parameters5025 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_parameter_modifier_in_fixed_parameter5036 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_fixed_parameter5041 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_fixed_parameter5045 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_default_argument_in_fixed_parameter5049 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_66_in_default_argument5059 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_default_argument5061 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_parameter_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_171_in_parameter_array5084 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_parameter_array5088 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_parameter_array5092 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_172_in_interface_declaration5102 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_interface_declaration5106 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000804000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_variant_generic_parameter_list_in_interface_declaration5110 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000804000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_interface_base_in_interface_declaration5119 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000804000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_declaration5124 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000804000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_interface_body_in_interface_declaration5129 = new BitSet(new ulong[]{0x0000000002000002UL});
    public static readonly BitSet FOLLOW_SEMI_in_interface_declaration5133 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_modifier_in_interface_modifiers5143 = new BitSet(new ulong[]{0x0000000000000002UL,0x000000000001FFF1UL});
    public static readonly BitSet FOLLOW_90_in_interface_base5156 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_interface_type_list_in_interface_base5158 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_interface_body5166 = new BitSet(new ulong[]{0x8000000000000010UL,0x000000000045FFF3UL,0x000605FFE5FFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_interface_member_declarations_in_interface_body5170 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_interface_body5175 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_member_declaration_in_interface_member_declarations5183 = new BitSet(new ulong[]{0x0000000000000012UL,0x000000000045FFF3UL,0x000605FFE5FFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attributes_in_interface_member_declaration5192 = new BitSet(new ulong[]{0x0000000000000010UL,0x000000000005FFF3UL,0x000605FFE5FFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_modifiers_in_interface_member_declaration5198 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5FFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_82_in_interface_member_declaration5204 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration5208 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_event_declaration_in_interface_member_declaration5214 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_interface_member_declaration5220 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000080002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration5236 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_property_declaration_in_interface_member_declaration5261 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_indexer_declaration_in_interface_member_declaration5271 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_interface_property_declaration5288 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_interface_property_declaration5292 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_interface_accessor_declarations_in_interface_property_declaration5296 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_interface_property_declaration5300 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_interface_method_declaration5308 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000801000000UL});
    public static readonly BitSet FOLLOW_generic_argument_list_in_interface_method_declaration5312 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_interface_method_declaration5320 = new BitSet(new ulong[]{0x0000000004000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_formal_parameter_list_in_interface_method_declaration5324 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_interface_method_declaration5329 = new BitSet(new ulong[]{0x0000000002000000UL,0x0000000000000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration5333 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_interface_method_declaration5338 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_149_in_interface_event_declaration5349 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_interface_event_declaration5353 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_interface_event_declaration5357 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_interface_event_declaration5361 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_83_in_interface_indexer_declaration5373 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_86_in_interface_indexer_declaration5377 = new BitSet(new ulong[]{0x0000000000000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_formal_parameter_list_in_interface_indexer_declaration5381 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_interface_indexer_declaration5385 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_interface_indexer_declaration5389 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration5393 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_interface_indexer_declaration5397 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_attributes_in_interface_accessor_declarations5405 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations5414 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000400000UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_attributes_in_interface_accessor_declarations5418 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000400000UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations5423 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations5430 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000400000UL,0x0000000010000000UL});
    public static readonly BitSet FOLLOW_attributes_in_interface_accessor_declarations5434 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000010000000UL});
    public static readonly BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations5439 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_156_in_interface_get_accessor_declaration5449 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_interface_get_accessor_declaration5453 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_157_in_interface_set_accessor_declaration5463 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_interface_set_accessor_declaration5467 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_modifier_in_method_modifiers5477 = new BitSet(new ulong[]{0x0000000000000002UL,0x000000000001FFF1UL});
    public static readonly BitSet FOLLOW_169_in_struct_declaration5489 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_type_or_generic_in_struct_declaration5493 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_struct_interfaces_in_struct_declaration5497 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_struct_declaration5502 = new BitSet(new ulong[]{0x4000000000000000UL,0x0000000004000000UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_struct_body_in_struct_declaration5507 = new BitSet(new ulong[]{0x0000000002000002UL});
    public static readonly BitSet FOLLOW_SEMI_in_struct_declaration5511 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_modifier_in_struct_modifiers5520 = new BitSet(new ulong[]{0x0000000000000002UL,0x00000000000003F0UL});
    public static readonly BitSet FOLLOW_set_in_struct_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_90_in_struct_interfaces5557 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_interface_type_list_in_struct_interfaces5561 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_struct_body5568 = new BitSet(new ulong[]{0xA000000000080010UL,0x000000020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_struct_member_declarations_in_struct_body5572 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_struct_body5577 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_member_declaration_in_struct_member_declarations5584 = new BitSet(new ulong[]{0x2000000000080012UL,0x000000020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attributes_in_struct_member_declaration5593 = new BitSet(new ulong[]{0x2000000000080010UL,0x000000020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_modifiers_in_struct_member_declaration5600 = new BitSet(new ulong[]{0x2000000000080010UL,0x000000020047FFFBUL,0x0006D7FFEDFFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_81_in_struct_member_declaration5606 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_struct_member_declaration5610 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_constant_declarators_in_struct_member_declaration5614 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_struct_member_declaration5618 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_event_declaration_in_struct_member_declaration5623 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_67_in_struct_member_declaration5630 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000617FFEDDFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_method_declaration_in_struct_member_declaration5633 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_declaration_in_struct_member_declaration5644 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_class_declaration_in_struct_member_declaration5655 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_declaration_in_struct_member_declaration5666 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_interface_declaration_in_struct_member_declaration5673 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_class_declaration_in_struct_member_declaration5679 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_82_in_struct_member_declaration5686 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_method_declaration_in_struct_member_declaration5690 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_struct_member_declaration5695 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000080002UL,0x000625FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_method_declaration_in_struct_member_declaration5709 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_property_declaration_in_struct_member_declaration5728 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_name_in_struct_member_declaration5751 = new BitSet(new ulong[]{0x0000000000004000UL});
    public static readonly BitSet FOLLOW_DOT_in_struct_member_declaration5753 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000080000UL});
    public static readonly BitSet FOLLOW_indexer_declaration_in_struct_member_declaration5755 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_indexer_declaration_in_struct_member_declaration5764 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_field_declaration_in_struct_member_declaration5777 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_operator_declaration_in_struct_member_declaration5795 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_struct_declaration_in_struct_member_declaration5813 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_enum_declaration_in_struct_member_declaration5819 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_delegate_declaration_in_struct_member_declaration5826 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_conversion_operator_declaration_in_struct_member_declaration5832 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_constructor_declaration_in_struct_member_declaration5837 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_indexer_declarator_in_indexer_declaration5854 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_indexer_declaration5858 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000004001E0UL,0x0000000030000000UL});
    public static readonly BitSet FOLLOW_accessor_declarations_in_indexer_declaration5862 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_indexer_declaration5866 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_83_in_indexer_declarator5876 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_86_in_indexer_declarator5880 = new BitSet(new ulong[]{0x0000000000000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_formal_parameter_list_in_indexer_declarator5884 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_indexer_declarator5888 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_operator_declarator_in_operator_declaration5899 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_operator_body_in_operator_declaration5903 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_173_in_operator_declarator5911 = new BitSet(new ulong[]{0x0000000000031800UL,0xF3F007D800000000UL});
    public static readonly BitSet FOLLOW_set_in_operator_declarator5919 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_operator_declarator5929 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_operator_declarator5933 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_operator_declarator5937 = new BitSet(new ulong[]{0x0000000004000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_binary_operator_declarator_in_operator_declarator5940 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unary_operator_declarator_in_operator_declarator5944 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_overloadable_unary_operator_in_operator_declarator5951 = new BitSet(new ulong[]{0x0000000004000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_unary_operator_declarator_in_operator_declarator5955 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_overloadable_binary_operator_in_operator_declarator5961 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_binary_operator_declarator_in_operator_declarator5965 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_RPAREN_in_unary_operator_declarator5977 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_overloadable_unary_operator0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_89_in_binary_operator_declarator6020 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_binary_operator_declarator6024 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_binary_operator_declarator6028 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_binary_operator_declarator6032 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_100_in_overloadable_binary_operator6043 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_118_in_overloadable_binary_operator6047 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_119_in_overloadable_binary_operator6051 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_117_in_overloadable_binary_operator6055 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_127_in_overloadable_binary_operator6059 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_126_in_overloadable_binary_operator6063 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_120_in_overloadable_binary_operator6067 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator6071 = new BitSet(new ulong[]{0x0000000000020000UL});
    public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator6073 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_124_in_overloadable_binary_operator6077 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_125_in_overloadable_binary_operator6081 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator6085 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_99_in_overloadable_binary_operator6089 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_116_in_overloadable_binary_operator6093 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_121_in_overloadable_binary_operator6097 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration6107 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_operator_body_in_conversion_operator_declaration6111 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_conversion_operator_declarator6119 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000200000000000UL});
    public static readonly BitSet FOLLOW_173_in_conversion_operator_declarator6128 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_conversion_operator_declarator6132 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_conversion_operator_declarator6136 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_conversion_operator_declarator6140 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_conversion_operator_declarator6144 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_conversion_operator_declarator6148 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_operator_body6156 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_constructor_declarator_in_constructor_declaration6166 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_constructor_body_in_constructor_declaration6170 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_constructor_declarator6178 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_constructor_declarator6182 = new BitSet(new ulong[]{0x0000000004000010UL,0x00000000184C0002UL,0x00060DFFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_formal_parameter_list_in_constructor_declarator6186 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_constructor_declarator6191 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_constructor_initializer_in_constructor_declarator6195 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_90_in_constructor_initializer6204 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000280000UL});
    public static readonly BitSet FOLLOW_set_in_constructor_initializer6208 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_constructor_initializer6218 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7F9280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_argument_list_in_constructor_initializer6222 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_constructor_initializer6227 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_constructor_body6235 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_106_in_destructor_declaration6251 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_destructor_declaration6254 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_destructor_declaration6258 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_destructor_declaration6262 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_destructor_body_in_destructor_declaration6267 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_destructor_body6275 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_invocation_start_in_invocation_expression6285 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_arguments_in_invocation_expression6307 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_invocation_part_in_invocation_expression6311 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_invocation_part_in_invocation_expression6322 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000001400000UL});
    public static readonly BitSet FOLLOW_arguments_in_invocation_expression6328 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_predefined_type_in_invocation_start6336 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_invocation_start6353 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_generic_argument_list_in_invocation_start6357 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_83_in_invocation_start6362 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_85_in_invocation_start6368 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_invocation_start6373 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000100000UL});
    public static readonly BitSet FOLLOW_84_in_invocation_start6378 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_invocation_start6382 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_typeof_expression_in_invocation_start6389 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_access_identifier_in_invocation_part6412 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_brackets_in_invocation_part6417 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_declaration_statement_in_statement6434 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_labeled_statement_in_statement6449 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_embedded_statement_in_statement6454 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_embedded_statement6464 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_selection_statement_in_embedded_statement6469 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_iteration_statement_in_embedded_statement6475 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_jump_statement_in_embedded_statement6481 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_try_statement_in_embedded_statement6488 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_checked_statement_in_embedded_statement6493 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unchecked_statement_in_embedded_statement6498 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_lock_statement_in_embedded_statement6503 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_using_statement_in_embedded_statement6508 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_yield_statement_in_embedded_statement6514 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unsafe_statement_in_embedded_statement6520 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_fixed_statement_in_embedded_statement6525 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_statement_in_embedded_statement6530 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_176_in_fixed_statement6540 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_fixed_statement6544 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_pointer_type_in_fixed_statement6548 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_fixed_pointer_declarators_in_fixed_statement6550 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_fixed_statement6554 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_fixed_statement6558 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators6566 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_fixed_pointer_declarators6571 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators6575 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_identifier_in_fixed_pointer_declarator6585 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_fixed_pointer_declarator6589 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator6593 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_fixed_pointer_initializer6603 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_73_in_unsafe_statement6610 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_unsafe_statement6614 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_labeled_statement6621 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_labeled_statement6625 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_statement_in_labeled_statement6629 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_local_variable_declaration_in_declaration_statement6638 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_local_constant_declaration_in_declaration_statement6644 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_declaration_statement6647 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_local_variable_type_in_local_variable_declaration6655 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_local_variable_declarators_in_local_variable_declaration6659 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_177_in_local_variable_type6673 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_178_in_local_variable_type6684 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_type_in_local_variable_type6689 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators6697 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_local_variable_declarators6700 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators6702 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_identifier_in_local_variable_declarator6712 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_local_variable_declarator6715 = new BitSet(new ulong[]{0x4000000000013FF0UL,0x002007D7E16C0012UL,0x000E05FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_local_variable_initializer_in_local_variable_declarator6719 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_local_variable_initializer6730 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_array_initializer_in_local_variable_initializer6735 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_stackalloc_initializer_in_local_variable_initializer6741 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_179_in_stackalloc_initializer6748 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unmanaged_type_in_stackalloc_initializer6752 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_86_in_stackalloc_initializer6756 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_stackalloc_initializer6760 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000800000UL});
    public static readonly BitSet FOLLOW_87_in_stackalloc_initializer6764 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_81_in_local_constant_declaration6772 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_local_constant_declaration6776 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_constant_declarators_in_local_constant_declaration6780 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_expression_statement6788 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_expression_statement6792 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_statement_expression6802 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_if_statement_in_selection_statement6811 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_switch_statement_in_selection_statement6816 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_IF_in_if_statement6826 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_if_statement6830 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_boolean_expression_in_if_statement6834 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_if_statement6838 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_if_statement6842 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0010000000000000UL});
    public static readonly BitSet FOLLOW_else_statement_in_if_statement6851 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_180_in_else_statement6862 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_else_statement6866 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_181_in_switch_statement6874 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_switch_statement6878 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_switch_statement6882 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_switch_statement6886 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_switch_block_in_switch_statement6890 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_62_in_switch_block6898 = new BitSet(new ulong[]{0x8000000000000000UL,0x0000000100000000UL,0x0040000000000000UL});
    public static readonly BitSet FOLLOW_switch_sections_in_switch_block6902 = new BitSet(new ulong[]{0x8000000000000000UL});
    public static readonly BitSet FOLLOW_63_in_switch_block6907 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_switch_section_in_switch_sections6915 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000100000000UL,0x0040000000000000UL});
    public static readonly BitSet FOLLOW_switch_labels_in_switch_section6924 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_statement_list_in_switch_section6928 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_switch_label_in_switch_labels6936 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000100000000UL,0x0040000000000000UL});
    public static readonly BitSet FOLLOW_182_in_switch_label6946 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_constant_expression_in_switch_label6950 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_switch_label6954 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_96_in_switch_label6961 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_switch_label6965 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_while_statement_in_iteration_statement6974 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_do_statement_in_iteration_statement6979 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_for_statement_in_iteration_statement6984 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_foreach_statement_in_iteration_statement6989 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_183_in_while_statement6997 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_while_statement7001 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_boolean_expression_in_while_statement7005 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_while_statement7009 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_while_statement7013 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_184_in_do_statement7021 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_do_statement7025 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0080000000000000UL});
    public static readonly BitSet FOLLOW_183_in_do_statement7029 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_do_statement7033 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_boolean_expression_in_do_statement7037 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_do_statement7041 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_do_statement7045 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_185_in_for_statement7053 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_for_statement7057 = new BitSet(new ulong[]{0x0000000002013FF0UL,0x002007D7E12C0012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_for_initializer_in_for_statement7061 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_for_statement7066 = new BitSet(new ulong[]{0x0000000002013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_for_condition_in_for_statement7070 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_for_statement7075 = new BitSet(new ulong[]{0x0000000004013FF0UL,0x002007D7E12C0012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_for_iterator_in_for_statement7079 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_for_statement7084 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_for_statement7088 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_local_variable_declaration_in_for_initializer7102 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_statement_expression_list_in_for_initializer7107 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_boolean_expression_in_for_condition7117 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_statement_expression_list_in_for_iterator7125 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_statement_expression_in_statement_expression_list7133 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_89_in_statement_expression_list7136 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E12C0012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_statement_expression_in_statement_expression_list7138 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000002000000UL});
    public static readonly BitSet FOLLOW_186_in_foreach_statement7148 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_foreach_statement7152 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_local_variable_type_in_foreach_statement7156 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_foreach_statement7160 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000040UL});
    public static readonly BitSet FOLLOW_134_in_foreach_statement7164 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_foreach_statement7168 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_foreach_statement7172 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_foreach_statement7176 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_break_statement_in_jump_statement7184 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_continue_statement_in_jump_statement7189 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_goto_statement_in_jump_statement7194 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_return_statement_in_jump_statement7199 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_throw_statement_in_jump_statement7204 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_187_in_break_statement7212 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_break_statement7216 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_188_in_continue_statement7224 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_continue_statement7228 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_189_in_goto_statement7236 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000100000002UL,0x00460400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_goto_statement7242 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_182_in_goto_statement7250 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_constant_expression_in_goto_statement7254 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_96_in_goto_statement7262 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_goto_statement7267 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_153_in_return_statement7275 = new BitSet(new ulong[]{0x0000000002013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_return_statement7279 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_return_statement7284 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_190_in_throw_statement7292 = new BitSet(new ulong[]{0x0000000002013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_throw_statement7296 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_throw_statement7301 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_191_in_try_statement7314 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_try_statement7318 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000003UL});
    public static readonly BitSet FOLLOW_catch_clauses_in_try_statement7324 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000003UL});
    public static readonly BitSet FOLLOW_finally_clause_in_try_statement7328 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_finally_clause_in_try_statement7340 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_192_in_catch_clauses7349 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_specific_catch_clauses_in_catch_clauses7354 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_general_catch_clause_in_catch_clauses7358 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses7367 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
    public static readonly BitSet FOLLOW_192_in_specific_catch_clauses7372 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses7377 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
    public static readonly BitSet FOLLOW_general_catch_clause_in_specific_catch_clauses7381 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
    public static readonly BitSet FOLLOW_88_in_specific_catch_clause7391 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_class_type_in_specific_catch_clause7395 = new BitSet(new ulong[]{0x0000000004000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_specific_catch_clause7399 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_specific_catch_clause7404 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_specific_catch_clause7408 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_block_in_general_catch_clause7416 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_193_in_finally_clause7424 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_finally_clause7428 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_94_in_checked_statement7436 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_checked_statement7440 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_95_in_unchecked_statement7448 = new BitSet(new ulong[]{0x4000000002000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_block_in_unchecked_statement7452 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_194_in_lock_statement7460 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_lock_statement7464 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_lock_statement7467 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_lock_statement7471 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_lock_statement7475 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_USING_in_using_statement7483 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_using_statement7487 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E12C0012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_resource_acquisition_in_using_statement7492 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_using_statement7496 = new BitSet(new ulong[]{0x4000000002153FF0UL,0x002007D7E12E0212UL,0xFFA705FFE7DFFFB0UL,0x00000000000007FCUL});
    public static readonly BitSet FOLLOW_embedded_statement_in_using_statement7501 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_local_variable_declaration_in_resource_acquisition7515 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_expression_in_resource_acquisition7520 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_195_in_yield_statement7528 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0800000002000000UL});
    public static readonly BitSet FOLLOW_153_in_yield_statement7533 = new BitSet(new ulong[]{0x0000000000013FF0UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_yield_statement7537 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_yield_statement7541 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_187_in_yield_statement7556 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_yield_statement7560 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_predefined_type0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_identifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_keyword0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_also_keyword0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_set_in_literal0 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_assignment_in_assignment_list10256 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_assignment_list10258 = new BitSet(new ulong[]{0x0000000000013FF2UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attributes_in_field_declarations10269 = new BitSet(new ulong[]{0x0000000000000010UL,0x000000000005FFF3UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_modifiers_in_field_declarations10274 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_field_declarations10279 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_field_declaration_in_field_declarations10283 = new BitSet(new ulong[]{0x0000000000000012UL,0x000000000045FFF3UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attributes_in_property_declaration_list10294 = new BitSet(new ulong[]{0x0000000000000010UL,0x000000000005FFF3UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_modifiers_in_property_declaration_list10299 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_property_declaration_list10304 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_property_declaration_in_property_declaration_list10308 = new BitSet(new ulong[]{0x0000000000000012UL,0x000000000045FFF3UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_constant_declaration_in_constant_declarations10318 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000020000UL});
    public static readonly BitSet FOLLOW_literal_in_literals10326 = new BitSet(new ulong[]{0x0000000000003FF2UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_attributes_in_delegate_declaration_list10336 = new BitSet(new ulong[]{0x2000000000080000UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_modifiers_in_delegate_declaration_list10341 = new BitSet(new ulong[]{0x2000000000080000UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_delegate_declaration_in_delegate_declaration_list10346 = new BitSet(new ulong[]{0x2000000000080002UL,0x000000020041FFF9UL,0x0000120008000000UL});
    public static readonly BitSet FOLLOW_local_variable_declaration_in_local_variable_declaration_list10357 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_local_variable_declaration_list10359 = new BitSet(new ulong[]{0x0000000000000012UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_local_variable_initializer_in_local_variable_initializer_list10370 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_local_variable_initializer_list10372 = new BitSet(new ulong[]{0x4000000000013FF2UL,0x002007D7E16C0012UL,0x000E05FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_expression_in_expression_list_test10383 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_expression_list_test10385 = new BitSet(new ulong[]{0x0000000000013FF2UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_unary_expression_in_unary_expression_list10396 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_unary_expression_list10398 = new BitSet(new ulong[]{0x0000000000013FF2UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_invocation_expression_in_invocation_expression_list10409 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_invocation_expression_list10411 = new BitSet(new ulong[]{0x0000000000000012UL,0x0000000400280002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_primary_expression_in_primary_expression_list10422 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_primary_expression_list10424 = new BitSet(new ulong[]{0x0000000000003FF2UL,0x00000007E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression_list10435 = new BitSet(new ulong[]{0x0000000002000000UL});
    public static readonly BitSet FOLLOW_SEMI_in_non_assignment_expression_list10437 = new BitSet(new ulong[]{0x0000000000013FF2UL,0x002007D7E1280012UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_modifiers_in_method_declarations10448 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_82_in_method_declarations10452 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_method_declarations10456 = new BitSet(new ulong[]{0x0000000000003FF0UL,0x0000000000000002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_method_declaration_in_method_declarations10459 = new BitSet(new ulong[]{0x0000000000000012UL,0x000000000005FFF3UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_67_in_synpred1_cs261 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred2_cs525 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_synpred2_cs529 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred3_cs544 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_synpred3_cs548 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred4_cs563 = new BitSet(new ulong[]{0x0000000000004000UL});
    public static readonly BitSet FOLLOW_DOT_in_synpred4_cs567 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000080000UL});
    public static readonly BitSet FOLLOW_83_in_synpred4_cs571 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_83_in_synpred5_cs691 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_brackets_in_synpred5_cs696 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_85_in_synpred6_cs716 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_brackets_in_synpred6_cs720 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_object_creation_expression_in_synpred7_cs756 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_set_in_synpred7_cs760 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_delegate_creation_expression_in_synpred8_cs804 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_synpred9_cs929 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_99_in_synpred9_cs934 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_88_in_synpred10_cs1186 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000040002UL,0x000605FFE5DFFFB0UL,0x00000000000007F8UL});
    public static readonly BitSet FOLLOW_type_in_synpred10_cs1190 = new BitSet(new ulong[]{0x0000000004000000UL});
    public static readonly BitSet FOLLOW_RPAREN_in_synpred10_cs1194 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_array_creation_expression_in_synpred11_cs1436 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_arguments_in_synpred12_cs1516 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_set_in_synpred12_cs1520 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unbound_type_name_in_synpred13_cs2046 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_generic_dimension_specifier_in_synpred14_cs2104 = new BitSet(new ulong[]{0x0000000000004000UL});
    public static readonly BitSet FOLLOW_DOT_in_synpred14_cs2108 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_synpred15_cs2240 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_99_in_synpred15_cs2244 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_synpred16_cs2289 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_99_in_synpred16_cs2294 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_predefined_type_in_synpred17_cs2387 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_type_name_in_synpred17_cs2391 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_rank_specifiers_in_synpred17_cs2395 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_predefined_type_in_synpred18_cs2422 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000003000000000UL});
    public static readonly BitSet FOLLOW_type_name_in_synpred18_cs2426 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000003000000000UL});
    public static readonly BitSet FOLLOW_100_in_synpred18_cs2431 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001000000000UL});
    public static readonly BitSet FOLLOW_101_in_synpred18_cs2436 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_unary_expression_in_synpred19_cs2618 = new BitSet(new ulong[]{0x0000000000020000UL,0x000FF80000000004UL});
    public static readonly BitSet FOLLOW_assignment_operator_in_synpred19_cs2622 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_cast_expression_in_synpred20_cs2680 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_anonymous_function_signature_in_synpred21_cs2896 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000008UL});
    public static readonly BitSet FOLLOW_131_in_synpred21_cs2900 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_query_expression_in_synpred22_cs2911 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_132_in_synpred23_cs3334 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_89_in_synpred24_cs3836 = new BitSet(new ulong[]{0x0000000000000010UL,0x0000000000000002UL,0x00060400E5DFFFB0UL,0x0000000000000408UL});
    public static readonly BitSet FOLLOW_identifier_in_synpred24_cs3840 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
    public static readonly BitSet FOLLOW_66_in_synpred24_cs3844 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred25_cs4362 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_synpred25_cs4366 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred26_cs5227 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_synpred26_cs5231 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred27_cs5252 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_synpred27_cs5256 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred28_cs5700 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000001000000UL});
    public static readonly BitSet FOLLOW_88_in_synpred28_cs5704 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred29_cs5719 = new BitSet(new ulong[]{0x4000000000000000UL});
    public static readonly BitSet FOLLOW_62_in_synpred29_cs5723 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_member_name_in_synpred30_cs5738 = new BitSet(new ulong[]{0x0000000000004000UL});
    public static readonly BitSet FOLLOW_DOT_in_synpred30_cs5742 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000080000UL});
    public static readonly BitSet FOLLOW_83_in_synpred30_cs5746 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_arguments_in_synpred31_cs6292 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000000400000UL});
    public static readonly BitSet FOLLOW_set_in_synpred31_cs6296 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_synpred32_cs6343 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000800000000UL});
    public static readonly BitSet FOLLOW_99_in_synpred32_cs6348 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_declaration_statement_in_synpred33_cs6429 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_identifier_in_synpred34_cs6440 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000004000000UL});
    public static readonly BitSet FOLLOW_90_in_synpred34_cs6444 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_177_in_synpred35_cs6668 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_178_in_synpred36_cs6679 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_180_in_synpred37_cs6846 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_local_variable_declaration_in_synpred38_cs7097 = new BitSet(new ulong[]{0x0000000000000002UL});
    public static readonly BitSet FOLLOW_local_variable_declaration_in_synpred39_cs7510 = new BitSet(new ulong[]{0x0000000000000002UL});

}
